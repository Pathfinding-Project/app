name: Create Release
on:
  push:
    tags:
      - "v*"
jobs:
  create-release:
    runs-on: ubuntu-latest
    env:
      CI: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1
      - name: Install Wine
        run: |
          sudo dpkg --add-architecture i386
          wget -qO - https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add -
          sudo add-apt-repository ppa:cybermax-dexter/sdl2-backport
          sudo apt-add-repository "deb https://dl.winehq.org/wine-builds/ubuntu $(lsb_release -cs) main"
          sudo apt install --install-recommends winehq-stable
      - name: Build client
        run: |
          npm install --force
          cd client && npm run build && npm run package
      - name: Build adapter (Filesystem Sync)
        run: |
          cd adapter-fs-bridge && npm i && npm run build && zip -r dist.zip dist
      - name: Build adapter (Iron Harvest)
        run: |
          cd adapter-iron-harvest && npm i && npm run build && zip -r dist.zip dist
      - name: Build adapter (Warthog Websocket)
        run: |
          cd adapter-warthog-websocket && npm i && npm run build && zip -r dist.zip dist
      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            No release notes.
          draft: true
          prerelease: true
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./client/bin/Posthoc-darwin-arm64.zip
          asset_name: Posthoc-darwin-arm64.zip
          asset_content_type: application/zip
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./client/bin/Posthoc-linux-x64.zip
          asset_name: Posthoc-linux-x64.zip
          asset_content_type: application/zip
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./client/bin/Posthoc-win32-x64.zip
          asset_name: Posthoc-win32-x64.zip
          asset_content_type: application/zip
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./adapter-fs-bridge/dist.zip
          asset_name: adapter-fs-bridge.zip
          asset_content_type: application/zip
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./adapter-iron-harvest/dist.zip
          asset_name: adapter-iron-harvest.zip
          asset_content_type: application/zip
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./adapter-warthog-websocket/dist.zip
          asset_name: adapter-warthog-websocket.zip
          asset_content_type: application/zip

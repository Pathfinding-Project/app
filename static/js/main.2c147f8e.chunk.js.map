{"version":3,"sources":["webpack:///./src/components/home-page/temp.module.css?6ccd","components/generic/Flex.tsx","components/home-app-bar/HomeBar.tsx","slices/reducers.tsx","slices/createSlice.tsx","slices/features.ts","components/script-editor/makeTemplate.tsx","components/script-editor/templates.tsx","slices/UIState.ts","components/images/grid_pf.png","components/images/network_pf.png","components/home-page/PFCard.tsx","pages/LaunchPage.tsx","slices/settings.ts","theme.tsx","components/generic/Snackbar.tsx","components/generic/Space.tsx","slices/connections.ts","hooks/useSmallDisplay.tsx","components/generic/Select.tsx","components/app-bar/FeaturePicker.tsx","components/app-bar/upload.tsx","components/app-bar/Input.tsx","components/generic/IconButtonWithTooltip.tsx","slices/specimen.ts","hooks/usePlaybackState.tsx","components/app-bar/Playback.tsx","hooks/useScrollState.tsx","components/generic/ScrollPanel.tsx","components/generic/Modal.tsx","workers/hash.worker.ts","client/IPCTransport.ts","client/internal.ts","client/NativeTransport.ts","client/SocketIOTransport.ts","client/index.ts","components/generic/ListEditor.tsx","components/generic/Overline.tsx","hooks/useConnectionResolver.tsx","slices/loading.ts","hooks/useConnectionStatus.tsx","components/settings-editor/ServerEditor.tsx","components/settings-editor/ServerListEditor.tsx","components/settings-editor/SettingsEditor.tsx","components/app-bar/Settings.tsx","components/app-bar/Title.tsx","components/generic/Switch.tsx","components/breakpoint-editor/comparators.tsx","components/breakpoint-editor/intrinsicProperties.tsx","components/breakpoint-editor/eventTypes.tsx","components/breakpoint-editor/BreakpointEditor.tsx","components/breakpoint-editor/propertyPaths.tsx","components/breakpoint-editor/BreakpointListEditor.tsx","components/script-editor/ScriptEditor.tsx","components/debug-options-editor/saveJSON.tsx","components/debug-options-editor/DebugOptionsEditor.tsx","components/app-bar/Utility.tsx","components/app-bar/Camera.tsx","components/app-bar/Controls.tsx","components/renderer/default/index.tsx","components/script-editor/call.tsx","components/renderer/info.tsx","components/renderer/raster/config.tsx","components/renderer/raster/PixiViewport.tsx","components/renderer/raster/Viewport.tsx","components/renderer/raster/index.tsx","components/renderer/raster/makeGraphic.tsx","components/renderer/raster/Draw.tsx","components/renderer/raster/NodeList.tsx","components/renderer/raster/Selected.tsx","components/renderer/raster/Selection.tsx","components/renderer/planar/Guides.tsx","components/renderer/colors.tsx","components/renderer/planar/options.tsx","components/renderer/planar/index.tsx","components/renderer/grid/Path.tsx","hooks/useMap.tsx","components/renderer/grid/normalize.tsx","components/renderer/grid/options.tsx","components/renderer/grid/Overlay.tsx","components/renderer/Parser.tsx","components/renderer/NodeMatcher.tsx","components/renderer/grid/parse.tsx","components/renderer/grid/index.tsx","components/renderer/mesh/normalize.tsx","components/renderer/mesh/options.tsx","components/renderer/mesh/parse.tsx","components/renderer/mesh/Path.tsx","components/renderer/mesh/index.tsx","components/renderer/network/Path.tsx","components/renderer/network/Overlay.tsx","components/renderer/network/normalize.tsx","components/renderer/network/options.tsx","components/renderer/network/parse.tsx","components/renderer/network/index.tsx","components/renderer/index.tsx","components/generic/PlaceholderCard.tsx","components/generic/Toolbar.tsx","components/generic/LazyList.tsx","components/inspector/EventLabel.tsx","components/generic/Property.tsx","components/inspector/PropertyList.tsx","components/inspector/EventInspector.tsx","components/inspector/EventListInspector.tsx","components/inspector/InfoPanel.tsx","components/generic/Label.tsx","components/inspector/SelectionMenu.tsx","components/inspector/index.tsx","pages/Debugger.tsx","pages/DocsPage.tsx","pages/AboutUsPage.tsx","App.tsx","reportWebVitals.ts","services/ConnectionsService.tsx","hooks/useBreakpoints.tsx","services/PlaybackService.tsx","services/FeaturesService.tsx","hooks/useMapContent.tsx","workers/usingWorker.ts","workers/async.ts","services/SpecimenService.tsx","slices/SliceProvider.tsx","index.tsx"],"names":["vertical","props","Box","position","height","width","display","flexDirection","pages","appName","navigate","useNavigate","anchorElNav","setAnchorElNav","React","handleOpenNavMenu","event","currentTarget","handleCloseNavMenu","AppBar","Container","maxWidth","Toolbar","disableGutters","Typography","variant","noWrap","component","href","sx","mr","xs","md","fontFamily","fontWeight","letterSpacing","color","textDecoration","flexGrow","IconButton","size","aria-label","aria-controls","aria-haspopup","onClick","MenuIcon","Menu","id","anchorEl","anchorOrigin","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","MenuItem","textAlign","capitalize","Button","my","HomeBar","replace","_","next","merge","prev","initialState","init","effect","reduce","Store","createContext","noop","useContext","children","value","set","useReducer","p","n","slice","useMemo","useAsync","r","Provider","key","cache","localStorage","getItem","JSON","parse","setItem","stringify","useFeatures","FeaturesProvider","createSlice","algorithms","maps","formats","returnType","params","join","name","type","method","prefix","close","chunks","chunk","split","description","c","makeTypeString","defaultReturnValue","methods","m","makeComment","makeBody","templates","shouldRender","shouldBreak","useUIState","UIStateProvider","code","makeTemplate","values","mapDefaults","start","undefined","end","title","text","demos","img","setUIState","algName","mapName","find","algorithm","Grid","item","sm","style","Card","CardContent","container","columnSpacing","className","styles","bodytext","br","demo","textLink","LoadSpecificDebugger","src","grid_png","network_png","Flex","bgcolor","div","overflow","rowSpacing","alignItems","PFCard","LaunchPage","defaultRemotes","url","transport","defaultPlaybackRate","useSettings","SettingsProvider","remote","playbackRate","withLocalStorage","shadow","constant","acrylic","palette","backdropFilter","background","SnackbarContext","snackPack","setSnackPack","useState","setOpen","current","setCurrent","useEffect","length","handleMessage","useCallback","message","Date","getTime","handleClose","reason","handleExited","Snackbar","autoHideDuration","TransitionProps","onExited","action","CloseIcon","px","useConnections","ConnectionsProvider","theme","useTheme","useMediaQuery","breakpoints","down","itemHeight","padding","trigger","items","onChange","placeholder","useSmallDisplay","max","index","findIndex","State","state","Tooltip","span","bindTrigger","bindMenu","v","label","selected","TextField","minWidth","select","e","target","icon","Select","startCase","disabled","startIcon","Type","Space","s","pop","shift","customMapId","custom","upload","accept","f","file","strict","ext","format","content","Error","notify","useSnackbar","connections","FeaturePicker","MapIcon","source","CodeIcon","rest","useSpecimen","SpecimenProvider","specimen","playback","step","ready","playing","eventList","canPlay","canPause","canStop","canStepForward","canStepBackward","stepBy","clamp","play","pause","stop","stepForward","stepBackward","tick","usePlaybackState","PreviousIcon","PauseIcon","PlayIcon","ForwardIcon","StopIcon","threshold","showControls","setShowControls","isAbsoluteTop","setIsAbsoluteTop","isTop","setIsTop","setTarget","lastTop","useRef","listener","newIsTop","scrollTop","Math","abs","addEventListener","passive","removeEventListener","onTarget","onScroll","ref","PanelContext","elevatedStyle","transitionProperties","elevatedChildren","simple","panel","usePanel","useScrollState","paper","boxShadow","shadows","elevation","primary","transition","transitions","create","marginRight","spacing","edge","ArrowBack","gridColumn","gridRow","flex","Fade","in","mountOnEnter","unmountOnExit","actions","scrollable","setContent","contentRef","setContentRef","hasOverflowingChildren","setHasOverflowingChildren","childHeight","setChildHeight","callback","doesOverflow","window","innerHeight","offsetHeight","ceil","ob","ResizeSensor","detach","useVariant","Dialog","fullScreen","paddingTop","PaperProps","borderRadius","shape","default","ScrollPanel","options","ModalProps","appBar","ModalAppBarProps","PopupState","isOpen","cloneElement","Modal","ModalAppBar","connect","worker","postMessage","Promise","res","disconnect","terminate","call","rpc","request","IPCWorker","JSONRPCClient","data","receive","uri","protocol","pathname","scheme","decodeURIComponent","internal","trace","version","mapURI","parseURI","includes","handler","hostname","socket","io","response","off","emit","on","transports","socketio","constructor","SocketIOTransport","ipc","IPCTransport","native","NativeTransport","defaultTransport","first","keys","DefaultListEditorInput","forwardRef","InputBase","fullWidth","inputRef","LabelIcon","useSwitch","useDelete","useEdit","useEditButton","onChangeItem","onDeleteItem","enabled","element","i","extrasPlacement","autoFocus","cardStyle","field","setField","marginTop","marginBottom","marginLeft","onDelete","onValueChange","Switch","checked","focus","EditIcon","DeleteIcon","borderColor","paddingRight","addItemLabel","onAddItem","placeholderText","getCategory","getOrder","extras","isInitialRender","useInitialRender","intermediateItems","setIntermediateItems","newIndex","setNewIndex","timeout","setTimeout","duration","standard","clearTimeout","uniqBy","c2","x","render","Collapse","appear","ListEditorField","sorted","sortBy","List","subheader","ListSubheader","disableSticky","gutterBottom","mt","out","forEach","isNewCategory","push","some","pl","pb","pt","ml","mb","disableElevation","Add","arr","editor","setState","Editor","handleChange","k","filter","b","Dot","fontSize","transform","model","resolve","useLoading","LoadingProvider","setLoading","task","loading","useConnectionResolver","entry","statusColor","connected","connecting","error","connection","useConnection","status","useConnectionStatus","py","Title","entries","setSettings","ListEditor","ServerEditor","debounce","ResetIcon","formatLabel","tab","setTab","TabContext","TabList","Tab","Divider","TabPanel","renderHeading","renderLabel","Slider","marks","baseRate","min","valueLabelFormat","valueLabelDisplay","defaultValue","onChangeCommitted","defaultChecked","ServerListEditor","IconButtonWithTooltip","SettingsIcon","SettingsEditor","whiteSpace","Link","FormControlLabel","control","MuiSwitch","comparators","apply","a","intrinsicProperties","eventTypes","properties","flexItem","orientation","mx","textOverflow","last","property","condition","reference","inputProps","inputMode","pattern","active","propertyPaths","uniq","flat","paths","nodeStructure","get","BreakpointEditor","DELAY","AutoSize","CircularProgress","language","minimap","filename","download","monotonicF","monotonicG","BreakpointListEditor","save","ScriptEditor","BugIcon","DebugOptionsEditor","divider","useAcrylic","top","left","zIndex","Input","Playback","Utility","CameraControls","Settings","justifyContent","DisabledIcon","fn","memo","script","Function","getStep","nodes","take","findLastIndex","node","scale","events","prop","PixiViewportBase","register","global","input","equals","world","toWorld","viewport","app","stopPropagation","passiveWheel","drag","pinch","wheel","friction","clampZoom","maxScale","minScale","zoomPercent","equal","Component","PixiComponent","applyProps","RasterRenderer","ViewportProps","StageProps","BoxProps","Stage","backgroundColor","autoDensity","clearBeforeRender","resolution","antialias","Viewport","draw","Graphics","g","radius","fillAlpha","beginFill","drawCircle","y","endFill","square","drawRect","box","line","weight","moveTo","lineStyle","lineTo","tri","fill","drawPolygon","Node","Square","Line","makeGraphic","clear","defaultCondition","identity","floor","memoize","NodeList","alpha","animateScale","animateAlpha","t","useTween","to","hover","highlight","point","Selected","WEIGHT","grid","range","minX","minY","maxX","maxY","tint","h","parseInt","colorsHex","teal","destination","pink","expanding","deepOrange","generating","yellow","closing","blueGrey","colors","mapValues","hex","orange","progressOptions","variables","getColor","shadowOptions","Children","onSelect","selection","overlay","ShadowProps","ProgressProps","info","setRef","setActive","setHover","from","snap","nodeAt","matchNode","handleClick","getBoundingClientRect","selectionInfo","handleMouseEvent","resolveHover","throttle","delay","cursor","onMouseDown","onMouseOver","Nodes","defaultShadowOptions","LazyNodes","defaultProgressOptions","Selection","Guides","obj","isUndefined","isNull","path","keyBy","defined","pId","normalize","bounds","wallColor","grey","wallOptions","pointOf","o","byPoint","makeMapParser","wall","lines","w","d","walls","row","tile","x1","y1","between","useMap","PlanarRenderer","Overlay","Path","log10","mag","pairs","steps","verts","edges","flatMap","minBy","maxBy","shadowColor","cx","cy","x2","y2","edgeColor","vertColor","edgeOptions","vertOptions","sqrt","dist","minAt","maxAt","vert","startsWith","aabb","renderers","GridRenderer","xy","NetworkRenderer","mesh","MeshRenderer","DefaultRenderer","pointerEvents","Stack","direction","renderItem","listOptions","totalCount","itemContent","hidden","Overline","getColorHex","HiddenIcon","opacity","flexWrap","Property","cardStyles","CardActionArea","EventLabel","PropertyList","PlaceholderCard","ListIcon","scrollToIndex","align","behavior","offset","EventInspector","Placeholder","StepsIcon","EventListInspector","secondary","anchorReference","anchorPosition","ListItem","ListItemText","StartIcon","DestinationIcon","Label","ListItemIcon","renderer","getRenderer","setSelection","LinearProgress","createElement","InfoPanel","right","SelectionMenu","Controls","Inspector","Debugger","DocsPage","AboutUsPage","BrowserRouter","Routes","Route","HomeScreen","App","reportWebVitals","onPerfEntry","import","then","getCLS","getFID","getFCP","getLCP","getTTFB","ms","timed","now","result","any","wait","delta","setConnections","usingLoadingState","useLoadingState","aborted","cs","tp","getTransport","ping","bind","isType","match","lower","cancelled","requestAnimationFrame","useRaf","useBreakpoints","cancellable","trimEnd","withSource","setFeatures","signal","features","getMap","usingWorker","usingWorkerTask","inp","onmessage","hashAsync","HashWorker","solve","hash","encodeURIComponent","setSpecimen","useMapContent","solution","instances","isEmpty","slices","services","ConnectionsService","PlaybackService","SpecimenService","FeaturesService","StrictMode","CssBaseline","ThemeProvider","SnackbarProvider","EnvironmentProvider","document","getElementById"],"mappings":"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","file":"static/js/main.2c147f8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodytext\":\"temp_bodytext__JKNTU\"};","import { Box, BoxProps } from \"@material-ui/core\";\r\n\r\nexport type FlexProps = {\r\n  vertical?: boolean;\r\n} & BoxProps;\r\n\r\nexport function Flex({ vertical, ...props }: FlexProps) {\r\n  return (\r\n    <Box\r\n      position=\"relative\"\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      display=\"flex\"\r\n      flexDirection={vertical ? \"column\" : \"row\"}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n","import * as React from 'react';\nimport { AppBar, Box, Toolbar, Typography, Container, Button, IconButton, Menu, MenuItem } from '@material-ui/core';\nimport { useNavigate } from 'react-router-dom';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { capitalize } from '@material-ui/core';\n\nconst pages = ['docs', 'debugger', 'about us'];\nconst appName = \"PFAlgoViz\"\n\n/**\n * Function which returns the HomeBar React component\n * Basically copied from https://mui.com/material-ui/react-app-bar/\n * @returns a HomeBar React component\n */\nfunction HomeBar() {\n    const navigate = useNavigate();\n\n    const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\n\n    const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorElNav(event.currentTarget);\n    };\n\n    const handleCloseNavMenu = () => {\n        setAnchorElNav(null);\n    };\n\n    return (\n        <AppBar position=\"static\">\n            <Container maxWidth=\"xl\">\n                <Toolbar disableGutters>\n\n                    {/* This half is when the screen size is small */}\n                    <Typography\n                        variant=\"h6\"\n                        noWrap\n                        component=\"a\"\n                        href=\"/\"\n                        sx={{\n                            mr: 2,\n                            display: { xs: 'none', md: 'flex' },\n                            fontFamily: 'monospace',\n                            fontWeight: 700,\n                            letterSpacing: '.3rem',\n                            color: 'inherit',\n                            textDecoration: 'none',\n                        }}\n                    >\n                        {appName}\n                    </Typography>\n                    \n                    <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n                        <IconButton\n                            size=\"medium\"\n                            aria-label=\"menu-icon\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleOpenNavMenu}\n                            color=\"inherit\"\n                        >\n                            <MenuIcon></MenuIcon>\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorElNav}\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: 'top',\n                                horizontal: 'left',\n                            }}\n                            open={Boolean(anchorElNav)}\n                            onClose={handleCloseNavMenu}\n                            sx={{\n                                display: { xs: 'block', md: 'none' },\n                            }}\n                        >\n                            {pages.map((page) => (\n                                <MenuItem key={page} onClick={()=>navigate(`/${page}`)}>\n                                    <Typography textAlign=\"center\">{capitalize(page)}</Typography>\n                                </MenuItem>\n                            ))}\n                        </Menu>\n                    </Box>\n\n                    {/* This half is when the screen size is large */}\n                    <Typography\n                        variant=\"h5\"\n                        noWrap\n                        component=\"a\"\n                        href=\"\"\n                        sx={{\n                            mr: 2,\n                            display: { xs: 'flex', md: 'none' },\n                            flexGrow: 1,\n                            fontFamily: 'monospace',\n                            fontWeight: 700,\n                            letterSpacing: '.3rem',\n                            color: 'inherit',\n                            textDecoration: 'none',\n                        }}\n                    >\n                        {appName}\n                    </Typography>\n\n\n                    <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n                        {pages.map((page) => (\n                            <Button\n                                key={page}\n                                onClick={()=>navigate(`/${page}`)}\n                                sx={{ my: 2, color: 'white', display: 'block' }}\n                            >\n                                {page}\n                            </Button>\n                        ))}\n                    </Box>\n                </Toolbar>\n            </Container>\n        </AppBar>\n    );\n}\n\nexport default HomeBar;","export type Reducer<T, U = T> = (prev: T, next: U) => T;\n\nexport const replace = (_: any, next: any) => next;\n\nexport const merge = (prev: any, next: any) => ({ ...prev, ...next });\n","import { noop } from \"lodash\";\r\nimport {\r\n  createContext,\r\n  ReactNode,\r\n  useContext,\r\n  useMemo,\r\n  useReducer,\r\n} from \"react\";\r\nimport { useAsync } from \"react-use\";\r\nimport { Reducer, merge } from \"./reducers\";\r\n\r\ntype Slice<T, U = T> = [T, (next: U) => void];\r\n\r\ntype Options<T, U> = {\r\n  init?: () => Promise<U | undefined>;\r\n  effect?: (state: { prev: T; next: T }) => void;\r\n  reduce?: Reducer<T, U>;\r\n};\r\n\r\nexport function createSlice<T, U = T>(\r\n  initialState: T,\r\n  { init, effect, reduce = merge }: Options<T, U> = {}\r\n) {\r\n  const Store = createContext<Slice<T, U>>([initialState, noop]);\r\n  return [\r\n    // Hook\r\n    () => useContext(Store),\r\n    // Context\r\n    ({ children }: { children?: ReactNode }) => {\r\n      const [value, set] = useReducer((p: T, n: U) => {\r\n        const next = reduce(p, n);\r\n        effect?.({ prev: p, next });\r\n        return next;\r\n      }, initialState);\r\n      const slice = useMemo<Slice<T, U>>(() => [value, set], [value, set]);\r\n      useAsync(async () => {\r\n        const r = await init?.();\r\n        if (r) set(r);\r\n      });\r\n      return <Store.Provider value={slice}>{children}</Store.Provider>;\r\n    },\r\n  ] as const;\r\n}\r\n\r\nexport function withLocalStorage<T>(key: string) {\r\n  return {\r\n    init: () => {\r\n      const cache = localStorage.getItem(key);\r\n      if (cache) return JSON.parse(cache);\r\n    },\r\n    effect: ({ next }) => localStorage.setItem(key, JSON.stringify(next)),\r\n  } as Options<T, T>;\r\n}\r\n","import { FeatureDescriptor } from \"protocol/FeatureQuery\";\r\nimport { createSlice } from \"./createSlice\";\r\n\r\ntype FeatureDescriptorWithSource = FeatureDescriptor & {\r\n  source: string;\r\n};\r\n\r\nexport type Features = {\r\n  algorithms: FeatureDescriptorWithSource[];\r\n  maps: (FeatureDescriptorWithSource & { type: string })[];\r\n  formats: FeatureDescriptorWithSource[];\r\n};\r\n\r\nexport const [useFeatures, FeaturesProvider] = createSlice<Features>({\r\n  algorithms: [],\r\n  maps: [],\r\n  formats: [],\r\n});\r\n","import { chunk, join, map, split } from \"lodash\";\r\nimport { FunctionTemplate } from \"./FunctionTemplate\";\r\n\r\ntype GenericFunctionTemplate = FunctionTemplate<[...any], any>;\r\n\r\nfunction makeTypeString({ returnType, params }: GenericFunctionTemplate) {\r\n  return `@type {(${join(\r\n    map(params, (p) => `${p.name}: ${p.type}`),\r\n    \", \"\r\n  )}) => ${returnType}}`;\r\n}\r\n\r\nfunction makeComment(method: GenericFunctionTemplate) {\r\n  const [open, prefix, close] = [\"/**\", \" * \", \" */\"];\r\n  const chunks = map(chunk(split(method.description, \" \"), 9), (c) =>\r\n    join(c, \" \")\r\n  );\r\n  return join(\r\n    [\r\n      open,\r\n      ...map(chunks, (c) => `${prefix}${c}`),\r\n      `${prefix}${makeTypeString(method)}`,\r\n      close,\r\n    ],\r\n    \"\\n\"\r\n  );\r\n}\r\n\r\nfunction makeBody({\r\n  name,\r\n  params,\r\n  defaultReturnValue,\r\n}: GenericFunctionTemplate) {\r\n  return join(\r\n    [\r\n      `function ${name}(${join(map(params, \"name\"), \", \")}) {`,\r\n      `    return ${JSON.stringify(defaultReturnValue)};`,\r\n      `}`,\r\n    ],\r\n    \"\\n\"\r\n  );\r\n}\r\n\r\nexport function makeTemplate(methods?: GenericFunctionTemplate[]) {\r\n  return join(\r\n    map(methods, (m) => join([makeComment(m), makeBody(m)], \"\\n\")),\r\n    \"\\n\\n\"\r\n  );\r\n}\r\n","import { TraceEvent } from \"protocol/Trace\";\r\nimport { FunctionTemplate } from \"./FunctionTemplate\";\r\n\r\nexport type ShouldBreak = FunctionTemplate<\r\n  [number, TraceEvent, TraceEvent[]],\r\n  boolean\r\n>;\r\n\r\nexport const shouldBreak: ShouldBreak = {\r\n  name: \"shouldBreak\",\r\n  description:\r\n    \"Define in what situations the debugger should break, in addition to the conditions defined in the standard options.\",\r\n  params: [\r\n    { name: \"step\", type: \"number\" },\r\n    { name: \"event\", type: \"any\" },\r\n    { name: \"events\", type: \"any\" },\r\n  ],\r\n  defaultReturnValue: false,\r\n  returnType: \"boolean\",\r\n};\r\n\r\nexport type ShouldRender = FunctionTemplate<\r\n  [number, TraceEvent, TraceEvent[]],\r\n  boolean\r\n>;\r\n\r\nexport const shouldRender: ShouldRender = {\r\n  name: \"shouldRender\",\r\n  description: \"Define which objects the renderer should display.\",\r\n  params: [\r\n    { name: \"step\", type: \"number\" },\r\n    { name: \"event\", type: \"any\" },\r\n    { name: \"events\", type: \"any\" },\r\n  ],\r\n  defaultReturnValue: true,\r\n  returnType: \"boolean\",\r\n};\r\n\r\nexport const templates = {\r\n  shouldRender,\r\n  shouldBreak,\r\n};\r\n","import { makeTemplate } from \"components/script-editor/makeTemplate\";\r\nimport { templates } from \"components/script-editor/templates\";\r\nimport { values } from \"lodash\";\r\nimport { Feature } from \"protocol/FeatureQuery\";\r\nimport { TraceEventType } from \"protocol/Trace\";\r\nimport { createSlice } from \"./createSlice\";\r\n\r\nexport type PlaybackStateType = \"playing\" | \"paused\" | undefined;\r\n\r\ntype PlaybackState = { playback?: PlaybackStateType; step?: number };\r\n\r\nexport type Map = Partial<\r\n  Feature & {\r\n    format: string;\r\n    source?: string;\r\n  }\r\n>;\r\n\r\ntype InputState = {\r\n  algorithm?: string;\r\n  map?: Map;\r\n};\r\n\r\nexport type Comparator = {\r\n  key: string;\r\n  apply: (value: number, reference: number) => boolean;\r\n};\r\n\r\nexport type Breakpoint = {\r\n  key: string;\r\n  property?: string;\r\n  reference?: number;\r\n  condition?: Comparator;\r\n  active?: boolean;\r\n  type?: TraceEventType;\r\n};\r\n\r\ntype DebugOptionsState = {\r\n  code?: string;\r\n  monotonicF?: boolean;\r\n  monotonicG?: boolean;\r\n  breakpoints?: Breakpoint[];\r\n};\r\n\r\ntype SpecimenState = {\r\n  start?: number;\r\n  end?: number;\r\n};\r\n\r\nexport type UIState = InputState &\r\n  PlaybackState &\r\n  DebugOptionsState &\r\n  SpecimenState;\r\n\r\nexport const [useUIState, UIStateProvider] = createSlice<\r\n  UIState,\r\n  Partial<UIState>\r\n>({\r\n  code: makeTemplate(values(templates)),\r\n});\r\n","export default __webpack_public_path__ + \"static/media/grid_pf.65c5e152.png\";","export default __webpack_public_path__ + \"static/media/network_pf.063f51a3.png\";","import { Grid, Card, Typography } from \"@material-ui/core\";\nimport CardContent from '@material-ui/core/CardContent';\nimport styles from \"./temp.module.css\";\nimport { find } from \"lodash\";\nimport { useNavigate } from 'react-router-dom';\nimport { useFeatures } from \"slices/features\";\nimport { useUIState } from \"slices/UIState\";\nimport grid_png from \"../images/grid_pf.png\";\nimport network_png from \"../images/network_pf.png\";\n\nconst mapDefaults = { start: undefined, end: undefined };\n\n/**\n * The type for the Pathfining Card Info object\n */\ntype PFCardInfo = {\n    title: string;\n    text: string;\n    demos: [string, string][];\n    img: string;\n};\n\n/**\n * Creates the Information Cards for the different Pathfinding formats\n * Small problem with the img section, where it will need to be updated\n * to allow for new images to be inserted\n * @param param0 an object of PFCardInfo containing all the information needed for the Card\n * @returns the Card as an React component\n */\nexport function PFCard({ title, text, demos, img }: PFCardInfo) {\n\n    const navigate = useNavigate();\n    const [{ algorithms, maps }] = useFeatures();\n    const [, setUIState] = useUIState();\n    function LoadSpecificDebugger(algName: string, mapName: string) {\n        setUIState({ ...mapDefaults, map: find(maps, { name: mapName }) })\n        setUIState({ algorithm: find(algorithms, { name: algName })?.id })\n        navigate('/debugger');\n    }\n    return (\n        <Grid item xs={12} sm={12} md={6} style={{ display: 'flex' }}>\n            <Card>\n                <CardContent>\n                    <Typography variant=\"h6\">\n                        {title}\n                    </Typography>\n                    {/* Grid separating the text and picture */}\n                    <Grid container columnSpacing={2} >\n                        <Grid item xs={4} sm={7} md={7} >\n\n                            <Typography variant=\"body2\" color=\"textSecondary\" className={styles.bodytext}>\n                                {text}<br></br><br></br>\n                            </Typography>\n\n                            <Typography variant=\"subtitle2\">\n                                Demos\n                            </Typography>\n\n                            <Typography variant=\"body2\" color=\"textSecondary\" className={styles.bodytext}>\n\n                                {demos.map((demo: string[]) => {\n                                    return <text color=\"inherit\" className={styles.textLink} onClick={() => LoadSpecificDebugger(demo[0], demo[1])}>{demo[1]} using {demo[0]}<br></br></text>\n                                }\n                                )}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs >\n                            {/* Could be improved to allow for more dynamic image usage */}\n                            {<img src={img == \"grid_png\" ? grid_png : network_png} />}\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n        </Grid>)\n}","import { Flex } from \"components/generic/Flex\";\nimport { Grid } from \"@material-ui/core\";\nimport HomeBar from \"components/home-app-bar/HomeBar\"\nimport { PFCard } from \"components/home-page/PFCard\";\n\n/**\n * Function which returns the React page for the Launch Page\n * @returns \n */\nfunction LaunchPage() {\n  return (\n    <Flex vertical sx={{ bgcolor: \"background.default\" }}>\n      {/* This is required to allow for scrolling when in a smaller screen size. Dont know if the best method of allowing for this */}\n      <div style={{ overflow: 'auto' }}>\n        <HomeBar></HomeBar>\n\n        {/* Grid containing the different formats of pathfinding */}\n        <Grid container rowSpacing={3} columnSpacing={3} alignItems=\"stretch\">\n\n          {/* Card for the grid based pathfinding */}\n          <PFCard title=\"Grid-based pathfinding\" text=\"This is one of the most popular domain in pathfinding, especially in game development. The search space is quantised into cells or tiles and the agent can move to adjacent tiles only(maximum 8 directions) avoiding the negative search spaces(or more commonly called, walls). The image shows visualisation of jump point search algorithm whose implementation can be found in WARTHOG pathfinding library which supports a variety of grid-based pathfinding techniques.\" demos={[[\"A* Search\", \"Small Maze\"], [\"Dijkstra\", \"Alien\"]]} img=\"grid_png\" />\n\n          {/* Card for the network based pathfinding */}\n          <PFCard title=\"Bi-directional search\" text=\"In some cases, instead of standard single source a single destination, we might have multiple source as well as multiple target nodes. Bi-directional search is one of such examples. In this search, the source expands towards target and target also simultaneously expands towards the source. The image shows visualisation of bi-directional A* implementation. This can also be found in WARTHOG pathfinding library. In this example, the road network routing problem is solved using bi-directional pathfinding algorithm.\" demos={[[\"Dijkstra\", \"Small Network\"], [\"A* Search\", \"New York\"]]} img=\"network_png\" />\n\n          {/* Card for the navigation mesh based pathfinding */}\n          <PFCard title=\"Path planning on a navigation mesh\" text=\"In grid-based algorithm, the search space was divided into tiles or rectangles. In case of navigation mesh, we have convex polygons. The agent can enter or exit this polygon at any angle. This means that contrary to discrete search space in case grids or graphs, we have a continuous search space. The image shows visualisation of Polyanya whcih is state-of-the-art algorithm for path finding problems on a navigation mesh. The implementation can be again found in WARTHOG.\" demos={[]} img=\"grid_png\" />\n\n          {/* Card for the Graphs without embedding pathfinding */}\n          <PFCard title=\"Graphs without embedding\" text=\"Intuitively we imagine the search algorithm to operate on some environment which can be input map or graph. But there are some cases in which we don't have such embeddings. Examples can be social network graphs or combinatorial problems like 8 tile puzzle or MAPF. The app is capable of visualising these categories as well. The image shows example of visualisation of tree layout without any x-y embedding.\" demos={[]} img=\"network_png\" />\n\n        </Grid>\n      </div>\n    </Flex>\n  );\n}\n\nexport default LaunchPage;\n\n","import { createSlice, withLocalStorage } from \"./createSlice\";\r\n\r\nexport type Remote = {\r\n  url: string;\r\n  transport: string;\r\n  key: string;\r\n  disabled?: boolean;\r\n};\r\n\r\ntype Settings = {\r\n  remote?: Remote[];\r\n  playbackRate?: number;\r\n  acrylic?: boolean;\r\n};\r\n\r\nconst DEV_PORT = 8001;\r\n\r\nexport const defaultRemotes = [\r\n  {\r\n    url: `internal://trace/`,\r\n    transport: \"native\",\r\n    key: \"trace-provider\",\r\n  },\r\n  {\r\n    url: `http://localhost:${DEV_PORT}/`,\r\n    transport: \"socketio\",\r\n    key: \"default-development-server\",\r\n  },\r\n  {\r\n    url: `https://warthog.spaaaacccee.io/`,\r\n    transport: \"socketio\",\r\n    key: \"production-server\",\r\n  },\r\n];\r\n\r\nexport const defaultPlaybackRate = 4;\r\n\r\nexport const [useSettings, SettingsProvider] = createSlice<Settings>(\r\n  {\r\n    remote: defaultRemotes,\r\n    playbackRate: defaultPlaybackRate,\r\n  },\r\n  withLocalStorage(\"settings\")\r\n);\r\n","import { colors, createTheme } from \"@material-ui/core\";\r\nimport { alpha, SxProps, Theme } from \"@material-ui/system\";\r\nimport { constant, times } from \"lodash\";\r\nimport { useSettings } from \"slices/settings\";\r\n\r\nconst shadow = `\r\n    0px 8px 18px -1px rgb(0 0 0 / 8%), \r\n    0px 10px 48px 0px rgb(0 0 0 / 1%), \r\n    0px 20px 96px 0px rgb(0 0 0 / 0.5%)\r\n`;\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    primary: colors[\"blueGrey\"],\r\n  },\r\n  shadows: [\"\", ...times(24, constant(shadow))] as any,\r\n});\r\n\r\nexport function useAcrylic(): SxProps<Theme> {\r\n  const [{ acrylic }] = useSettings();\r\n  return acrylic\r\n    ? {\r\n        backdropFilter: \"blur(5px)\",\r\n        background: ({ palette }) => alpha(palette.background.paper, 0.84),\r\n      }\r\n    : {\r\n        backdropFilter: \"blur(0px)\",\r\n        background: ({ palette }) => palette.background.paper,\r\n      };\r\n}\r\n","import { IconButton, Snackbar } from \"@material-ui/core\";\r\nimport { CloseOutlined as CloseIcon } from \"@material-ui/icons\";\r\nimport { noop } from \"lodash\";\r\nimport {\r\n  createContext,\r\n  ReactNode,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\n\r\nconst SnackbarContext = createContext<(message?: ReactNode) => void>(noop);\r\n\r\nexport interface SnackbarMessage {\r\n  message?: ReactNode;\r\n  key: number;\r\n}\r\n\r\nexport interface State {\r\n  open: boolean;\r\n  snackPack: readonly SnackbarMessage[];\r\n  messageInfo?: SnackbarMessage;\r\n}\r\n\r\nexport function useSnackbar() {\r\n  return useContext(SnackbarContext);\r\n}\r\n\r\nexport function SnackbarProvider({ children }: { children?: ReactNode }) {\r\n  const [snackPack, setSnackPack] = useState<readonly SnackbarMessage[]>([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [current, setCurrent] = useState<SnackbarMessage | undefined>(\r\n    undefined\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (snackPack.length && !current) {\r\n      setCurrent({ ...snackPack[0] });\r\n      setSnackPack((prev) => prev.slice(1));\r\n      setOpen(true);\r\n    } else if (snackPack.length && current && open) {\r\n      setOpen(false);\r\n    }\r\n  }, [snackPack, current, open]);\r\n\r\n  const handleMessage = useCallback(\r\n    (message: ReactNode) => {\r\n      setSnackPack((prev) => [...prev, { message, key: new Date().getTime() }]);\r\n    },\r\n    [setSnackPack]\r\n  );\r\n\r\n  const handleClose = (_: any, reason?: string) => {\r\n    reason !== \"clickaway\" && setOpen(false);\r\n  };\r\n\r\n  const handleExited = () => setCurrent(undefined);\r\n\r\n  return (\r\n    <>\r\n      <SnackbarContext.Provider value={handleMessage}>\r\n        {children}\r\n      </SnackbarContext.Provider>\r\n      <Snackbar\r\n        key={current?.key}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        TransitionProps={{ onExited: handleExited }}\r\n        message={current?.message}\r\n        action={\r\n          <>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              sx={{ p: 0.5 }}\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { Box } from \"@material-ui/core\";\r\nimport { BoxProps } from \"@material-ui/system\";\r\n\r\nexport function Space(props: BoxProps) {\r\n  return <Box px={0.5} display=\"inline-block\" {...props} />;\r\n}\r\n","import { Transport } from \"client/Transport\";\r\nimport { CheckConnectionResponse } from \"protocol/CheckConnection\";\r\nimport { createSlice } from \"./createSlice\";\r\nimport { replace } from \"./reducers\";\r\n\r\nexport type Connection = CheckConnectionResponse[\"result\"] & {\r\n  call: Transport[\"call\"];\r\n  disconnect: Transport[\"disconnect\"];\r\n  url: string;\r\n  ping: number;\r\n};\r\n\r\nexport const [useConnections, ConnectionsProvider] = createSlice<Connection[]>(\r\n  [],\r\n  { reduce: replace }\r\n);\r\n","import { useMediaQuery, useTheme } from \"@material-ui/core\";\r\n\r\nexport function useSmallDisplay() {\r\n  const theme = useTheme();\r\n  return useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n}\r\n","import {\r\n  Menu,\r\n  MenuItem,\r\n  TextField,\r\n  TextFieldProps,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { useSmallDisplay } from \"hooks/useSmallDisplay\";\r\nimport { findIndex, map, max } from \"lodash\";\r\nimport State, { bindMenu, bindTrigger } from \"material-ui-popup-state\";\r\nimport { ReactElement, ReactNode } from \"react\";\r\n\r\ntype Key = string | number;\r\n\r\nexport type SelectProps<T extends Key> = {\r\n  trigger?: (props: ReturnType<typeof bindTrigger>) => ReactElement;\r\n  items?: { value: T; label?: ReactNode }[];\r\n  value?: T;\r\n  onChange?: (value: T) => void;\r\n  placeholder?: string;\r\n};\r\n\r\nconst itemHeight = (sm: boolean) => (sm ? 48 : 36);\r\nconst padding = 8;\r\n\r\nexport function Select<T extends string>({\r\n  trigger,\r\n  items,\r\n  value,\r\n  onChange,\r\n  placeholder = \"Select Option\",\r\n}: SelectProps<T>) {\r\n  const sm = useSmallDisplay();\r\n  const index = max([findIndex(items, { value: value as any }), 0]) ?? 0;\r\n  return (\r\n    <State variant=\"popover\">\r\n      {(state) => (\r\n        <>\r\n          <Tooltip title={placeholder}>\r\n            <span>{trigger?.(bindTrigger(state))}</span>\r\n          </Tooltip>\r\n          <Menu\r\n            {...bindMenu(state)}\r\n            anchorOrigin={{\r\n              horizontal: \"center\",\r\n              vertical: -itemHeight(sm) * index - padding,\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            {map(items, ({ value: v, label }) => (\r\n              <MenuItem\r\n                key={v}\r\n                value={v}\r\n                selected={v === value}\r\n                onClick={() => {\r\n                  state.close();\r\n                  onChange?.(v);\r\n                }}\r\n              >\r\n                {label}\r\n              </MenuItem>\r\n            ))}\r\n          </Menu>\r\n        </>\r\n      )}\r\n    </State>\r\n  );\r\n}\r\n\r\nexport type SelectFieldProps<T extends string> = Pick<\r\n  SelectProps<T>,\r\n  \"items\" | \"onChange\"\r\n> &\r\n  Omit<TextFieldProps, \"onChange\">;\r\n\r\nexport function SelectField<T extends string>(props: SelectFieldProps<T>) {\r\n  const { placeholder, value, items = [], onChange } = props;\r\n  return (\r\n    <TextField\r\n      sx={{ minWidth: 120 }}\r\n      select\r\n      label={placeholder}\r\n      value={value}\r\n      variant=\"filled\"\r\n      {...props}\r\n      onChange={(e) => onChange?.(e.target.value as T)}\r\n    >\r\n      {map(items, (item) => (\r\n        <MenuItem key={item.value} value={item.value}>\r\n          {item.label}\r\n        </MenuItem>\r\n      ))}\r\n    </TextField>\r\n  );\r\n}\r\n","import { Button, Typography as Type } from \"@material-ui/core\";\r\nimport { Select } from \"components/generic/Select\";\r\nimport { Space } from \"components/generic/Space\";\r\nimport { find, map, startCase } from \"lodash\";\r\nimport { FeatureDescriptor } from \"protocol/FeatureQuery\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype Props = {\r\n  label?: string;\r\n  value?: string;\r\n  onChange?: (key: string) => void;\r\n  items?: FeatureDescriptor[];\r\n  icon?: ReactNode;\r\n};\r\n\r\nexport function FeaturePicker({ label, value, onChange, items, icon }: Props) {\r\n  const selected = find(items, { id: value });\r\n  return (\r\n    <Select\r\n      placeholder={startCase(label)}\r\n      trigger={(props) => (\r\n        <Button {...props} disabled={!items?.length} startIcon={icon}>\r\n          {selected?.name ?? label}\r\n        </Button>\r\n      )}\r\n      items={map(items, ({ id, name, description }) => ({\r\n        value: id,\r\n        label: (\r\n          <>\r\n            <Type>{name}</Type>\r\n            <Space />\r\n            <Type variant=\"body2\" color=\"textSecondary\">\r\n              {description}\r\n            </Type>\r\n          </>\r\n        ),\r\n      }))}\r\n      value={selected?.id}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n}\r\n","import { fileDialog as file } from \"file-select-dialog\";\nimport { find, startCase } from \"lodash\";\nimport { Feature, FeatureDescriptor } from \"protocol/FeatureQuery\";\n\nfunction ext(s: string) {\n  return s.split(\".\").pop();\n}\nfunction name(s: string) {\n  return s.split(\".\").shift();\n}\n\nconst customMapId = \"internal/custom\";\n\nexport const custom = (map?: Partial<Feature>) => ({\n  name: map?.id === customMapId ? `Custom - ${map?.name}` : \"Custom\",\n  description: \"Import Map\",\n  id: customMapId,\n});\n\nexport async function upload(accept: FeatureDescriptor[]) {\n  const f = await file({\n    accept: accept.map(({ id }) => `.${id}`),\n    strict: true,\n  });\n  if (f) {\n    if (find(accept, { id: ext(f.name) })) {\n      return {\n        ...custom(),\n        format: ext(f.name),\n        content: await f.text(),\n        name: startCase(name(f.name)),\n      } as Feature;\n    } else {\n      throw new Error(`The format (${ext(f.name)}) is unsupported.`);\n    }\n  }\n}\n","import { Code as CodeIcon, MapTwoTone as MapIcon } from \"@material-ui/icons\";\r\nimport { useSnackbar } from \"components/generic/Snackbar\";\r\nimport { Space } from \"components/generic/Space\";\r\nimport { find } from \"lodash\";\r\nimport { useConnections } from \"slices/connections\";\r\nimport { useFeatures } from \"slices/features\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { FeaturePicker } from \"./FeaturePicker\";\r\nimport { custom, upload } from \"./upload\";\r\n\r\nexport const mapDefaults = { start: undefined, end: undefined };\r\n\r\nexport function Input() {\r\n  const notify = useSnackbar();\r\n  const [connections] = useConnections();\r\n  const [{ algorithms, maps, formats }] = useFeatures();\r\n  const [{ algorithm, map }, setUIState] = useUIState();\r\n\r\n  return (\r\n    <>\r\n      <FeaturePicker\r\n        icon={<MapIcon />}\r\n        label=\"map\"\r\n        value={map?.id}\r\n        items={[\r\n          custom(map),\r\n          ...maps.map((c) => ({\r\n            ...c,\r\n            description: find(connections, { url: c.source })?.name,\r\n          })),\r\n        ]}\r\n        onChange={async (v) => {\r\n          switch (v) {\r\n            case custom().id:\r\n              try {\r\n                const f = await upload(formats);\r\n                if (f) setUIState({ ...mapDefaults, map: f });\r\n              } catch (e) {\r\n                notify(`${e}`);\r\n              }\r\n              break;\r\n            default:\r\n              setUIState({ ...mapDefaults, map: find(maps, { id: v }) });\r\n              break;\r\n          }\r\n        }}\r\n      />\r\n      <Space />\r\n      <FeaturePicker\r\n        icon={<CodeIcon />}\r\n        label=\"algorithm\"\r\n        value={algorithm}\r\n        items={algorithms.map((c) => ({\r\n          ...c,\r\n          description: find(connections, { url: c.source })?.name,\r\n        }))}\r\n        onChange={(v) => setUIState({ algorithm: v })}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { IconButton, IconButtonProps, Tooltip } from \"@material-ui/core\";\r\nimport { startCase } from \"lodash\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype IconButtonWithTooltipProps = {\r\n  label: string;\r\n  icon: ReactNode;\r\n} & IconButtonProps;\r\n\r\nexport function IconButtonWithTooltip({\r\n  label,\r\n  icon,\r\n  ...rest\r\n}: IconButtonWithTooltipProps) {\r\n  return (\r\n    <Tooltip title={startCase(label)} key={label}>\r\n      <span>\r\n        <IconButton {...rest}>{icon}</IconButton>\r\n      </span>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import { createSlice } from \"./createSlice\";\r\nimport { Trace } from \"protocol/Trace\";\r\nimport { PathfindingTask } from \"protocol/SolveTask\";\r\nimport { ParamsOf } from \"protocol/Message\";\r\n\r\nexport type Specimen = {\r\n  /**\r\n   * The search trace\r\n   */\r\n  specimen?: Trace;\r\n  /**\r\n   * The map for which the search trace is drawn\r\n   */\r\n  map?: string;\r\n  error?: string;\r\n} & Partial<ParamsOf<PathfindingTask>>;\r\n\r\nexport const [useSpecimen, SpecimenProvider] = createSlice<Specimen>({});\r\n","import { clamp } from \"lodash\";\r\nimport { useMemo } from \"react\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\n\r\nexport function usePlaybackState() {\r\n  const [{ specimen }] = useSpecimen();\r\n  const [{ playback, step = 0 }, setUIState] = useUIState();\r\n\r\n  const ready = !!specimen;\r\n  const playing = playback === \"playing\";\r\n  const [start, end] = [0, (specimen?.eventList?.length ?? 1) - 1];\r\n\r\n  return useMemo(() => {\r\n    const state = {\r\n      start,\r\n      end,\r\n      step,\r\n      canPlay: ready && !playing && step < end,\r\n      canPause: ready && playing,\r\n      canStop: ready,\r\n      canStepForward: ready && !playing && step < end,\r\n      canStepBackward: ready && !playing && step > 0,\r\n    };\r\n\r\n    const stepBy = (n: number) => clamp(step + n, start, end);\r\n\r\n    const callbacks = {\r\n      play: () => setUIState({ playback: \"playing\", step: stepBy(1) }),\r\n      pause: (n = 0) => setUIState({ playback: \"paused\", step: stepBy(n) }),\r\n      stop: () => setUIState({ step: start, playback: \"paused\" }),\r\n      stepForward: () => setUIState({ step: stepBy(1) }),\r\n      stepBackward: () => setUIState({ step: stepBy(-1) }),\r\n      tick: (n = 1) => setUIState({ playback: \"playing\", step: stepBy(n) }),\r\n    };\r\n\r\n    return {\r\n      playing: playback === \"playing\",\r\n      ...state,\r\n      ...callbacks,\r\n    };\r\n  }, [end, playback, playing, ready, setUIState, start, step]);\r\n}\r\n","import {\r\n  PauseOutlined as PauseIcon,\r\n  PlayArrowOutlined as PlayIcon,\r\n  SkipNextOutlined as ForwardIcon,\r\n  SkipPreviousOutlined as PreviousIcon,\r\n  StopOutlined as StopIcon,\r\n} from \"@material-ui/icons\";\r\nimport { IconButtonWithTooltip as Button } from \"components/generic/IconButtonWithTooltip\";\r\nimport { usePlaybackState } from \"hooks/usePlaybackState\";\r\n\r\nexport function Playback() {\r\n  const {\r\n    playing,\r\n    canPause,\r\n    canPlay,\r\n    canStepBackward,\r\n    canStepForward,\r\n    canStop,\r\n    pause,\r\n    play,\r\n    stepBackward,\r\n    stepForward,\r\n    stop,\r\n  } = usePlaybackState();\r\n  return (\r\n    <>\r\n      <Button\r\n        label=\"step-backward\"\r\n        icon={<PreviousIcon />}\r\n        onClick={stepBackward}\r\n        disabled={!canStepBackward}\r\n      />\r\n      <Button\r\n        {...(playing\r\n          ? {\r\n              label: \"pause\",\r\n              icon: <PauseIcon />,\r\n              onClick: () => pause(),\r\n              disabled: !canPause,\r\n            }\r\n          : {\r\n              label: \"play\",\r\n              icon: <PlayIcon />,\r\n              onClick: () => play(),\r\n              disabled: !canPlay,\r\n              color: \"primary\",\r\n            })}\r\n      />\r\n      <Button\r\n        label=\"step-forward\"\r\n        icon={<ForwardIcon />}\r\n        onClick={stepForward}\r\n        disabled={!canStepForward}\r\n      />\r\n      <Button\r\n        label=\"stop\"\r\n        icon={<StopIcon />}\r\n        onClick={stop}\r\n        disabled={!canStop}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport function useScrollState(threshold: number = 128) {\r\n  const [showControls, setShowControls] = useState(true);\r\n  const [isAbsoluteTop, setIsAbsoluteTop] = useState(true);\r\n  const [isTop, setIsTop] = useState(true);\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n  const lastTop = useRef(0);\r\n  useEffect(() => {\r\n    if (target) {\r\n      const listener = () => {\r\n        {\r\n          const newIsTop = target.scrollTop <= threshold;\r\n          if (newIsTop !== isTop) {\r\n            setIsTop(newIsTop);\r\n          }\r\n        }\r\n        {\r\n          const newIsTop = target.scrollTop <= 1;\r\n          if (newIsTop !== isAbsoluteTop) {\r\n            setIsAbsoluteTop(newIsTop);\r\n          }\r\n        }\r\n        if (lastTop.current - target.scrollTop) {\r\n          if (\r\n            Math.abs(lastTop.current - target.scrollTop) > 2 &&\r\n            lastTop.current >= 0\r\n          ) {\r\n            setShowControls(lastTop.current > target.scrollTop);\r\n          }\r\n          lastTop.current = target.scrollTop;\r\n        }\r\n      };\r\n      target.addEventListener(\"scroll\", listener, { passive: true });\r\n      return () => {\r\n        target.removeEventListener(\"scroll\", listener);\r\n      };\r\n    }\r\n  }, [target, isTop, isAbsoluteTop, lastTop, threshold]);\r\n  return [\r\n    showControls || isTop,\r\n    isTop,\r\n    isAbsoluteTop,\r\n    target,\r\n    setTarget,\r\n  ] as const;\r\n}\r\n","import {\r\n  ComponentProps,\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\n\r\ntype ScrollPanelProps = {\r\n  onTarget?: (e: HTMLDivElement | null) => void;\r\n} & ComponentProps<\"div\">;\r\n\r\nexport function ScrollPanel({\r\n  onTarget,\r\n  onScroll,\r\n  ...props\r\n}: ScrollPanelProps) {\r\n  const [target, setTarget] = useState<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (target && onScroll) {\r\n      target.addEventListener(\"scroll\", onScroll as any, { passive: true });\r\n      return () => target.removeEventListener(\"scroll\", onScroll as any);\r\n    }\r\n  }, [target, onScroll]);\r\n\r\n  return (\r\n    <div\r\n      {...props}\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        overflow: \"hidden scroll\",\r\n        ...props.style,\r\n      }}\r\n      ref={(e) => {\r\n        setTarget(e);\r\n        onTarget?.(e);\r\n      }}\r\n    >\r\n      <PanelContext.Provider value={target}>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          {props.children}\r\n        </div>\r\n      </PanelContext.Provider>\r\n    </div>\r\n  );\r\n}\r\nconst PanelContext = createContext<HTMLDivElement | null>(null);\r\n\r\nexport function usePanel() {\r\n  return useContext(PanelContext);\r\n}\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Dialog,\r\n  Fade,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { ArrowBack } from \"@material-ui/icons\";\r\nimport { ResizeSensor } from \"css-element-queries\";\r\nimport PopupState from \"material-ui-popup-state\";\r\nimport {\r\n  cloneElement,\r\n  ComponentProps,\r\n  CSSProperties,\r\n  ReactElement,\r\n  ReactNode,\r\n  SyntheticEvent,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { useScrollState } from \"hooks/useScrollState\";\r\nimport { useSmallDisplay } from \"hooks/useSmallDisplay\";\r\nimport { ScrollPanel, usePanel } from \"./ScrollPanel\";\r\n\r\nexport function AppBarTitle({ children }: { children?: ReactNode }) {\r\n  return <Typography variant=\"h6\">{children}</Typography>;\r\n}\r\n\r\nexport type Props = {\r\n  children?: ReactNode;\r\n  actions?: ReactNode;\r\n  width?: number;\r\n  height?: string | number;\r\n  onTarget?: (target: HTMLDivElement | null) => void;\r\n  variant?: \"default\" | \"submodal\";\r\n  scrollable?: boolean;\r\n};\r\n\r\ntype ModalAppBarProps = {\r\n  onClose?: () => void;\r\n  style?: CSSProperties;\r\n  elevatedStyle?: CSSProperties;\r\n  transitionProperties?: string[];\r\n  children?: ReactNode;\r\n  elevatedChildren?: ReactNode;\r\n  simple?: boolean;\r\n  position?: \"fixed\" | \"absolute\" | \"sticky\" | \"static\";\r\n};\r\n\r\nexport function ModalAppBar({\r\n  onClose = () => {},\r\n  style,\r\n  elevatedStyle,\r\n  children,\r\n  transitionProperties = [\"box-shadow\", \"background\", \"border-bottom\"],\r\n  elevatedChildren,\r\n  simple,\r\n  position = \"sticky\",\r\n}: ModalAppBarProps) {\r\n  const panel = usePanel();\r\n  const theme = useTheme();\r\n  const [, , isAbsoluteTop, , setTarget] = useScrollState();\r\n  useEffect(() => {\r\n    setTarget(panel);\r\n  }, [panel, setTarget]);\r\n\r\n  const styles = isAbsoluteTop\r\n    ? {\r\n        background: theme.palette.background.paper,\r\n        ...(!simple && {\r\n          boxShadow: theme.shadows[0],\r\n        }),\r\n        ...style,\r\n      }\r\n    : {\r\n        background: theme.palette.background.paper,\r\n        ...(!simple && {\r\n          boxShadow: theme.shadows[4],\r\n        }),\r\n        ...elevatedStyle,\r\n      };\r\n\r\n  return (\r\n    <AppBar\r\n      elevation={0}\r\n      position={position}\r\n      style={{\r\n        color: theme.palette.text.primary,\r\n        transition: theme.transitions.create(transitionProperties),\r\n        ...styles,\r\n      }}\r\n    >\r\n      <Toolbar>\r\n        <IconButton\r\n          style={{\r\n            marginRight: theme.spacing(1),\r\n          }}\r\n          aria-label=\"open drawer\"\r\n          edge=\"start\"\r\n          onClick={() => onClose()}\r\n        >\r\n          <ArrowBack />\r\n        </IconButton>\r\n\r\n        {children && (\r\n          <div\r\n            style={{\r\n              gridColumn: 1,\r\n              gridRow: 1,\r\n              flex: 1,\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <Fade\r\n              in={!!(!elevatedChildren || isAbsoluteTop)}\r\n              mountOnEnter\r\n              unmountOnExit\r\n            >\r\n              <Box style={{ width: \"100%\" }}>{children}</Box>\r\n            </Fade>\r\n          </div>\r\n        )}\r\n        {elevatedChildren && (\r\n          <div\r\n            style={{\r\n              gridColumn: 1,\r\n              gridRow: 1,\r\n              flex: 1,\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <Fade\r\n              in={!!(elevatedChildren && !isAbsoluteTop)}\r\n              mountOnEnter\r\n              unmountOnExit\r\n            >\r\n              <Box style={{ width: \"100%\" }}>{elevatedChildren}</Box>\r\n            </Fade>\r\n          </div>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default function Modal({\r\n  children,\r\n  actions,\r\n  width = 480,\r\n  height,\r\n  onTarget,\r\n  variant = \"default\",\r\n  scrollable = true,\r\n  ...props\r\n}: Props & ComponentProps<typeof Dialog>) {\r\n  const [content, setContent] = useState<ReactNode | undefined>(undefined);\r\n  useEffect(() => {\r\n    if (children) setContent(children);\r\n  }, [children]);\r\n  const theme = useTheme();\r\n  const sm = useSmallDisplay();\r\n\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n  const [contentRef, setContentRef] = useState<HTMLElement | null>(null);\r\n  const [hasOverflowingChildren, setHasOverflowingChildren] = useState(false);\r\n  const [childHeight, setChildHeight] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (target && contentRef && !sm && !height) {\r\n      const callback = () => {\r\n        const doesOverflow = window.innerHeight - 64 < contentRef.offsetHeight;\r\n        setHasOverflowingChildren(doesOverflow);\r\n        setChildHeight(\r\n          contentRef.offsetHeight <= 1 ? 0 : Math.ceil(contentRef.offsetHeight)\r\n        );\r\n      };\r\n      window.addEventListener(\"resize\", callback);\r\n      const ob = new ResizeSensor(contentRef, callback);\r\n      callback();\r\n      return () => {\r\n        window.removeEventListener(\"resize\", callback);\r\n        ob.detach();\r\n      };\r\n    }\r\n  }, [target, contentRef, sm, height]);\r\n\r\n  const useVariant = variant === \"submodal\" && sm;\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen={sm}\r\n      {...props}\r\n      style={{\r\n        ...(useVariant && {\r\n          paddingTop: theme.spacing(8),\r\n        }),\r\n        ...props.style,\r\n      }}\r\n      PaperProps={{\r\n        ref: (e: HTMLElement | null) => setTarget(e),\r\n        style: {\r\n          ...(useVariant && {\r\n            borderRadius: `${theme.shape.borderRadius}px ${theme.shape.borderRadius}px 0 0`,\r\n          }),\r\n          background: theme.palette.background.default,\r\n          overflow: \"hidden\",\r\n          height:\r\n            height && !sm\r\n              ? height\r\n              : hasOverflowingChildren || sm\r\n              ? \"100%\"\r\n              : childHeight || \"fit-content\",\r\n          position: \"relative\",\r\n          maxWidth: \"none\",\r\n          ...props.PaperProps?.style,\r\n        },\r\n        ...props.PaperProps,\r\n      }}\r\n    >\r\n      <ScrollPanel\r\n        style={{\r\n          height: \"100%\",\r\n          width: sm ? undefined : width,\r\n          maxWidth: \"100%\",\r\n          overflow: scrollable ? undefined : \"hidden\",\r\n        }}\r\n        onTarget={onTarget}\r\n      >\r\n        <div\r\n          ref={(e) => setContentRef(e)}\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n        >\r\n          {content}\r\n        </div>\r\n      </ScrollPanel>\r\n      {actions}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport function ManagedModal({\r\n  options: ModalProps,\r\n  appBar: ModalAppBarProps,\r\n  trigger = () => <></>,\r\n  children,\r\n}: {\r\n  options?: Props;\r\n  trigger?: (onClick: (e: SyntheticEvent<any, Event>) => void) => ReactElement;\r\n  appBar?: ModalAppBarProps;\r\n  children?: ReactNode;\r\n}) {\r\n  return (\r\n    <PopupState variant=\"popover\">\r\n      {({ open, close, isOpen }) => {\r\n        return (\r\n          <>\r\n            {cloneElement(trigger(open))}\r\n            <Modal open={isOpen} onClose={close} {...ModalProps}>\r\n              <ModalAppBar onClose={close} {...ModalAppBarProps} />\r\n              {children ?? ModalProps?.children}\r\n            </Modal>\r\n          </>\r\n        );\r\n      }}\r\n    </PopupState>\r\n  );\r\n}\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/hash.worker.ac18d53b.worker.js\");\n}\n","import { JSONRPCClient, JSONRPCResponse as Response } from \"json-rpc-2.0\";\nimport { NameMethodMap } from \"protocol\";\nimport { Request, RequestOf, ResponseOf } from \"protocol/Message\";\nimport { IPCWorker } from \"workers\";\nimport { Transport, TransportOptions } from \"./Transport\";\n\nexport class IPCTransport implements Transport {\n  worker: IPCWorker;\n  rpc: JSONRPCClient;\n\n  constructor(readonly options: TransportOptions) {\n    this.worker = new IPCWorker();\n    this.rpc = new JSONRPCClient(async (request: Request) => {\n      const listener = ({ data }: MessageEvent<Response>) => {\n        if (data.id === request.id) {\n          this.worker.removeEventListener(\"message\", listener);\n          this.rpc.receive(data);\n        }\n      };\n      this.worker.postMessage(request);\n      this.worker.addEventListener(\"message\", listener);\n    });\n  }\n\n  connect() {\n    this.worker.postMessage(this.options.url);\n    return new Promise<void>((res) => {\n      const listener = () => {\n        res();\n        this.worker.removeEventListener(\"message\", listener);\n      };\n      this.worker.addEventListener(\"message\", listener);\n    });\n  }\n\n  async disconnect() {\n    this.worker.terminate();\n  }\n\n  async call<T extends keyof NameMethodMap>(\n    name: T,\n    params?: RequestOf<NameMethodMap[T]>[\"params\"]\n  ): Promise<ResponseOf<NameMethodMap[T]>[\"result\"]> {\n    return await this.rpc.request(name, params);\n  }\n}\n","import { PathfindingTask, Scheme } from \"protocol/SolveTask\";\nimport { Transport } from \"./Transport\";\nimport url from \"url-parse\";\nimport { Dictionary } from \"lodash\";\n\nexport function parseURI(uri: string) {\n  const { protocol, pathname } = url(uri);\n  return {\n    scheme: protocol as Scheme,\n    content: decodeURIComponent(pathname),\n  };\n}\n\nexport const internal: Dictionary<Transport[\"call\"]> = {\n  trace: async (name, params) => {\n    switch (name) {\n      case \"about\":\n        return {\n          name: \"Search Trace\",\n          description: \"Provides JSON Search Trace Support\",\n          version: \"1.0.2\",\n        };\n      case \"features/formats\":\n        return [\n          {\n            id: \"json\",\n            name: \"Search Trace\",\n          },\n        ];\n      case \"solve/pathfinding\":\n        const { mapURI } = (params as PathfindingTask[\"params\"])!;\n        const { scheme, content } = parseURI(mapURI);\n        if ([\"map:\", \"trace:\"].includes(scheme)) return JSON.parse(content);\n    }\n  },\n};\n","import { NameMethodMap } from \"protocol\";\nimport { RequestOf, ResponseOf } from \"protocol/Message\";\nimport { Transport, TransportOptions } from \"./Transport\";\nimport url from \"url-parse\";\nimport { internal } from \"./internal\";\n\nexport class NativeTransport implements Transport {\n  handler: Transport[\"call\"];\n  constructor(readonly options: TransportOptions) {\n    const { hostname } = url(options.url);\n    this.handler = internal[hostname];\n  }\n\n  async connect() {}\n\n  async disconnect() {}\n\n  async call<T extends keyof NameMethodMap>(\n    name: T,\n    params?: RequestOf<NameMethodMap[T]>[\"params\"]\n  ): Promise<ResponseOf<NameMethodMap[T]>[\"result\"]> {\n    return await this.handler(name, params);\n  }\n}\n","import { JSONRPCClient, JSONRPCResponse as Response } from \"json-rpc-2.0\";\r\nimport { NameMethodMap } from \"protocol\";\r\nimport { Request, RequestOf, ResponseOf } from \"protocol/Message\";\r\nimport { io, Socket } from \"socket.io-client\";\r\nimport { Transport, TransportOptions } from \"./Transport\";\r\n\r\nexport class SocketIOTransport implements Transport {\r\n  rpc: JSONRPCClient;\r\n  socket: Socket;\r\n\r\n  constructor(readonly options: TransportOptions) {\r\n    this.socket = io(options.url);\r\n    this.rpc = new JSONRPCClient(async (request: Request) => {\r\n      const listener = (response: Response) => {\r\n        if (response.id === request.id) {\r\n          this.socket.off(\"response\", listener);\r\n          this.rpc.receive(response);\r\n        }\r\n      };\r\n      this.socket.emit(\"request\", request);\r\n      this.socket.on(\"response\", listener);\r\n    });\r\n  }\r\n\r\n  async connect() {\r\n    this.socket.connect();\r\n  }\r\n\r\n  async disconnect() {\r\n    this.socket.disconnect();\r\n  }\r\n\r\n  async call<T extends keyof NameMethodMap>(\r\n    name: T,\r\n    params?: RequestOf<NameMethodMap[T]>[\"params\"]\r\n  ): Promise<ResponseOf<NameMethodMap[T]>[\"result\"]> {\r\n    return await this.rpc.request(name, params);\r\n  }\r\n}\r\n","import { Dictionary, first, keys } from \"lodash\";\nimport { IPCTransport } from \"./IPCTransport\";\nimport { NativeTransport } from \"./NativeTransport\";\nimport { SocketIOTransport } from \"./SocketIOTransport\";\nimport { TransportConstructor } from \"./Transport\";\n\ntype TransportEntry = {\n  name: string;\n  constructor: TransportConstructor;\n};\n\nexport const transports: Dictionary<TransportEntry> = {\n  socketio: { name: \"socket.io\", constructor: SocketIOTransport },\n  ipc: { name: \"Web Worker\", constructor: IPCTransport },\n  native: { name: \"Internal\", constructor: NativeTransport },\n};\n\nexport function getTransport(key: string) {\n  return transports[key].constructor;\n}\n\nexport const defaultTransport = first(keys(transports))!;\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Collapse,\r\n  IconButton,\r\n  InputBase,\r\n  List,\r\n  ListSubheader,\r\n  Switch,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Add,\r\n  DeleteOutlined as DeleteIcon,\r\n  EditOutlined as EditIcon,\r\n  LabelOutlined as LabelIcon,\r\n} from \"@material-ui/icons\";\r\nimport { filter, map, sortBy, uniqBy } from \"lodash\";\r\nimport { nanoid as id } from \"nanoid\";\r\nimport {\r\n  cloneElement,\r\n  ComponentProps,\r\n  CSSProperties,\r\n  forwardRef,\r\n  ReactElement,\r\n  ReactNode,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\nexport const DefaultListEditorInput = forwardRef(function StyledInputBase(\r\n  props: ComponentProps<typeof InputBase>,\r\n  ref\r\n) {\r\n  return (\r\n    <InputBase\r\n      fullWidth\r\n      {...props}\r\n      placeholder=\"Untitled item\"\r\n      inputRef={ref}\r\n    />\r\n  );\r\n});\r\n\r\ntype Key = string | number;\r\n\r\ntype Item<T = any> = {\r\n  element?: ReactElement;\r\n  enabled?: boolean;\r\n  value?: T;\r\n  id: Key;\r\n};\r\n\r\ntype Props<T = any> = {\r\n  extras?: ReactNode;\r\n  addItemLabel?: ReactNode;\r\n  label?: ReactNode;\r\n  text?: ReactNode;\r\n  items?: Item<T>[];\r\n  useSwitch?: boolean;\r\n  useDelete?: boolean;\r\n  onChangeItem?: (key: Key, value: T, enabled: boolean) => void;\r\n  onAddItem?: () => void;\r\n  onDeleteItem?: (key: Key) => void;\r\n  icon?: ReactElement | null;\r\n  useEdit?: boolean;\r\n  variant?: \"outlined\" | \"default\";\r\n  extrasPlacement?: \"flex-start\" | \"center\" | \"flex-end\";\r\n  placeholderText?: ReactNode;\r\n  cardStyle?: CSSProperties;\r\n  autoFocus?: boolean;\r\n  getCategory?: (value?: T) => string;\r\n  getOrder?: (value?: T) => string | number;\r\n};\r\n\r\ntype ListEditorFieldProps = {\r\n  isPlaceholder?: boolean;\r\n  i?: number;\r\n};\r\n\r\nfunction useInitialRender() {\r\n  const ref = useRef(false);\r\n  const current = ref.current;\r\n  ref.current = true;\r\n  return !current;\r\n}\r\n\r\nexport function ListEditorField({\r\n  icon = <LabelIcon />,\r\n  useSwitch,\r\n  useDelete,\r\n  useEdit: useEditButton = true,\r\n  onChangeItem = () => {},\r\n  onDeleteItem = () => {},\r\n  enabled = false,\r\n  element = <DefaultListEditorInput />,\r\n  value,\r\n  id,\r\n  i = 0,\r\n  variant = \"default\",\r\n  extrasPlacement = \"center\",\r\n  autoFocus,\r\n  cardStyle: style,\r\n}: Props & ListEditorFieldProps & Item) {\r\n  const [field, setField] = useState<HTMLElement | null>(null);\r\n  const theme = useTheme();\r\n  const content = (\r\n    <Box display=\"flex\" alignItems={extrasPlacement}>\r\n      {icon !== null &&\r\n        cloneElement(icon, {\r\n          style: {\r\n            marginRight: theme.spacing(1),\r\n            marginTop: theme.spacing(0.5),\r\n            marginBottom: theme.spacing(0.5),\r\n          },\r\n          color: \"action\",\r\n        })}\r\n      <Box\r\n        flexGrow={1}\r\n        style={{\r\n          marginLeft: -theme.spacing(icon === null ? 2 : 0),\r\n        }}\r\n      >\r\n        {cloneElement(element, {\r\n          onDelete: () => onDeleteItem(id ?? i),\r\n          autoFocus,\r\n          value,\r\n          key: id ?? i,\r\n          onValueChange: (e: any) => onChangeItem(id ?? i, e, enabled),\r\n          onChange: (e: any) => onChangeItem(id ?? i, e.target.value, enabled),\r\n          ref: (e: HTMLElement | null) => setField(e),\r\n        })}\r\n      </Box>\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        {useSwitch && (\r\n          <Switch\r\n            color=\"primary\"\r\n            edge=\"end\"\r\n            onChange={(_, v) => onChangeItem(id ?? i, value, v)}\r\n            checked={enabled}\r\n          />\r\n        )}\r\n        {useEditButton && (\r\n          <IconButton\r\n            edge=\"end\"\r\n            onClick={() => {\r\n              if (field?.focus) {\r\n                field.focus();\r\n              }\r\n            }}\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n        )}\r\n        {useDelete && (\r\n          <IconButton onClick={() => onDeleteItem(id ?? i)}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n  return (\r\n    <Box\r\n      style={{\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n      }}\r\n    >\r\n      {variant === \"outlined\" ? (\r\n        <Card\r\n          variant=\"outlined\"\r\n          style={{\r\n            borderColor: \"transparent\",\r\n            paddingRight: theme.spacing(2),\r\n            transition: theme.transitions.create([\r\n              \"box-shadow\",\r\n              \"border-color\",\r\n            ]),\r\n            ...style,\r\n          }}\r\n        >\r\n          {content}\r\n        </Card>\r\n      ) : (\r\n        content\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function Editor<T>(props: Props<T>) {\r\n  const {\r\n    addItemLabel = \"Add Item\",\r\n    label,\r\n    text,\r\n    onAddItem = () => {},\r\n    onDeleteItem = () => {},\r\n    items = [],\r\n    placeholderText,\r\n    autoFocus,\r\n    getCategory,\r\n    getOrder,\r\n    extras,\r\n  } = props;\r\n  const isInitialRender = useInitialRender();\r\n  const theme = useTheme();\r\n  const [intermediateItems, setIntermediateItems] = useState(items);\r\n  const [newIndex, setNewIndex] = useState(-1);\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setIntermediateItems(items);\r\n    }, theme.transitions.duration.standard);\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [items, setIntermediateItems, theme.transitions.duration.standard]);\r\n  const children = uniqBy([...intermediateItems, ...items], (c) => c.id)\r\n    .map((c) => items.find((c2) => c.id === c2.id) ?? c)\r\n    .map((x, i) => {\r\n      const { enabled, element, value, id } = x ?? {};\r\n      return {\r\n        value,\r\n        render: (p?: ComponentProps<typeof ListEditorField>) => (\r\n          <Collapse\r\n            in={!!items.find((p) => p.id === x.id)}\r\n            unmountOnExit\r\n            appear={!isInitialRender}\r\n            mountOnEnter\r\n          >\r\n            <ListEditorField\r\n              {...props}\r\n              onDeleteItem={(e) => {\r\n                onDeleteItem(e);\r\n                setNewIndex(-1);\r\n              }}\r\n              enabled={enabled}\r\n              element={element}\r\n              value={value}\r\n              id={id}\r\n              i={i}\r\n              autoFocus={autoFocus || i === newIndex}\r\n              {...p}\r\n            />\r\n          </Collapse>\r\n        ),\r\n        key: id,\r\n        in: !!items.find((p) => p.id === x.id),\r\n      };\r\n    });\r\n  const sorted = sortBy(\r\n    children,\r\n    (c) => getCategory?.(c.value),\r\n    (c) => getOrder?.(c.value)\r\n  ).map((c) => ({\r\n    ...c,\r\n    render: (p?: ComponentProps<typeof ListEditorField>) => (\r\n      <Box key={c.key}>{c.render(p)}</Box>\r\n    ),\r\n  }));\r\n  return (\r\n    <List\r\n      subheader={\r\n        label || text ? (\r\n          <>\r\n            <ListSubheader disableSticky>\r\n              {label && (\r\n                <Typography variant=\"body1\" gutterBottom color=\"textPrimary\">\r\n                  {label}\r\n                </Typography>\r\n              )}\r\n              {text && (\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                  style={{ marginBottom: theme.spacing(3) }}\r\n                >\r\n                  {text}\r\n                </Typography>\r\n              )}\r\n            </ListSubheader>\r\n          </>\r\n        ) : undefined\r\n      }\r\n    >\r\n      <Box mt={getCategory ? -1 : 0}>\r\n        {(() => {\r\n          const out: ReactNode[] = [];\r\n          sorted.forEach((c, i) => {\r\n            if (getCategory && isNewCategory(sorted, i, c)) {\r\n              out.push(\r\n                <Collapse\r\n                  in={items.some(\r\n                    (c2) => getCategory(c2.value) === getCategory(c.value)\r\n                  )}\r\n                  appear\r\n                  key={getCategory(c.value)}\r\n                >\r\n                  <Box pl={2} pb={2} pt={1}>\r\n                    <Typography variant=\"overline\" color=\"textSecondary\">\r\n                      {getCategory(c.value)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Collapse>\r\n              );\r\n            }\r\n            out.push(c.render());\r\n          });\r\n          return out;\r\n        })()}\r\n      </Box>\r\n      <Collapse in={!items?.length}>\r\n        <Box ml={2} mb={1} pt={getCategory ? 1 : 0}>\r\n          <Typography color=\"textSecondary\">\r\n            {placeholderText ?? \"No items\"}\r\n          </Typography>\r\n        </Box>\r\n      </Collapse>\r\n      <Box p={2} mb={-3}>\r\n        <Button\r\n          disableElevation\r\n          variant=\"contained\"\r\n          startIcon={<Add />}\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            onAddItem();\r\n            setNewIndex(items.length);\r\n          }}\r\n        >\r\n          {addItemLabel}\r\n        </Button>\r\n        {extras}\r\n      </Box>\r\n    </List>\r\n  );\r\n\r\n  function isNewCategory(\r\n    arr: {\r\n      value: T | undefined;\r\n      render: (\r\n        p?: (Props<any> & ListEditorFieldProps & Item<any>) | undefined\r\n      ) => JSX.Element;\r\n      key: Key;\r\n    }[],\r\n    i: number,\r\n    c: {\r\n      value: T | undefined;\r\n      render: (\r\n        p?: (Props<any> & ListEditorFieldProps & Item<any>) | undefined\r\n      ) => JSX.Element;\r\n      key: Key;\r\n    }\r\n  ) {\r\n    return !!(\r\n      getCategory &&\r\n      (arr[i - 1] === undefined ||\r\n        getCategory(arr[i - 1].value) !== getCategory(c.value))\r\n    );\r\n  }\r\n}\r\n\r\nexport function ListEditor<T extends { key: string }>({\r\n  onChange,\r\n  value = [],\r\n  editor,\r\n  create,\r\n  ...props\r\n}: Omit<Props<T>, \"items\"> & {\r\n  items?: T[];\r\n  onChange?: (value: T[]) => void;\r\n  value?: T[];\r\n  editor?: (item: T) => ReactElement;\r\n  create?: () => Omit<T, \"key\">;\r\n}) {\r\n  const [state, setState] = useState(value ?? []);\r\n  function handleChange(next: T[]) {\r\n    setState(next);\r\n    onChange?.(next);\r\n  }\r\n  useEffect(() => {\r\n    setState(value);\r\n  }, [value]);\r\n  return (\r\n    <Box sx={{ ml: -2 }}>\r\n      <Editor\r\n        {...props}\r\n        items={state.map((c) => ({\r\n          id: c.key,\r\n          value: c,\r\n          element: editor?.(c),\r\n        }))}\r\n        useDelete\r\n        useEdit={false}\r\n        onAddItem={() =>\r\n          handleChange?.([...state, { key: id(), ...create?.() } as T])\r\n        }\r\n        onDeleteItem={(k) => {\r\n          return handleChange?.(filter(state, (b) => b.key !== k));\r\n        }}\r\n        onChangeItem={(k, v) =>\r\n          handleChange?.(map(state, (b) => (b.key === k ? v : b)))\r\n        }\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { Typography as Type } from \"@material-ui/core\";\r\nimport { FiberManualRecord as Dot } from \"@material-ui/icons\";\r\nimport { ComponentProps, ReactNode } from \"react\";\r\n\r\nexport function OverlineDot(props: ComponentProps<typeof Dot>) {\r\n  return (\r\n    <Dot\r\n      {...props}\r\n      sx={{\r\n        fontSize: 12,\r\n        transform: \"translateY(1.75px) translateX(-2px)\",\r\n        ...props.sx,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\ntype Props = {\r\n  children?: ReactNode;\r\n};\r\n\r\nexport function Overline({ children }: Props) {\r\n  return (\r\n    <Type variant=\"overline\" sx={{ my: -0.75, display: \"block\" }}>\r\n      {children}\r\n    </Type>\r\n  );\r\n}\r\n","import { find } from \"lodash\";\nimport { useCallback } from \"react\";\nimport { Connection, useConnections } from \"slices/connections\";\n\nexport function useConnectionResolver() {\n  const [connections] = useConnections();\n  return useCallback(\n    (model?: Partial<Connection>) => find(connections, model),\n    [connections]\n  );\n}\n\nexport function useConnection(url: string) {\n  const resolve = useConnectionResolver();\n  return resolve({ url });\n}\n","import { useCallback } from \"react\";\r\nimport { createSlice } from \"./createSlice\";\r\n\r\ntype Loading = {\r\n  specimen?: boolean;\r\n  map?: boolean;\r\n  connections?: boolean;\r\n  features?: boolean;\r\n};\r\n\r\nexport const [useLoading, LoadingProvider] = createSlice<Loading>({});\r\n\r\nexport function useLoadingState(key: keyof Loading) {\r\n  const [, setLoading] = useLoading();\r\n\r\n  return useCallback(\r\n    async <T>(task: () => Promise<T>) => {\r\n      setLoading({ [key]: true });\r\n      const out = await task();\r\n      setLoading({ [key]: false });\r\n      return out;\r\n    },\r\n    [key, setLoading]\r\n  );\r\n}\r\n","import { find } from \"lodash\";\nimport { useLoading } from \"slices/loading\";\nimport { useSettings } from \"slices/settings\";\nimport { useConnectionResolver } from \"./useConnectionResolver\";\n\nexport type ConnectionStatus =\n  | \"connected\"\n  | \"connecting\"\n  | \"error\"\n  | \"not-connected\";\n\nexport function useConnectionStatus(url?: string): ConnectionStatus {\n  const [{ connections: loading }] = useLoading();\n  const resolve = useConnectionResolver();\n  const [{ remote }] = useSettings();\n  const entry = find(remote, { url });\n\n  return entry && !entry?.disabled\n    ? resolve({ url })\n      ? \"connected\"\n      : loading\n      ? \"connecting\"\n      : url\n      ? \"error\"\n      : \"not-connected\"\n    : \"not-connected\";\n}\n","import {\n  Switch,\n  TextField,\n  Tooltip,\n  Typography as Type,\n} from \"@material-ui/core\";\nimport { EditTwoTone as EditIcon } from \"@material-ui/icons\";\nimport { Box } from \"@material-ui/system\";\nimport { Flex } from \"components/generic/Flex\";\nimport { IconButtonWithTooltip as IconButton } from \"components/generic/IconButtonWithTooltip\";\nimport {\n  AppBarTitle as Title,\n  ManagedModal as Dialog,\n} from \"components/generic/Modal\";\nimport { OverlineDot as Dot } from \"components/generic/Overline\";\nimport { Space } from \"components/generic/Space\";\nimport { useConnection } from \"hooks/useConnectionResolver\";\nimport { useConnectionStatus } from \"hooks/useConnectionStatus\";\nimport { entries, startCase } from \"lodash\";\nimport { merge } from \"slices/reducers\";\nimport { Remote } from \"slices/settings\";\nimport { SelectField as Select } from \"components/generic/Select\";\nimport { transports } from \"client\";\n\nconst statusColor = {\n  connected: \"success.light\",\n  connecting: \"warning.light\",\n  error: \"error.light\",\n  \"not-connected\": \"text.disabled\",\n};\n\ntype ServerEditorProps = {\n  value: Remote;\n  onValueChange?: (e: Remote) => void;\n};\n\nexport function ServerEditor({ value, onValueChange }: ServerEditorProps) {\n  const connection = useConnection(value.url);\n  const status = useConnectionStatus(value.url);\n\n  function handleChange(next: Partial<Remote>) {\n    onValueChange?.(merge(value, next));\n  }\n\n  return (\n    <>\n      <Flex alignItems=\"center\" py={0.5}>\n        <Dot sx={{ color: statusColor[status] }} />\n        <Space />\n        <Box flex={1}>\n          <Type>\n            {connection\n              ? `${connection.name} ${connection.version}`\n              : startCase(status)}\n          </Type>\n          <Type variant=\"body2\" color=\"text.secondary\">\n            {connection?.description ?? (value?.url || \"No URL\")}\n          </Type>\n        </Box>\n        <Tooltip title={`${value.disabled ? \"Enable\" : \"Disable\"} Connection`}>\n          <Box>\n            <Switch\n              checked={!value.disabled}\n              onChange={(_, v) => handleChange({ disabled: !v })}\n            />\n          </Box>\n        </Tooltip>\n        <Dialog\n          trigger={(onClick) => (\n            <IconButton\n              icon={<EditIcon />}\n              label=\"Edit Connection\"\n              {...{ onClick }}\n            />\n          )}\n          appBar={{ children: <Title>Edit Connection</Title> }}\n        >\n          <Box p={2.5}>\n            <TextField\n              value={value.url}\n              onChange={(e) => handleChange({ url: e.target.value })}\n              fullWidth\n              variant=\"filled\"\n              label=\"URL\"\n              sx={{ mb: 2 }}\n            />\n            <Select\n              placeholder=\"Connection Type\"\n              items={entries(transports).map(([k, { name }]) => ({\n                value: k,\n                label: name,\n              }))}\n              fullWidth\n              value={value.transport}\n              onChange={(v) => handleChange({ transport: v })}\n            />\n          </Box>\n        </Dialog>\n      </Flex>\n    </>\n  );\n}\n","import { Button } from \"@material-ui/core\";\nimport { ReplayOutlined as ResetIcon } from \"@material-ui/icons\";\nimport { defaultTransport } from \"client\";\nimport { ListEditor } from \"components/generic/ListEditor\";\nimport { debounce } from \"lodash\";\nimport { defaultRemotes, Remote, useSettings } from \"slices/settings\";\nimport { ServerEditor } from \"./ServerEditor\";\n\nexport function ServerListEditor() {\n  const [{ remote }, setSettings] = useSettings();\n  return (\n    <>\n      <ListEditor<Remote>\n        editor={(v) => <ServerEditor value={v} />}\n        icon={null}\n        value={remote}\n        onChange={debounce((v) => setSettings({ remote: v }), 300)}\n        addItemLabel=\"Add Solver\"\n        create={() => ({\n          transport: defaultTransport,\n          url: \"\",\n          disabled: true,\n        })}\n        extras={\n          <Button\n            startIcon={<ResetIcon />}\n            sx={{ ml: 2 }}\n            onClick={() => setSettings({ remote: defaultRemotes })}\n          >\n            Reset to Defaults\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","import {\n  Box,\n  Divider,\n  Slider,\n  Switch,\n  Tab,\n  Typography as Type,\n} from \"@material-ui/core\";\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\nimport { Flex } from \"components/generic/Flex\";\nimport { Space } from \"components/generic/Space\";\nimport { ReactNode, useState } from \"react\";\nimport { defaultPlaybackRate as baseRate, useSettings } from \"slices/settings\";\nimport { ServerListEditor } from \"./ServerListEditor\";\n\nconst formatLabel = (v: number) => `${v}x`;\n\nexport function SettingsEditor() {\n  const [{ playbackRate = 1, acrylic }, setSettings] = useSettings();\n  const [tab, setTab] = useState(\"general\");\n  function renderHeading(label: ReactNode) {\n    return (\n      <Type variant=\"overline\" color=\"textSecondary\">\n        {label}\n      </Type>\n    );\n  }\n  function renderLabel(label: ReactNode) {\n    return <Type variant=\"body1\">{label}</Type>;\n  }\n  return (\n    <TabContext value={tab}>\n      <TabList onChange={(_, v) => setTab(v)}>\n        <Tab label=\"General\" value=\"general\" />\n        <Tab label=\"Connections\" value=\"connections\" />\n      </TabList>\n      <Divider />\n      <TabPanel value=\"general\">\n        <Box>\n          {renderHeading(\"Playback\")}\n          <Flex alignItems=\"center\">\n            {renderLabel(\"Playback Rate\")}\n            <Space flex={1} />\n            <Slider\n              sx={{ maxWidth: 320, mr: 2 }}\n              marks={[0.25, 1, 5].map((v) => ({\n                value: v * baseRate,\n                label: formatLabel(v),\n              }))}\n              step={0.25 * baseRate}\n              min={0.25 * baseRate}\n              max={5 * baseRate}\n              valueLabelFormat={(v) => formatLabel(v / baseRate)}\n              valueLabelDisplay=\"auto\"\n              defaultValue={playbackRate}\n              onChangeCommitted={(_, v) =>\n                setSettings({ playbackRate: v as number })\n              }\n            />\n          </Flex>\n          {renderHeading(\"UI\")}\n          <Flex alignItems=\"center\">\n            {renderLabel(\"Use Acrylic (Impacts Performance)\")}\n            <Space flex={1} />\n            <Switch\n              defaultChecked={!!acrylic}\n              onChange={(_, v) => setSettings({ acrylic: v })}\n            />\n          </Flex>\n        </Box>\n      </TabPanel>\n      <TabPanel value=\"connections\">\n        <Box>\n          {renderHeading(\"Solvers\")}\n          <ServerListEditor />\n        </Box>\n      </TabPanel>\n    </TabContext>\n  );\n}\n","import { SettingsTwoTone as SettingsIcon } from \"@material-ui/icons\";\nimport { IconButtonWithTooltip } from \"components/generic/IconButtonWithTooltip\";\nimport {\n  AppBarTitle as Title,\n  ManagedModal as Dialog,\n} from \"components/generic/Modal\";\nimport { SettingsEditor } from \"components/settings-editor/SettingsEditor\";\n\nexport function Settings() {\n  return (\n    <>\n      <Dialog\n        trigger={(onClick) => (\n          <IconButtonWithTooltip\n            {...{ onClick }}\n            icon={<SettingsIcon fontSize=\"small\" color=\"primary\" />}\n            label=\"Settings\"\n          />\n        )}\n        options={{ width: 960, scrollable: false }}\n        appBar={{ children: <Title>Settings</Title> }}\n      >\n        <SettingsEditor />\n      </Dialog>\n    </>\n  );\n}\n","import { Typography as Type, BoxProps, Box } from \"@material-ui/core\";\r\nimport { Link } from \"@material-ui/core\";\r\n\r\n\r\nexport function Title(props: BoxProps) {\r\n  return (\r\n    <Box bgcolor=\"primary.main\" p={2} {...props}>\r\n      <Type\r\n        variant=\"body1\"\r\n        color=\"text.secondary\"\r\n        sx={{\r\n          color: \"primary.contrastText\",\r\n          whiteSpace: \"nowrap\",\r\n          fontWeight: 500,\r\n        }}\r\n      >\r\n        <Link href=\"/\" color=\"inherit\">PFAlgoViz</Link>\r\n      </Type>\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  FormControlLabel,\r\n  Switch as MuiSwitch,\r\n  SwitchProps as MuiSwitchProps,\r\n} from \"@material-ui/core\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype SwitchProps = { label?: ReactNode } & MuiSwitchProps;\r\n\r\nexport function Switch({ label = <></>, ...props }: SwitchProps) {\r\n  return (\r\n    <FormControlLabel\r\n      control={<MuiSwitch defaultChecked {...props} />}\r\n      {...{ label }}\r\n    />\r\n  );\r\n}\r\n","import { Comparator } from \"slices/UIState\";\r\n\r\nexport const comparators: Comparator[] = [\r\n  {\r\n    key: \"equal\",\r\n    apply: (a, b) => a === b,\r\n  },\r\n  {\r\n    key: \"less-than\",\r\n    apply: (a, b) => a < b,\r\n  },\r\n  {\r\n    key: \"greater-than\",\r\n    apply: (a, b) => a > b,\r\n  },\r\n];\r\n","export const intrinsicProperties = [\"f\", \"g\"];\r\n","import { TraceEventType } from \"protocol/Trace\";\r\n\r\nexport const eventTypes: (TraceEventType | \"any\")[] = [\r\n  \"any\",\r\n  \"source\",\r\n  \"destination\",\r\n  \"expanding\",\r\n  \"generating\",\r\n  \"closing\",\r\n];\r\n","import { Divider, TextField, Typography as Type } from \"@material-ui/core\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { SelectField as Select } from \"components/generic/Select\";\r\nimport { Space } from \"components/generic/Space\";\r\nimport { Switch } from \"components/generic/Switch\";\r\nimport { find, last, map, startCase } from \"lodash\";\r\nimport { Breakpoint } from \"slices/UIState\";\r\nimport { comparators } from \"./comparators\";\r\nimport { eventTypes } from \"./eventTypes\";\r\n\r\ntype BreakpointEditorProps = {\r\n  value: Breakpoint;\r\n  onValueChange?: (v: Breakpoint) => void;\r\n  properties?: string[];\r\n};\r\n\r\nexport function BreakpointEditor({\r\n  value,\r\n  onValueChange: onChange,\r\n  properties,\r\n}: BreakpointEditorProps) {\r\n  function handleChange(next: Partial<Breakpoint>) {\r\n    onChange?.({ ...value, ...next });\r\n  }\r\n  return (\r\n    <Flex>\r\n      <Select\r\n        placeholder=\"Event\"\r\n        sx={{ minWidth: 160 }}\r\n        items={map(eventTypes, (c) => ({ value: c, label: startCase(c) }))}\r\n        onChange={(v) => handleChange({ type: v === \"any\" ? undefined : v })}\r\n        value={value.type ?? \"any\"}\r\n      />\r\n      <Divider flexItem orientation=\"vertical\" sx={{ mx: 2 }} />\r\n      <Select\r\n        placeholder=\"Property\"\r\n        sx={{\r\n          minWidth: 140,\r\n          textOverflow: \"ellipsis\",\r\n          whiteSpace: \"nowrap\",\r\n        }}\r\n        items={map(properties, (c) => ({\r\n          value: c,\r\n          label: (\r\n            <>\r\n              {last(c.split(\".\"))}\r\n              <Space />\r\n              <Type\r\n                color=\"textSecondary\"\r\n                variant=\"body2\"\r\n                component=\"span\"\r\n              >{`event.${c}`}</Type>\r\n            </>\r\n          ),\r\n        }))}\r\n        onChange={(v) => handleChange({ property: v })}\r\n        value={value.property}\r\n      />\r\n      <Space />\r\n      <Select\r\n        placeholder=\"Condition\"\r\n        items={comparators.map((c) => ({\r\n          value: c.key,\r\n          label: startCase(c.key),\r\n        }))}\r\n        value={value?.condition?.key ?? comparators?.[0]?.key}\r\n        onChange={(v) =>\r\n          handleChange({ condition: find(comparators, { key: v }) })\r\n        }\r\n      />\r\n      <Space />\r\n      <TextField\r\n        label=\"Reference\"\r\n        fullWidth\r\n        value={`${value.reference ?? 0}`}\r\n        variant=\"filled\"\r\n        inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\r\n        onChange={(v) => handleChange({ reference: +v.target.value })}\r\n        type=\"number\"\r\n      />\r\n      <Space sx={{ px: 2 }} />\r\n      <Switch\r\n        checked={!!value.active}\r\n        onChange={(_, v) => handleChange({ active: v })}\r\n      />\r\n    </Flex>\r\n  );\r\n}\r\n","export const propertyPaths = [\"variables\"];\r\n","import { ListEditor } from \"components/generic/ListEditor\";\r\nimport { debounce, flatMap as flat, get, keys, map, uniq } from \"lodash\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { Breakpoint, useUIState } from \"slices/UIState\";\r\nimport { comparators } from \"./comparators\";\r\nimport { intrinsicProperties } from \"./intrinsicProperties\";\r\nimport { BreakpointEditor } from \"./BreakpointEditor\";\r\nimport { Box } from \"@material-ui/system\";\r\nimport { propertyPaths as paths } from \"./propertyPaths\";\r\n\r\nexport function BreakpointListEditor() {\r\n  const [{ breakpoints = [] }, setUIState] = useUIState();\r\n  const [{ specimen }] = useSpecimen();\r\n\r\n  const properties = uniq([\r\n    ...intrinsicProperties,\r\n    ...flat(paths, (p) =>\r\n      flat(specimen?.nodeStructure, (v) =>\r\n        map(keys(get(v, p)), (k) => `${p}.${k}`)\r\n      )\r\n    ),\r\n  ]);\r\n\r\n  return (\r\n    <Box sx={{ overflow: \"auto hidden\", width: \"100%\" }}>\r\n      <Box sx={{ minWidth: 720, mb: 2 }}>\r\n        <ListEditor<Breakpoint>\r\n          icon={null}\r\n          value={breakpoints}\r\n          useDelete\r\n          useEdit={false}\r\n          editor={(v) => <BreakpointEditor value={v} properties={properties} />}\r\n          create={() => ({\r\n            active: true,\r\n            property: properties?.[0],\r\n            condition: comparators?.[0],\r\n            type: undefined,\r\n            reference: 0,\r\n          })}\r\n          onChange={debounce((v) => setUIState({ breakpoints: v }), 1000)}\r\n          addItemLabel=\"Breakpoint\"\r\n          placeholderText=\"Click the button below to add a breakpoint.\"\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { debounce } from \"lodash\";\r\nimport AutoSize from \"react-virtualized-auto-sizer\";\r\nimport { useUIState } from \"slices/UIState\";\r\n\r\nconst DELAY = 2500;\r\n\r\nexport function ScriptEditor() {\r\n  const [{ code }, setUIState] = useUIState();\r\n  return (\r\n    <Flex height=\"70vh\" overflow=\"hidden\">\r\n      <AutoSize>\r\n        {({ width, height }) => (\r\n          <Editor\r\n            width={width}\r\n            loading={<CircularProgress variant=\"indeterminate\" />}\r\n            height={height}\r\n            language=\"javascript\"\r\n            defaultValue={code}\r\n            onChange={debounce((v) => setUIState({ code: v }), DELAY)}\r\n            options={{\r\n              minimap: {\r\n                enabled: false,\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n      </AutoSize>\r\n    </Flex>\r\n  );\r\n}\r\n","import download from \"downloadjs\";\nimport stringify from \"json-beautify\";\nimport { Trace } from \"protocol/Trace\";\n\nexport function saveJSON(filename: string, specimen?: Trace) {\n  download(\n    stringify(specimen, null as any, 2),\n    `${filename}.json`,\n    \"application/json\"\n  );\n}\n","import {\r\n  Box,\r\n  Divider,\r\n  Tab,\r\n  Typography as Type,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { Space } from \"components/generic/Space\";\r\nimport { Switch } from \"components/generic/Switch\";\r\nimport { ReactNode, useState } from \"react\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { BreakpointListEditor } from \"../breakpoint-editor/BreakpointListEditor\";\r\nimport { ScriptEditor } from \"components/script-editor/ScriptEditor\";\r\nimport { saveJSON as save } from \"./saveJSON\";\r\n\r\nexport function DebugOptionsEditor() {\r\n  const [{ specimen, format, algorithm }] = useSpecimen();\r\n  const [{ monotonicF, monotonicG }, setUIState] = useUIState();\r\n  const [tab, setTab] = useState(\"standard\");\r\n  function renderHeading(label: ReactNode) {\r\n    return (\r\n      <Type variant=\"overline\" color=\"textSecondary\">\r\n        {label}\r\n      </Type>\r\n    );\r\n  }\r\n  return (\r\n    <TabContext value={tab}>\r\n      <TabList onChange={(_, v) => setTab(v)}>\r\n        <Tab label=\"Standard\" value=\"standard\" />\r\n        <Tab label=\"Advanced\" value=\"advanced\" />\r\n      </TabList>\r\n      <Divider />\r\n      <TabPanel value=\"standard\">\r\n        <Box>\r\n          {renderHeading(\"General\")}\r\n          <Flex>\r\n            <Switch\r\n              label=\"Monotonic f value\"\r\n              checked={!!monotonicF}\r\n              onChange={(_, v) => setUIState({ monotonicF: v })}\r\n            />\r\n            <Space />\r\n            <Switch\r\n              label=\"Monotonic g value\"\r\n              checked={!!monotonicG}\r\n              onChange={(_, v) => setUIState({ monotonicG: v })}\r\n            />\r\n          </Flex>\r\n        </Box>\r\n        <Space />\r\n        <Box>\r\n          {renderHeading(\"Breakpoints\")}\r\n          <BreakpointListEditor />\r\n        </Box>\r\n        <Box>\r\n          {renderHeading(\"Export\")}\r\n          <Flex mt={1}>\r\n            <Button\r\n              variant=\"contained\"\r\n              disableElevation\r\n              disabled={!specimen}\r\n              onClick={() => save(`${algorithm}.${format}`, specimen)}\r\n            >\r\n              Save Trace as JSON\r\n            </Button>\r\n          </Flex>\r\n        </Box>\r\n      </TabPanel>\r\n      <TabPanel value=\"advanced\" sx={{ p: 0 }}>\r\n        <ScriptEditor />\r\n      </TabPanel>\r\n    </TabContext>\r\n  );\r\n}\r\n","import { Button, Tooltip } from \"@material-ui/core\";\r\nimport { BugReportTwoTone as BugIcon } from \"@material-ui/icons\";\r\nimport { DebugOptionsEditor } from \"components/debug-options-editor/DebugOptionsEditor\";\r\nimport {\r\n  AppBarTitle as Title,\r\n  ManagedModal as Dialog,\r\n} from \"components/generic/Modal\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\n\r\nexport function Utility() {\r\n  const [{ specimen }] = useSpecimen();\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        trigger={(onClick) => (\r\n          <Tooltip title=\"Debug Options\">\r\n            <Button\r\n              {...{ onClick }}\r\n              disabled={!specimen}\r\n              startIcon={<BugIcon />}\r\n            >\r\n              Debug\r\n            </Button>\r\n          </Tooltip>\r\n        )}\r\n        options={{ width: 960, scrollable: false }}\r\n        appBar={{ children: <Title>Debug Options</Title> }}\r\n      >\r\n        <DebugOptionsEditor />\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import { Button } from \"@material-ui/core\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\n\r\nexport function CameraControls() {\r\n  const [{ specimen }] = useSpecimen();\r\n  return (\r\n    <>\r\n      <Button disabled={!specimen}>Fit All</Button>\r\n      <Button disabled={!specimen}>Fit Trace</Button>\r\n      <Button disabled={!specimen}>100%</Button>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction ChangeCameraZoom(){\r\n  \r\n}","import { Box, Card, Divider } from \"@material-ui/core\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { useAcrylic } from \"theme\";\r\nimport { Input } from \"./Input\";\r\nimport { Playback } from \"./Playback\";\r\nimport { Settings } from \"./Settings\";\r\nimport { Title } from \"./Title\";\r\nimport { Utility } from \"./Utility\";\r\nimport { CameraControls } from \"./Camera\"\r\n\r\nconst divider = <Divider orientation=\"vertical\" flexItem sx={{ m: 1 }} />;\r\n\r\nexport function Controls() {\r\n  const acrylic = useAcrylic();\r\n  return (\r\n    <Card\r\n      sx={{\r\n        m: 3,\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: \"appBar\",\r\n        ...acrylic,\r\n      }}\r\n    >\r\n      <Box display=\"flex\">\r\n        <Title mr={1} />\r\n        <Flex p={1} alignItems=\"center\">\r\n          <Input />\r\n          {divider}\r\n          <Playback />\r\n          {divider}\r\n          <Utility />\r\n          {divider}\r\n          <CameraControls />\r\n          {divider}\r\n          <Settings />\r\n        </Flex>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","import { BlurOffOutlined as DisabledIcon } from \"@material-ui/icons\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { RendererProps } from \"components/renderer/Renderer\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\n\r\nexport function DefaultRenderer({ width, height }: RendererProps) {\r\n  const [{ format }] = useSpecimen();\r\n  return (\r\n    <Flex\r\n      {...{ width, height }}\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      color=\"text.secondary\"\r\n      vertical\r\n    >\r\n      <DisabledIcon sx={{ mb: 2 }} fontSize=\"large\" />\r\n      No renderer is installed for the current map format ({format}).\r\n    </Flex>\r\n  );\r\n}\r\n","import memo from \"memoizee\";\r\nimport { FunctionTemplate } from \"./FunctionTemplate\";\r\nimport { templates } from \"./templates\";\r\n\r\ntype TemplateMap = typeof templates;\r\n\r\ntype Key = keyof TemplateMap;\r\n\r\ntype ReturnTypeOf<T extends Key> = TemplateMap[T] extends FunctionTemplate<\r\n  [...any],\r\n  infer R\r\n>\r\n  ? R\r\n  : never;\r\n\r\ntype ParamsOf<T extends Key> = TemplateMap[T] extends FunctionTemplate<\r\n  infer R,\r\n  any\r\n>\r\n  ? R\r\n  : [];\r\n\r\nconst fn = memo(\r\n  (script: string, method: string) =>\r\n    // eslint-disable-next-line no-new-func\r\n    new Function(\r\n      \"params\",\r\n      `${script}; return ${method}.apply(null, params);`\r\n    ) as (params: any[]) => any\r\n);\r\n\r\nexport function call<T extends Key>(\r\n  script: string,\r\n  method: T,\r\n  params: ParamsOf<T>\r\n): ReturnTypeOf<T> {\r\n  try {\r\n    return fn(script, method)(params);\r\n  } catch {\r\n    return templates[method].defaultReturnValue as ReturnTypeOf<T>;\r\n  }\r\n}\r\n","import { SelectionInfo } from \"components/renderer/Renderer\";\r\nimport { findIndex, findLastIndex, take } from \"lodash\";\r\nimport { Trace, TraceEvent } from \"protocol/Trace\";\r\n\r\nexport function info(\r\n  { eventList }: Trace = {},\r\n  playback: number = 0,\r\n  key: number | undefined = undefined,\r\n  getStep: (s: TraceEvent) => boolean\r\n) {\r\n  const nodes = take(eventList, playback + 1);\r\n  const step = findLastIndex(nodes, getStep);\r\n  const entry = findIndex(\r\n    eventList,\r\n    (s) => s.type === \"expanding\" && getStep(s)\r\n  );\r\n  return {\r\n    current: step !== -1 ? { index: step, event: nodes[step] } : undefined,\r\n    entry: entry !== -1 ? { index: entry, event: nodes[entry] } : undefined,\r\n    node: key !== undefined ? { key } : undefined,\r\n  } as SelectionInfo;\r\n}\r\n","export const scale = 25;\r\nexport const size = 1200;\r\n","import { find } from \"lodash\";\r\nimport { Viewport as PixiViewportBase } from \"pixi-viewport\";\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport type ViewportEvent = {\r\n  global: PIXI.Point;\r\n  world: PIXI.Point;\r\n  event: PointerEvent;\r\n};\r\n\r\nexport type ViewportEventHandler = (e: ViewportEvent) => void;\r\n\r\nexport type PointerEvent = \"onMouseOver\" | \"onClick\" | \"onMouseDown\";\r\n\r\nexport type PropEventPair = {\r\n  prop: PointerEvent;\r\n  event: string;\r\n  filter?: boolean;\r\n};\r\n\r\nexport const events = [\r\n  { prop: \"onClick\", event: \"pointerup\", filter: true },\r\n  { prop: \"onMouseOver\", event: \"mousemove\" },\r\n  { prop: \"onMouseDown\", event: \"pointerdown\", filter: true },\r\n] as PropEventPair[];\r\n\r\nexport class PixiViewport extends PixiViewportBase {\r\n  events: {\r\n    [K in string]?: () => void;\r\n  } = {};\r\n  register(prop: PointerEvent, handler?: ViewportEventHandler) {\r\n    const { event, filter } = find(events, (c) => c.prop === prop)!;\r\n    this.events?.[event]?.();\r\n    if (handler) {\r\n      const f = (e: PIXI.InteractionEvent) => {\r\n        const { global } = e.data;\r\n        if (!filter || this.input.last?.equals(global)) {\r\n          handler?.({\r\n            global,\r\n            world: this.toWorld(global),\r\n            event: prop,\r\n          });\r\n        }\r\n      };\r\n      this.on(event, f);\r\n      this.events[event] = () => this.off(event, f);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Adapted from https://codesandbox.io/s/react-pixi-viewport-9ngfd\r\n * @author roxgarage\r\n */\r\n\r\nimport { PixiComponent, useApp } from \"@inlet/react-pixi\";\r\nimport { map } from \"lodash\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport React from \"react\";\r\nimport { scale } from \"./config\";\r\nimport {\r\n  PointerEvent,\r\n  PixiViewport,\r\n  events,\r\n  ViewportEventHandler,\r\n} from \"./PixiViewport\";\r\n\r\nexport type ViewportProps = {\r\n  width?: number;\r\n  height?: number;\r\n  children?: React.ReactNode;\r\n  event?: PIXI.InteractionEvent;\r\n} & { [K in PointerEvent]?: ViewportEventHandler };\r\n\r\nexport type Props = {\r\n  app: PIXI.Application;\r\n} & ViewportProps;\r\n\r\nfunction create(props: Props) {\r\n  const viewport = new PixiViewport({\r\n    interaction: props.app.renderer.plugins.interaction,\r\n    ticker: props.app.ticker,\r\n    stopPropagation: true,\r\n    passiveWheel: false,\r\n  })\r\n    .drag()\r\n    .pinch()\r\n    .wheel()\r\n    .decelerate({ friction: 0.98 })\r\n    .clampZoom({ maxScale: 10 * scale, minScale: 0.02 * scale })\r\n    .zoomPercent(scale);\r\n  return viewport as PixiViewport;\r\n}\r\n\r\nfunction applyProps(\r\n  v: PixiViewport,\r\n  prev: Props,\r\n  { width, height, ...next }: Props\r\n) {\r\n  for (const { equal, apply } of [\r\n    ...map(events, ({ prop }) => ({\r\n      equal: prev[prop] === next[prop],\r\n      apply: () => v.register(prop, next[prop]),\r\n    })),\r\n    {\r\n      prop: prev.width === width && prev.height === height,\r\n      apply: () => v.resize(width, height, (width ?? 0) * 2, (height ?? 0) * 2),\r\n    },\r\n  ]) {\r\n    !equal && apply();\r\n  }\r\n}\r\n\r\nconst Component = PixiComponent<Props, PixiViewport>(\"Viewport\", {\r\n  create: (props) => {\r\n    const viewport = create(props);\r\n    applyProps(viewport, props, props);\r\n    return viewport;\r\n  },\r\n  applyProps,\r\n});\r\n\r\nexport const Viewport = (props: ViewportProps) => {\r\n  const app = useApp();\r\n  return <Component app={app} {...props} />;\r\n};\r\n","import { Stage } from \"@inlet/react-pixi\";\nimport { Box, BoxProps } from \"@material-ui/core\";\nimport { ComponentProps, forwardRef, ReactNode } from \"react\";\nimport { Viewport } from \"./Viewport\";\nimport { RendererProps } from \"../Renderer\";\n\ntype RasterRendererProps = RendererProps & {\n  children?: ReactNode;\n  StageProps?: ComponentProps<typeof Stage>;\n  ViewportProps?: ComponentProps<typeof Viewport>;\n  BoxProps?: BoxProps;\n};\n\nexport const RasterRenderer = forwardRef<unknown, RasterRendererProps>(\n  ({ children, width, height, ViewportProps, StageProps, BoxProps }, ref) => (\n    <Box {...BoxProps} ref={ref}>\n      <Stage\n        options={{\n          backgroundColor: 0xffffff,\n          autoDensity: true,\n          clearBeforeRender: false,\n          resolution: 1,\n          antialias: true,\n        }}\n        {...StageProps}\n      >\n        <Viewport width={width} height={height} {...ViewportProps}>\n          {children}\n        </Viewport>\n      </Stage>\n    </Box>\n  )\n);\n","import { Graphics } from \"@inlet/react-pixi\";\r\nimport { ComponentProps } from \"react\";\r\nimport { Graphics as PIXIGraphics } from \"@pixi/graphics\";\r\n\r\nexport function makeGraphic<T = any>(\r\n  draw: (g: PIXIGraphics, props: ComponentProps<typeof Graphics> & T) => void\r\n) {\r\n  return (props: ComponentProps<typeof Graphics> & T) => {\r\n    return <Graphics {...props} draw={(g) => draw(g, props)} />;\r\n  };\r\n}\r\n","import { Graphics } from \"@pixi/graphics\";\r\nimport { map } from \"lodash\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\nimport { Point } from \"../Size\";\r\nimport { Scale } from \"../Size\";\r\nimport { scale } from \"./config\";\r\nimport { makeGraphic } from \"./makeGraphic\";\r\n\r\nexport type Graphic = {\r\n  color?: number;\r\n  radius?: number;\r\n};\r\n\r\nexport type Edge = {\r\n  weight?: number;\r\n  a?: Point;\r\n  b?: Point;\r\n};\r\n\r\nexport type Tri = Edge & {\r\n  c?: Point;\r\n  fill?: number;\r\n  fillAlpha?: number;\r\n};\r\n\r\nexport type NodeOptions = Partial<Point> & Graphic & Edge & Tri;\r\n\r\nexport type Draw = (g: Graphics, p: NodeOptions) => Graphics;\r\n\r\nexport type NodeOptionsMapper<T extends string> = (\r\n  obj?: TraceEvent<T>,\r\n  scale?: Scale\r\n) => NodeOptions;\r\n\r\nexport const node: Draw = (g, { color, a, radius = 0.25, fillAlpha = 1 }) =>\r\n  g\r\n    .beginFill(color ?? 0x000000, fillAlpha)\r\n    .drawCircle(a?.x ?? 0, a?.y ?? 0, radius)\r\n    .endFill();\r\n\r\nexport const square: Draw = (g, { color, a, radius = 0.5, fillAlpha = 1 }) =>\r\n  g\r\n    .beginFill(color ?? 0x000000, fillAlpha)\r\n    .drawRect(\r\n      (a?.x ?? 0) - radius / 2,\r\n      (a?.y ?? 0) - radius / 2,\r\n      radius,\r\n      radius\r\n    )\r\n    .endFill();\r\n\r\nexport const box: Draw = (g, { color, a, radius = 1, fillAlpha = 1 }) =>\r\n  g\r\n    .beginFill(color ?? 0x000000, fillAlpha)\r\n    .drawRect(\r\n      (a?.x ?? 0) - radius / 2,\r\n      (a?.y ?? 0) - radius / 2,\r\n      radius,\r\n      radius\r\n    )\r\n    .endFill();\r\n\r\nexport const line: Draw = (g, { color, a, b, weight = 1 / scale }) =>\r\n  g\r\n    .moveTo(a?.x ?? 0, a?.y ?? 0)\r\n    .lineStyle(weight, color, 1)\r\n    .lineTo(b?.x ?? 0, b?.y ?? 0);\r\n\r\nexport const tri: Draw = (\r\n  g,\r\n  { color, a, b, c, weight = 1 / scale, fill, fillAlpha = 1 }\r\n) =>\r\n  g\r\n    .lineStyle(weight, color, 1)\r\n    .beginFill(fill, fillAlpha)\r\n    .drawPolygon([\r\n      a?.x ?? 0,\r\n      a?.y ?? 0,\r\n      b?.x ?? 0,\r\n      b?.y ?? 0,\r\n      c?.x ?? 0,\r\n      c?.y ?? 0,\r\n    ])\r\n    .endFill();\r\n\r\nexport const [Node, Box, Square, Line] = map([node, box, square, line], (f) =>\r\n  makeGraphic<NodeOptions>((g, p) => {\r\n    g.clear();\r\n    f(g, p);\r\n  })\r\n);\r\n","import { Graphics } from \"@inlet/react-pixi\";\r\nimport { constant, filter, floor, identity, memoize, slice } from \"lodash\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport { Trace } from \"protocol/Trace\";\r\nimport { useCallback, useMemo } from \"react\";\r\nimport { Scale } from \"../Size\";\r\nimport { box, NodeOptions, NodeOptionsMapper } from \"./Draw\";\r\n\r\nexport type Props<T extends string> = {\r\n  nodes?: Trace<T>[\"eventList\"];\r\n  variant?: (g: PIXI.Graphics, options: NodeOptions) => PIXI.Graphics;\r\n  condition?: (step: number) => boolean;\r\n  scale?: Scale;\r\n  options?: NodeOptionsMapper<T>;\r\n};\r\n\r\nconst defaultCondition = constant(true);\r\n\r\nexport function NodeList<T extends string>({\r\n  nodes,\r\n  variant = box,\r\n  condition = defaultCondition,\r\n  scale,\r\n  options = identity,\r\n}: Props<T>) {\r\n  const memo = useMemo(\r\n    () => filter(nodes, (_, i) => condition(i)),\r\n    [nodes, condition]\r\n  );\r\n  const draw = useCallback(\r\n    (g: PIXI.Graphics) => {\r\n      g.clear();\r\n      for (const s of memo) variant(g, options(s, scale));\r\n      return g;\r\n    },\r\n    [memo, variant, scale, options]\r\n  );\r\n  return <Graphics draw={draw} />;\r\n}\r\n\r\nconst down = (n: number, a: number = 1) => floor(n / a) * a;\r\n\r\nexport function LazyNodeList<T extends string>({\r\n  nodes,\r\n  step = 0,\r\n  size = 2500,\r\n  condition,\r\n  ...props\r\n}: {\r\n  step?: number;\r\n  size?: number;\r\n} & Props<T>) {\r\n  const threshold = down(step, size);\r\n\r\n  const chunk = useMemo(\r\n    () => memoize((n: number) => slice(nodes, 0, n)),\r\n    [nodes]\r\n  );\r\n\r\n  const c = useCallback(\r\n    (n: number) => condition?.(n + threshold) ?? true,\r\n    [condition, threshold]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <NodeList {...props} nodes={chunk(threshold)} condition={condition} />\r\n      <NodeList\r\n        {...props}\r\n        nodes={slice(nodes, threshold, step + 1)}\r\n        condition={c}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useTween } from \"react-use\";\nimport { Node } from \"./Draw\";\nimport { ComponentProps as PropsOf } from \"react\";\n\nexport type SelectedProps = {\n  animateScale?: boolean;\n  animateAlpha?: boolean;\n} & PropsOf<typeof Node>;\n\nexport function Selected({\n  x = 0,\n  y = 0,\n  alpha = 0,\n  animateScale,\n  animateAlpha,\n  ...props\n}: SelectedProps) {\n  const t = useTween(\"outCirc\", 300);\n  return (\n    <Node\n      {...props}\n      scale={animateScale ? t : 1}\n      x={x}\n      y={y}\n      radius={1}\n      alpha={(animateAlpha ? t : 1) * alpha}\n    />\n  );\n}\n","import { map } from \"lodash\";\r\nimport { Scale, Point } from \"../Size\";\r\nimport { Selected } from \"./Selected\";\r\n\r\ntype Props = {\r\n  hover?: Point;\r\n  highlight?: Point;\r\n  scale: Scale;\r\n};\r\n\r\nexport function Selection({ scale: { to }, hover, highlight }: Props) {\r\n  return (\r\n    <>\r\n      {map(\r\n        [\r\n          { point: hover, alpha: 0.04, animateAlpha: true },\r\n          { point: highlight, alpha: 0.08, animateScale: true },\r\n        ],\r\n        ({ point, ...props }, i) =>\r\n          point && (\r\n            <Selected\r\n              key={`${i}::${point.x}::${point.y}`}\r\n              x={to(point).x}\r\n              y={to(point).y}\r\n              color={0x000000}\r\n              {...props}\r\n            />\r\n          )\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { ceil, floor, forEach, range } from \"lodash\";\r\nimport { MapInfo } from \"../Parser\";\r\nimport { scale } from \"../raster/config\";\r\nimport { makeGraphic } from \"../raster/makeGraphic\";\r\nimport { Scale } from \"../Size\";\r\n\r\nconst WEIGHT = 1 / scale;\r\n\r\ntype Props = {\r\n  alpha?: number;\r\n  grid?: number;\r\n};\r\n\r\nconst Grid = makeGraphic<Props>(\r\n  (g, { width = 0, height = 0, alpha = 1, grid = 5 }) => {\r\n    g.clear();\r\n    g.lineStyle(WEIGHT, 0x000000, alpha);\r\n    forEach(range(grid, height, grid), (i) =>\r\n      g.moveTo(0, i + WEIGHT / 2).lineTo(width, i + WEIGHT / 2)\r\n    );\r\n    forEach(range(grid, width, grid), (i) =>\r\n      g.moveTo(i + WEIGHT / 2, 0).lineTo(i + WEIGHT / 2, height)\r\n    );\r\n  }\r\n);\r\n\r\nexport function Guides({\r\n  scale: { minX, minY, maxX, maxY, to },\r\n  grid = 5,\r\n  alpha,\r\n}: Props & { map: MapInfo; scale: Scale }) {\r\n  const a = to({ x: minX, y: minY });\r\n  const b = to({ x: maxX, y: maxY });\r\n  return (\r\n    <Grid\r\n      {...{ alpha, grid }}\r\n      x={floor(a.x)}\r\n      y={floor(a.y)}\r\n      width={ceil((b.x - a.x) / grid) * grid}\r\n      height={ceil((b.y - a.y) / grid) * grid}\r\n    />\r\n  );\r\n}\r\n","import {\r\n  blueGrey,\r\n  deepOrange,\r\n  orange,\r\n  pink,\r\n  teal,\r\n  yellow,\r\n} from \"@material-ui/core/colors\";\r\nimport { mapValues } from \"lodash\";\r\nimport { TraceEventType } from \"protocol/Trace\";\r\n\r\nconst tint = \"500\";\r\n\r\nexport function hex(h: string) {\r\n  return parseInt(h.replace(\"#\", \"0x\"));\r\n}\r\n\r\nexport const colorsHex = {\r\n  source: teal[\"A400\"],\r\n  destination: pink[\"A400\"],\r\n  expanding: deepOrange[tint],\r\n  generating: yellow[tint],\r\n  closing: blueGrey[\"200\"],\r\n  end: pink[\"A400\"],\r\n};\r\n\r\nexport const colors: { [K in TraceEventType]: number } = mapValues(\r\n  colorsHex,\r\n  hex\r\n);\r\n\r\nexport function getColor(key?: TraceEventType) {\r\n  return (key && colors[key]) || hex(orange[tint]);\r\n}\r\n\r\nexport function getColorHex(key?: TraceEventType) {\r\n  return (key && colorsHex[key]) ?? orange[tint];\r\n}\r\n","import { getColor } from \"../colors\";\nimport { NodeOptionsMapper as Options } from \"../raster/Draw\";\n\nexport const progressOptions: Options<\"x\" | \"y\"> = (\n  { type, variables: { x = 0, y = 0, ...v } = {} } = {},\n  s\n) => ({\n  ...v,\n  a: s?.to?.({ x, y }),\n  color: getColor(type),\n});\n\nexport const shadowOptions: Options<\"x\" | \"y\"> = (\n  { variables: { x = 0, y = 0, ...v } = {} } = {},\n  s\n) => ({\n  ...v,\n  a: s?.to?.({ x, y }),\n  color: 0xf1f1f1,\n});\n","import { Stage } from \"@inlet/react-pixi\";\nimport { RendererProps } from \"components/renderer/Renderer\";\nimport { call } from \"components/script-editor/call\";\nimport { constant, delay, memoize, throttle } from \"lodash\";\nimport {\n  Children,\n  cloneElement,\n  ComponentProps,\n  ReactElement,\n  useCallback,\n  useMemo,\n  useState,\n} from \"react\";\nimport { useSpecimen } from \"slices/specimen\";\nimport { useUIState } from \"slices/UIState\";\nimport { info as selectionInfo } from \"../info\";\nimport { MapInfo } from \"../Parser\";\nimport { RasterRenderer } from \"../raster\";\nimport {\n  LazyNodeList as LazyNodes,\n  NodeList as Nodes,\n  Props as NodesProps,\n} from \"../raster/NodeList\";\nimport { ViewportEvent } from \"../raster/PixiViewport\";\nimport { Selection } from \"../raster/Selection\";\nimport { Point, Scale } from \"../Size\";\nimport { Guides } from \"./Guides\";\nimport {\n  progressOptions as defaultProgressOptions,\n  shadowOptions as defaultShadowOptions,\n} from \"./options\";\n\nconst { map } = Children;\n\nexport type PlanarRendererProps = {\n  map: MapInfo;\n  scale: Scale;\n  ProgressProps?: NodesProps<string>;\n  ShadowProps?: NodesProps<string>;\n  overlay?: ReactElement | ReactElement[];\n  children?: ReactElement | ReactElement[];\n} & RendererProps &\n  Omit<ComponentProps<typeof Stage>, \"onSelect\" | \"children\">;\n\nexport function PlanarRenderer({\n  map: m,\n  scale,\n  onSelect,\n  selection,\n  children,\n  overlay,\n  ShadowProps: shadowOptions,\n  ProgressProps: progressOptions,\n  ...props\n}: PlanarRendererProps) {\n  const info = { map: m, scale };\n\n  const [ref, setRef] = useState<HTMLDivElement | null>(null);\n  const [{ specimen }] = useSpecimen();\n  const [{ step = 0, code }] = useUIState();\n\n  const [active, setActive] = useState<Point>();\n  const [hover, setHover] = useState<Point>();\n\n  const { from, scale: s } = scale;\n  const { snap, nodeAt, matchNode } = m;\n\n  const handleClick = useCallback(\n    ({ global, world }: ViewportEvent, step: number = 0) => {\n      if (ref && specimen) {\n        const { top, left } = ref.getBoundingClientRect();\n        const point = snap(from(world), s);\n        if (point) {\n          onSelect?.({\n            global: { x: left + global.x, y: top + global.y },\n            world: point,\n            info: {\n              ...selectionInfo(specimen, step, nodeAt(point), (s) =>\n                matchNode(s, point)\n              ),\n              point: point,\n            },\n          });\n        }\n      }\n    },\n    [ref, onSelect, specimen, snap, s, nodeAt, from, matchNode]\n  );\n\n  const handleMouseEvent = useMemo(() => {\n    let timeout = 0;\n    const resolveHover = throttle((p) => setHover(snap(p, s)), 100);\n    return ({ world, event }: ViewportEvent) => {\n      switch (event) {\n        case \"onMouseOver\":\n          resolveHover(from(world));\n          setActive(undefined);\n          clearTimeout(timeout);\n          break;\n        case \"onMouseDown\":\n          timeout = delay(() => setActive(snap(from(world), s)), 100);\n          break;\n      }\n    };\n  }, [snap, setHover, from, s]);\n\n  const condition = useMemo(() => {\n    if (code && specimen?.eventList) {\n      return memoize((n: number) =>\n        code && specimen?.eventList\n          ? call(code ?? \"\", \"shouldRender\", [\n              n,\n              specimen.eventList[n],\n              specimen.eventList,\n            ])\n          : true\n      );\n    } else return constant(true);\n  }, [code, specimen?.eventList]);\n\n  return (\n    <RasterRenderer\n      ref={setRef}\n      StageProps={props}\n      BoxProps={{ sx: { cursor: hover ? \"pointer\" : \"auto\" } }}\n      ViewportProps={{\n        onClick: (e) => handleClick(e, step),\n        onMouseDown: handleMouseEvent,\n        onMouseOver: handleMouseEvent,\n      }}\n    >\n      <Nodes\n        options={defaultShadowOptions}\n        {...shadowOptions}\n        {...info}\n        nodes={specimen?.eventList}\n      />\n      {map(children, (c) => c && cloneElement(c, info))}\n      <LazyNodes\n        options={defaultProgressOptions}\n        {...progressOptions}\n        {...info}\n        nodes={specimen?.eventList}\n        step={step}\n        condition={condition}\n      />\n      {map(overlay, (c) => c && cloneElement(c, info))}\n      <Selection {...info} hover={hover} highlight={selection || active} />\n      <Guides {...info} alpha={0.24} grid={1} />\n    </RasterRenderer>\n  );\n}\n","import { Graphics } from \"@inlet/react-pixi\";\r\nimport { Graphics as PixiGraphics } from \"@pixi/graphics\";\r\nimport { isNull, isUndefined, keyBy } from \"lodash\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\nimport { useMemo } from \"react\";\r\nimport { getColor } from \"../colors\";\r\nimport { scale } from \"../raster/config\";\r\nimport { Square } from \"../raster/Draw\";\r\nimport { Scale } from \"../Size\";\r\n\r\nconst WEIGHT = 3 / scale;\r\n\r\nfunction defined<T>(obj: T): obj is Exclude<T, undefined | null> {\r\n  return !isUndefined(obj) && !isNull(obj);\r\n}\r\n\r\ntype PathProps = {\r\n  nodes?: TraceEvent<\"x\" | \"y\">[];\r\n  step?: number;\r\n  scale: Scale;\r\n};\r\n\r\nexport function Path({ nodes = [], step = 0, scale: { to } }: PathProps) {\r\n  const path = useMemo(() => {\r\n    const memo = keyBy(nodes, \"id\");\r\n    return (s: number) => {\r\n      const out = [];\r\n      let next: TraceEvent | undefined = nodes[s];\r\n      while (next) {\r\n        out.push(next);\r\n        next = defined(next.pId) ? memo[`${next.pId}`] : undefined;\r\n      }\r\n      return out;\r\n    };\r\n  }, [nodes]);\r\n\r\n  const draw = useMemo(() => {\r\n    const p = path(step);\r\n    return (g: PixiGraphics) => {\r\n      g.clear();\r\n      for (const [i, node] of p.entries()) {\r\n        const { x, y } = to({ x: 0, y: 0, ...node?.variables });\r\n        g.lineTo(x, y);\r\n        if (!i) g.lineStyle(WEIGHT, getColor(\"source\"));\r\n      }\r\n    };\r\n  }, [path, step, to]);\r\n\r\n  const point = to({ x: 0, y: 0, ...nodes[step]?.variables });\r\n\r\n  return (\r\n    <>\r\n      <Graphics draw={draw} />\r\n      {nodes?.[step] && <Square {...point} color={getColor(\"source\")} />}\r\n    </>\r\n  );\r\n}\r\n","import { Dictionary } from \"lodash\";\nimport { useMemo } from \"react\";\nimport { useSpecimen } from \"slices/specimen\";\nimport { MapParserOptions } from \"components/renderer/Parser\";\n\nexport function useMap<\n  T extends {},\n  M extends Dictionary<string>,\n  K extends string\n>({ parse, options, normalize }: MapParserOptions<T, M, K>) {\n  const [{ map, specimen }] = useSpecimen();\n  const m = useMemo(() => parse(map ?? \"\", options), [map, parse, options]);\n  const t = useMemo(() => {\n    return normalize(m, specimen?.eventList);\n  }, [m, specimen?.eventList, normalize]);\n  return useMemo(\n    () => ({\n      map: m,\n      scale: t,\n    }),\n    [m, t]\n  );\n}\n","import { MapInfo } from \"../Parser\";\nimport { Point, Scale } from \"../Size\";\n\nexport function normalize(m: MapInfo) {\n  return {\n    to: ({ x, y }: Point) => ({ x: x + 0.5, y: y + 0.5 }),\n    from: ({ x, y }: Point) => ({ x: x - 0.5, y: y - 0.5 }),\n    scale: 1,\n    ...m.bounds,\n  } as Scale;\n}\n","import { blueGrey, grey } from \"@material-ui/core/colors\";\nimport { hex } from \"../colors\";\nimport { NodeOptionsMapper } from \"../raster/Draw\";\n\nconst wallColor = hex(grey[\"800\"]);\n\nexport const wallOptions: NodeOptionsMapper<\"x\" | \"y\"> = (\n  { variables: { x = 0, y = 0, ...v } = {} } = {},\n  s\n) => ({ ...v, a: s?.to?.({ x, y }), color: wallColor });\n","import { getColor } from \"../colors\";\r\nimport { MapInfo } from \"../Parser\";\r\nimport { Square } from \"../raster/Draw\";\r\nimport { Scale } from \"../Size\";\r\n\r\ntype OverlayProps = {\r\n  map?: MapInfo;\r\n  scale?: Scale;\r\n  start?: number;\r\n  end?: number;\r\n};\r\nexport function Overlay({ start, end, map, scale }: OverlayProps) {\r\n  return (\r\n    <>\r\n      {[\r\n        { color: getColor(\"destination\"), node: end },\r\n        { color: getColor(\"source\"), node: start },\r\n      ].map(\r\n        ({ color, node }, i) =>\r\n          node !== undefined && (\r\n            <Square\r\n              {...scale?.to?.({ x: 0, y: 0, ...map?.pointOf?.(node) })}\r\n              key={i}\r\n              color={color}\r\n            />\r\n          )\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { Dictionary } from \"lodash\";\nimport memo from \"memoizee\";\nimport { TraceEvent } from \"protocol/Trace\";\nimport { NodeMatcher } from \"./NodeMatcher\";\nimport { Point } from \"./Size\";\nimport { Bounds, Scale } from \"./Size\";\n\nexport type MapParser<T extends {} = {}, M extends Dictionary<string> = {}> = (\n  map?: string,\n  options?: Partial<T>\n) => MapInfo<M>;\n\nexport type MapParserOptions<\n  T extends {},\n  M extends Dictionary<string>,\n  K extends string\n> = {\n  parse: MapParser<T, M>;\n  options?: Partial<T>;\n  normalize: (m: MapInfo<M>, steps?: TraceEvent<K>[]) => Scale;\n};\n\nexport function makeMapParser<T, M extends Dictionary<string>>(\n  p: (map: string, options: Partial<T>) => MapInfo<M>\n) {\n  return memo((m: string = \"\", o: Partial<T> = {}) => p(m, o), {\n    length: 2,\n  }) as MapParser<T, M>;\n}\n\nexport type MapInfo<M extends Dictionary<string> = {}> = {\n  bounds: Bounds;\n  nodes: {\n    [K in keyof M]: TraceEvent<M[K]>[];\n  };\n  snap: (point: Point, scale?: number) => Point | undefined;\n  nodeAt: (point: Point) => number | undefined;\n  pointOf: (node: number) => Point | undefined;\n  matchNode: NodeMatcher;\n};\n","import { TraceEvent } from \"protocol/Trace\";\nimport { Point } from \"./Size\";\n\nexport type NodeMatcher<T extends string = string> = (\n  s: TraceEvent<T>,\n  point: Point\n) => boolean;\n\nexport const byPoint: NodeMatcher<keyof Point> = ({ variables }, { x, y }) =>\n  variables?.x === x && variables?.y === y;\n","import { filter, flatMap as flat, last, map } from \"lodash\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\nimport { makeMapParser } from \"../Parser\";\r\nimport { byPoint } from \"../NodeMatcher\";\r\nimport { Structure } from \"./Structure\";\r\n\r\nconst { floor } = Math;\r\n\r\nfunction between(v: number, min: number, max: number) {\r\n  return v >= min && v < max;\r\n}\r\n\r\ntype Options = {\r\n  wall?: string;\r\n};\r\n\r\nexport const parse = makeMapParser<Options, Structure>(\r\n  (m, { wall = \"@\" }: Options) => {\r\n    const lines = m.split(\"\\n\");\r\n    const [, h, w, , ...grid] = lines;\r\n    const [width, height] = [w, h].map((d) => +last(d.split(\" \"))!);\r\n\r\n    return {\r\n      bounds: { width, height, minX: 0, minY: 0, maxX: width, maxY: height },\r\n      nodes: {\r\n        walls: filter(\r\n          flat(grid, (row, y) =>\r\n            map(row, (tile, x) =>\r\n              tile === wall ? { variables: { x, y } } : undefined\r\n            )\r\n          )\r\n        ) as TraceEvent[],\r\n      },\r\n      snap: ({ x: x1, y: y1 }, scale = 1) => {\r\n        const [x, y] = [floor(x1 + scale / 2), floor(y1 + scale / 2)];\r\n        if (\r\n          between(x, 0, width) &&\r\n          between(y, 0, height) &&\r\n          grid[y]?.[x] !== wall\r\n        )\r\n          return { x, y };\r\n      },\r\n      nodeAt: (point) => {\r\n        const { x, y } = point;\r\n        return y * width + x;\r\n      },\r\n      pointOf: (node) => ({ x: node % width, y: ~~(node / width) }),\r\n      matchNode: byPoint,\r\n    };\r\n  }\r\n);\r\n","import { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { PlanarRenderer } from \"../planar\";\r\nimport { Path } from \"./Path\";\r\nimport { useMap } from \"../../../hooks/useMap\";\r\nimport { NodeList as Nodes } from \"../raster/NodeList\";\r\nimport { RendererProps } from \"../Renderer\";\r\nimport { normalize } from \"./normalize\";\r\nimport { wallOptions } from \"./options\";\r\nimport { Overlay } from \"./Overlay\";\r\nimport { parse } from \"./parse\";\r\n\r\nexport function GridRenderer(props: RendererProps) {\r\n  const [{ specimen }] = useSpecimen();\r\n  const [{ start, end, step }] = useUIState();\r\n\r\n  const info = useMap({ parse, normalize });\r\n\r\n  const {\r\n    map: {\r\n      nodes: { walls },\r\n    },\r\n  } = info;\r\n\r\n  return (\r\n    <PlanarRenderer\r\n      {...info}\r\n      {...props}\r\n      overlay={[\r\n        <Overlay start={start} end={end} />,\r\n        <Path {...info} nodes={specimen?.eventList} step={step} />,\r\n      ]}\r\n    >\r\n      <Nodes nodes={walls} options={wallOptions} />\r\n    </PlanarRenderer>\r\n  );\r\n}\r\n","import { maxBy, minBy } from \"lodash\";\nimport { TraceEvent } from \"protocol/Trace\";\nimport { MapInfo } from \"../Parser\";\nimport { Point } from \"../Size\";\nimport { Scale } from \"../Size\";\nimport { Structure } from \"./Structure\";\n\nconst { max, log10 } = Math;\n\nconst mag = (n: number) => 10 ** ~~log10(n);\n\nconst keys = [\"x\", \"y\"] as const;\n\nconst pairs = [\n  [\"cx\", \"cy\"],\n  [\"x1\", \"y1\"],\n  [\"x2\", \"y2\"],\n] as const;\n\nexport function normalize(m: MapInfo<Structure>, steps?: TraceEvent[]) {\n  const verts = [...m.nodes.edges, ...(steps ?? [])].flatMap(({ variables }) =>\n    pairs.map(([x, y]) => ({\n      x: variables?.[x],\n      y: variables?.[y],\n    }))\n  );\n\n  const [[minX, minY], [maxX, maxY]] = [minBy, maxBy].map((f) =>\n    keys.map((k) => f(verts, k)?.[k] ?? 0)\n  );\n\n  const [width, height] = [maxX - minX, maxY - minY];\n\n  const scale = 20 / mag(max(width, height));\n\n  const to = ({ x, y }: Point) => ({\n    x: (x - minX) * scale,\n    y: (y - minY) * scale,\n  });\n\n  const from = ({ x, y }: Point) => ({\n    x: x / scale + minX,\n    y: y / scale + minY,\n  });\n\n  return {\n    to,\n    from,\n    scale,\n    width,\n    height,\n    minX,\n    maxX,\n    minY,\n    maxY,\n  } as Scale;\n}\n","import { blueGrey } from \"@material-ui/core/colors\";\nimport { getColor, hex } from \"../colors\";\nimport { NodeOptionsMapper as Options } from \"../raster/Draw\";\nimport { Structure } from \"./Structure\";\n\nexport const shadowColor = hex(blueGrey[\"100\"]);\nexport const color = hex(blueGrey[\"500\"]);\n\nexport const shadowOptions: Options<Structure[\"edges\"]> = (\n  {\n    variables: { cx = 0, cy = 0, x1 = 0, y1 = 0, x2 = 0, y2 = 0, ...v } = {},\n  } = {},\n  s\n) => ({\n  ...v,\n  a: s?.to?.({ x: cx, y: cy }),\n  b: s?.to?.({ x: x1, y: y1 }),\n  c: s?.to?.({ x: x2, y: y2 }),\n  color: shadowColor,\n  fillAlpha: 0,\n});\n\nexport const progressOptions: Options<Structure[\"edges\"]> = (\n  {\n    type,\n    variables: { cx = 0, cy = 0, x1 = 0, y1 = 0, x2 = 0, y2 = 0, ...v } = {},\n  } = {},\n  s\n) => ({\n  ...v,\n  a: s?.to?.({ x: cx, y: cy }),\n  b: s?.to?.({ x: x1, y: y1 }),\n  c: s?.to?.({ x: x2, y: y2 }),\n  color: getColor(type),\n  fill: color,\n  fillAlpha: 0.08,\n});\n\nexport const options: Options<Structure[\"edges\"]> = (\n  { type, variables: { cx = 0, cy = 0, ...v } = {} } = {},\n  s\n) => ({\n  ...v,\n  a: s?.to?.({ x: cx, y: cy }),\n  color: getColor(type),\n});\n","import { makeMapParser } from \"../Parser\";\r\nimport { byPoint } from \"../NodeMatcher\";\r\nimport { Structure } from \"./Structure\";\r\n\r\ntype Options = {};\r\n\r\nexport const parse = makeMapParser<Options, Structure>(() => ({\r\n  bounds: { width: 0, height: 0, minX: 0, maxX: 0, minY: 0, maxY: 0 },\r\n  nodes: {\r\n    edges: [],\r\n  },\r\n  snap: () => undefined,\r\n  nodeAt: () => undefined,\r\n  pointOf: () => undefined,\r\n  matchNode: byPoint,\r\n}));\r\n","import { Graphics } from \"@inlet/react-pixi\";\r\nimport { Graphics as PixiGraphics } from \"@pixi/graphics\";\r\nimport { isNull, isUndefined, keyBy } from \"lodash\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\nimport { useMemo } from \"react\";\r\nimport { getColor } from \"../colors\";\r\nimport { scale } from \"../raster/config\";\r\nimport { Square } from \"../raster/Draw\";\r\nimport { Scale } from \"../Size\";\r\n\r\nconst WEIGHT = 3 / scale;\r\n\r\nfunction defined<T>(obj: T): obj is Exclude<T, undefined | null> {\r\n  return !isUndefined(obj) && !isNull(obj);\r\n}\r\n\r\ntype PathProps = {\r\n  nodes?: TraceEvent<\"cx\" | \"cy\">[];\r\n  step?: number;\r\n  scale?: Scale;\r\n};\r\n\r\nexport function Path({ nodes = [], step = 0, scale }: PathProps) {\r\n  const path = useMemo(() => {\r\n    const memo = keyBy(nodes, \"id\");\r\n    return (s: number) => {\r\n      const out = [];\r\n      let next: TraceEvent | undefined = nodes[s];\r\n      while (next) {\r\n        out.push(next);\r\n        next = defined(next.pId) ? memo[`${next.pId}`] : undefined;\r\n      }\r\n      return out;\r\n    };\r\n  }, [nodes]);\r\n\r\n  const draw = useMemo(() => {\r\n    const p = path(step);\r\n    return (g: PixiGraphics) => {\r\n      g.clear();\r\n      for (const [i, node] of p.entries()) {\r\n        const { cx, cy } = node?.variables ?? {};\r\n        const { x = 0, y = 0 } = scale?.to?.({ x: cx, y: cy }) ?? {};\r\n        g.lineTo(x, y);\r\n        if (!i) g.lineStyle(WEIGHT, getColor(\"source\"));\r\n      }\r\n    };\r\n  }, [path, step, scale]);\r\n\r\n  const { cx = 0, cy = 0 } = nodes[step]?.variables ?? {};\r\n\r\n  return (\r\n    <>\r\n      <Graphics draw={draw} />\r\n      {nodes?.[step] && (\r\n        <Square {...scale?.to?.({ x: cx, y: cy })} color={getColor(\"source\")} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useSpecimen } from \"slices/specimen\";\nimport { useUIState } from \"slices/UIState\";\nimport { PlanarRenderer } from \"../planar\";\nimport { useMap } from \"../../../hooks/useMap\";\nimport { tri } from \"../raster/Draw\";\nimport { LazyNodeList as LazyNodes } from \"../raster/NodeList\";\nimport { RendererProps } from \"../Renderer\";\nimport { normalize } from \"./normalize\";\nimport { progressOptions, shadowOptions, options } from \"./options\";\nimport { parse } from \"./parse\";\nimport { Path } from \"./Path\";\n\nexport function MeshRenderer(props: RendererProps) {\n  const [{ specimen }] = useSpecimen();\n  const [{ step }] = useUIState();\n\n  const info = useMap({ parse, normalize });\n\n  return (\n    <PlanarRenderer\n      {...info}\n      {...props}\n      ShadowProps={{ variant: tri, options: shadowOptions }}\n      ProgressProps={{ variant: tri, options: progressOptions }}\n      overlay={[\n        <LazyNodes\n          {...info}\n          nodes={specimen?.eventList}\n          step={step}\n          options={options}\n        />,\n        <Path {...info} nodes={specimen?.eventList} step={step} />,\n      ]}\n    />\n  );\n}\n","import { Graphics } from \"@inlet/react-pixi\";\r\nimport { Graphics as PixiGraphics } from \"@pixi/graphics\";\r\nimport { isNull, isUndefined, keyBy } from \"lodash\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\nimport { useMemo } from \"react\";\r\nimport { getColor } from \"../colors\";\r\nimport { scale } from \"../raster/config\";\r\nimport { Square } from \"../raster/Draw\";\r\nimport { Scale } from \"../Size\";\r\n\r\nconst WEIGHT = 1 / scale;\r\n\r\nfunction defined<T>(obj: T): obj is Exclude<T, undefined | null> {\r\n  return !isUndefined(obj) && !isNull(obj);\r\n}\r\n\r\ntype PathProps = {\r\n  nodes?: TraceEvent<\"x\" | \"y\">[];\r\n  step?: number;\r\n  scale: Scale;\r\n};\r\n\r\nexport function Path({ nodes = [], step = 0, scale: { to } }: PathProps) {\r\n  const path = useMemo(() => {\r\n    const memo = keyBy(nodes, \"id\");\r\n    return (s: number) => {\r\n      const out = [];\r\n      let next: TraceEvent | undefined = nodes[s];\r\n      while (next) {\r\n        out.push(next);\r\n        next = defined(next.pId) ? memo[`${next.pId}`] : undefined;\r\n      }\r\n      return out;\r\n    };\r\n  }, [nodes]);\r\n\r\n  const draw = useMemo(() => {\r\n    const p = path(step);\r\n    return (g: PixiGraphics) => {\r\n      g.clear();\r\n      for (const [i, node] of p.entries()) {\r\n        const { x, y } = to({ x: 0, y: 0, ...node?.variables });\r\n        g.lineTo(x, y);\r\n        if (!i) g.lineStyle(WEIGHT, getColor(\"source\"));\r\n      }\r\n    };\r\n  }, [path, step, to]);\r\n\r\n  const point = to({ x: 0, y: 0, ...nodes[step]?.variables });\r\n\r\n  return (\r\n    <>\r\n      <Graphics draw={draw} />\r\n      {nodes?.[step] && (\r\n        <Square {...point} radius={2 / scale} color={getColor(\"source\")} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { getColor } from \"../colors\";\r\nimport { MapInfo } from \"../Parser\";\r\nimport { scale } from \"../raster/config\";\r\nimport { Square } from \"../raster/Draw\";\r\nimport { Scale } from \"../Size\";\r\n\r\ntype OverlayProps = {\r\n  map?: MapInfo;\r\n  scale?: Scale;\r\n  start?: number;\r\n  end?: number;\r\n};\r\nexport function Overlay({ start, end, map, scale: s }: OverlayProps) {\r\n  return (\r\n    <>\r\n      {[\r\n        { color: getColor(\"destination\"), node: end },\r\n        { color: getColor(\"source\"), node: start },\r\n      ].map(\r\n        ({ color, node }, i) =>\r\n          node !== undefined && (\r\n            <Square\r\n              {...s?.to?.({ x: 0, y: 0, ...map?.pointOf?.(node) })}\r\n              radius={2 / scale}\r\n              key={i}\r\n              color={color}\r\n            />\r\n          )\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { map, maxBy, minBy } from \"lodash\";\nimport { TraceEvent } from \"protocol/Trace\";\nimport { MapInfo } from \"../Parser\";\nimport { Point } from \"../Size\";\nimport { Scale } from \"../Size\";\nimport { Structure } from \"./Structure\";\n\nconst { max, log10 } = Math;\n\nconst mag = (n: number) => 10 ** ~~log10(n);\n\nconst keys = [\"x\", \"y\"] as const;\n\nexport function normalize(m: MapInfo<Structure>, steps?: TraceEvent[]) {\n  const verts = map([...m.nodes.verts, ...(steps ?? [])], \"variables\");\n\n  const [[minX, minY], [maxX, maxY]] = [minBy, maxBy].map((f) =>\n    keys.map((k) => f(verts, k)?.[k] ?? 0)\n  );\n\n  const [width, height] = [maxX - minX, maxY - minY];\n\n  const scale = 20 / mag(max(width, height));\n\n  const to = ({ x, y }: Point) => ({\n    x: (x - minX) * scale,\n    y: (y - minY) * scale,\n  });\n\n  const from = ({ x, y }: Point) => ({\n    x: x / scale + minX,\n    y: y / scale + minY,\n  });\n\n  return {\n    to,\n    from,\n    scale,\n    width,\n    height,\n    minX,\n    maxX,\n    minY,\n    maxY,\n  } as Scale;\n}\n","import { blueGrey } from \"@material-ui/core/colors\";\nimport { getColor, hex } from \"../colors\";\nimport { scale } from \"../raster/config\";\nimport { NodeOptionsMapper as Options } from \"../raster/Draw\";\nimport { Structure } from \"./Structure\";\n\nexport const edgeColor = hex(blueGrey[\"100\"]);\nexport const vertColor = hex(blueGrey[\"500\"]);\n\nexport const edgeOptions: Options<Structure[\"edges\"]> = (\n  { variables: { x1 = 0, x2 = 0, y1 = 0, y2 = 0, ...v } = {} } = {},\n  s\n) => ({\n  ...v,\n  a: s?.to?.({ x: x1, y: y1 }),\n  b: s?.to?.({ x: x2, y: y2 }),\n  color: edgeColor,\n});\n\nexport const vertOptions: Options<Structure[\"verts\"]> = (\n  { variables: { x = 0, y = 0, ...v } = {} } = {},\n  s\n) => ({\n  ...v,\n  a: s?.to?.({ x, y }),\n  radius: 2 / scale,\n  color: vertColor,\n});\n\nexport const progressOptions: Options<\"x\" | \"y\"> = (\n  { type, variables: { x = 0, y = 0, ...v } = {} } = {},\n  s\n) => ({\n  ...v,\n  a: s?.to?.({ x, y }),\n  color: getColor(type),\n  radius: 2 / scale,\n});\n\nexport const shadowOptions: Options<\"x\" | \"y\"> = (\n  { variables: { x = 0, y = 0, ...v } = {} } = {},\n  s\n) => ({\n  ...v,\n  a: s?.to?.({ x, y }),\n  color: 0xf1f1f1,\n  radius: 4 / scale,\n});\n","import { Dictionary, maxBy, minBy, findIndex } from \"lodash\";\r\nimport { makeMapParser } from \"../Parser\";\r\nimport { byPoint } from \"../NodeMatcher\";\r\nimport { Point } from \"../Size\";\r\nimport { Structure } from \"./Structure\";\r\n\r\nconst { sqrt } = Math;\r\n\r\nconst dist = ({ x: x1, y: y1 }: Point, { x: x2, y: y2 }: Point) =>\r\n  sqrt((y2 - y1) ** 2 + (x2 - x1) ** 2);\r\n\r\nconst minAt = (c: Dictionary<number>[], index: string) =>\r\n  minBy(c, index)?.[index];\r\n\r\nconst maxAt = (c: Dictionary<number>[], index: string) =>\r\n  maxBy(c, index)?.[index];\r\n\r\nfunction aabb(verts: Point[]) {\r\n  const [[minX, minY], [maxX, maxY]] = [minAt, maxAt].map((f) =>\r\n    [\"x\", \"y\"].map((i) => f(verts, i) ?? 0)\r\n  );\r\n  const [width, height] = [maxX - minX, maxY - minY];\r\n  return { width, height, minX, minY, maxX, maxY };\r\n}\r\n\r\ntype Options = {\r\n  vert?: string;\r\n  edge?: string;\r\n};\r\n\r\nexport const parse = makeMapParser<Options, Structure>(\r\n  (m, { vert = \"v\", edge = \"e\" }: Options) => {\r\n    const lines = m.split(\"\\n\");\r\n\r\n    // Parse vertices\r\n    const verts = lines\r\n      .filter((c) => c.startsWith(vert))\r\n      .map((c: string) => {\r\n        const [, , x, y] = c.split(\" \");\r\n        return { x: +x, y: +y };\r\n      });\r\n\r\n    // Parse edges\r\n    const edges = lines\r\n      .filter((c) => c.startsWith(edge))\r\n      .map((c: string) => {\r\n        const [, a, b] = c.split(\" \");\r\n        return { a: +a, b: +b };\r\n      });\r\n\r\n    return {\r\n      bounds: aabb(verts),\r\n      nodes: {\r\n        verts: verts.map((point) => ({\r\n          variables: point,\r\n        })),\r\n        edges: edges.map(({ a, b }) => {\r\n          const { x: x1, y: y1 } = verts[a];\r\n          const { x: x2, y: y2 } = verts[b];\r\n          return { variables: { x1, y1, x2, y2 } };\r\n        }),\r\n      },\r\n      snap: (point, scale = 1) => {\r\n        const a = point;\r\n        const vert = minBy(verts, (b) => dist(a, b));\r\n        if (vert && dist(vert, a) < 1.5 / scale) return vert;\r\n      },\r\n      nodeAt: (p) => {\r\n        const i = findIndex(verts, p);\r\n        return i !== -1 ? i : undefined;\r\n      },\r\n      pointOf: (node) => verts[node],\r\n      matchNode: byPoint,\r\n    };\r\n  }\r\n);\r\n","import { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { PlanarRenderer } from \"../planar\";\r\nimport { Path } from \"./Path\";\r\nimport { Overlay } from \"./Overlay\";\r\nimport { useMap } from \"../../../hooks/useMap\";\r\nimport { line, square } from \"../raster/Draw\";\r\nimport { NodeList as Nodes } from \"../raster/NodeList\";\r\nimport { RendererProps } from \"../Renderer\";\r\nimport { normalize } from \"./normalize\";\r\nimport {\r\n  edgeOptions,\r\n  progressOptions,\r\n  shadowOptions,\r\n  vertOptions,\r\n} from \"./options\";\r\nimport { parse } from \"./parse\";\r\n\r\nexport function NetworkRenderer(props: RendererProps) {\r\n  const [{ specimen }] = useSpecimen();\r\n  const [{ start, end, step }] = useUIState();\r\n  const info = useMap({ parse, normalize });\r\n\r\n  const {\r\n    map: {\r\n      nodes: { edges, verts },\r\n    },\r\n  } = info;\r\n\r\n  return (\r\n    <PlanarRenderer\r\n      {...info}\r\n      {...props}\r\n      ShadowProps={{ options: shadowOptions }}\r\n      ProgressProps={{ options: progressOptions }}\r\n      overlay={[\r\n        <Overlay start={start} end={end} />,\r\n        <Path {...info} nodes={specimen?.eventList} step={step} />,\r\n      ]}\r\n    >\r\n      <Nodes nodes={edges} options={edgeOptions} variant={line} />\r\n      <Nodes nodes={verts} options={vertOptions} variant={square} />\r\n    </PlanarRenderer>\r\n  );\r\n}\r\n","import { get } from \"lodash\";\r\nimport { DefaultRenderer } from \"./default\";\r\nimport { GridRenderer } from \"./grid\";\r\nimport { MeshRenderer } from \"./mesh\";\r\nimport { NetworkRenderer } from \"./network\";\r\nimport { RendererMap } from \"./Renderer\";\r\n\r\nconst renderers: RendererMap = {\r\n  grid: GridRenderer,\r\n  xy: NetworkRenderer,\r\n  mesh: MeshRenderer,\r\n};\r\n\r\nexport function getRenderer(key = \"\") {\r\n  return get(renderers, key, DefaultRenderer);\r\n}\r\n","import { Card, CardProps, Typography } from \"@material-ui/core\";\n\nexport function PlaceholderCard({ sx, children, ...props }: CardProps) {\n  return (\n    <Card\n      sx={{\n        m: 2,\n        p: 2,\n        textAlign: \"center\",\n        ...sx,\n      }}\n      {...props}\n    >\n      <Typography color=\"textSecondary\">{children}</Typography>\n    </Card>\n  );\n}\n","import { Card, Stack } from \"@material-ui/core\";\nimport { ReactNode } from \"react\";\nimport { useAcrylic } from \"theme\";\n\nexport function Toolbar({ children }: { children?: ReactNode }) {\n  const acrylic = useAcrylic();\n  return (\n    <Card\n      sx={{\n        m: 3,\n        px: 1.25,\n        height: 56,\n        display: \"flex\",\n        alignItems: \"center\",\n        pointerEvents: \"all\",\n        ...acrylic,\n      }}\n    >\n      <Stack spacing={1.25} direction=\"row\">\n        {children}\n      </Stack>\n    </Card>\n  );\n}\n","import { Box, BoxProps } from \"@material-ui/core\";\r\nimport { ReactElement } from \"react\";\r\nimport {\r\n  Virtuoso as List,\r\n  VirtuosoHandle as Handle,\r\n  VirtuosoProps as ListProps,\r\n} from \"react-virtuoso\";\r\n\r\nexport type LazyListHandle = Handle;\r\n\r\nexport type LazyListProps<T> = {\r\n  items?: T[];\r\n  renderItem?: (item: T, index: number) => ReactElement;\r\n  listOptions?: Partial<ListProps<T>>;\r\n} & BoxProps;\r\n\r\nexport function LazyList<T>({\r\n  items = [],\r\n  renderItem,\r\n  listOptions: options,\r\n  ...props\r\n}: LazyListProps<T>) {\r\n  return (\r\n    <Box {...props}>\r\n      <List\r\n        totalCount={items.length}\r\n        itemContent={(i) => renderItem?.(items[i], i)}\r\n        {...options}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { HideSourceOutlined as HiddenIcon } from \"@material-ui/icons\";\nimport { Overline, OverlineDot as Dot } from \"components/generic/Overline\";\nimport { getColorHex } from \"components/renderer/colors\";\nimport { TraceEvent } from \"protocol/Trace\";\n\nexport function EventLabel({\n  event,\n  hidden,\n}: {\n  event?: TraceEvent;\n  hidden?: boolean;\n}) {\n  return (\n    <Overline>\n      <Dot\n        sx={{\n          color: getColorHex(event?.type),\n          mr: 1,\n        }}\n      />\n      {`${event?.type ?? \"unsupported\"} #${event?.id ?? \"-\"}`}{\" \"}\n      {hidden && (\n        <HiddenIcon\n          sx={{\n            opacity: 0.56,\n            fontSize: 12,\n            ml: 1,\n            transform: \"translateY(1.75px)\",\n          }}\n        />\n      )}\n    </Overline>\n  );\n}\n","import { Flex } from \"./Flex\";\r\nimport {\r\n  Typography as Type,\r\n  TypographyProps as TypeProps,\r\n} from \"@material-ui/core\";\r\nimport { Space } from \"./Space\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype Props = {\r\n  label?: ReactNode;\r\n  value?: ReactNode;\r\n  type?: TypeProps;\r\n};\r\n\r\nexport function Property({ label, value, type }: Props) {\r\n  return (\r\n    <Flex width=\"auto\" mr={3} mt={0.5} key={`${label}::${value}`}>\r\n      <Type sx={{ opacity: 0.54 }} {...type}>\r\n        {label}\r\n      </Type>\r\n      <Space />\r\n      <Type {...type}>{value}</Type>\r\n    </Flex>\r\n  );\r\n}\r\n","import { TypographyVariant } from \"@material-ui/core\";\nimport { Flex, FlexProps } from \"components/generic/Flex\";\nimport { Property } from \"components/generic/Property\";\nimport { entries, filter, map } from \"lodash\";\nimport { TraceEvent } from \"protocol/Trace\";\n\nexport function PropertyList({\n  event,\n  variant = \"body2\",\n  ...props\n}: {\n  event?: TraceEvent<string>;\n  variant?: TypographyVariant;\n} & FlexProps) {\n  return (\n    <Flex flexWrap=\"wrap\" {...props}>\n      {map(\n        filter(\n          [\n            [\"f\", event?.f],\n            [\"g\", event?.g],\n            ...entries(event?.variables),\n            [\"pId\", event?.pId],\n            [\"info\", event?.info],\n          ],\n          ([, v]) => v !== undefined\n        ),\n        ([k, v]) => (\n          <Property label={k} value={v} type={{ variant }} />\n        )\n      )}\n    </Flex>\n  );\n}\n","import {\r\n  Box,\r\n  Card,\r\n  CardActionArea,\r\n  CardProps,\r\n  Divider,\r\n  Typography as Type,\r\n} from \"@material-ui/core\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { call } from \"components/script-editor/call\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { useAcrylic } from \"theme\";\r\nimport { EventLabel } from \"./EventLabel\";\r\nimport { PropertyList } from \"./PropertyList\";\r\n\r\ntype EventInspectorProps = {\r\n  event?: TraceEvent;\r\n  index?: number;\r\n  selected?: boolean;\r\n} & CardProps;\r\n\r\nexport function EventInspector({\r\n  event,\r\n  index,\r\n  selected,\r\n  ...props\r\n}: EventInspectorProps) {\r\n  const acrylic = useAcrylic();\r\n  const [{ specimen }] = useSpecimen();\r\n  const [{ code }, setUIState] = useUIState();\r\n\r\n  const cardStyles = selected\r\n    ? {\r\n        color: \"primary.contrastText\",\r\n        bgcolor: \"primary.main\",\r\n      }\r\n    : acrylic;\r\n\r\n  const hidden = event\r\n    ? !call(code ?? \"\", \"shouldRender\", [\r\n        index ?? 0,\r\n        event,\r\n        specimen?.eventList ?? [],\r\n      ])\r\n    : false;\r\n\r\n  return (\r\n    <Card\r\n      {...props}\r\n      sx={{\r\n        ...cardStyles,\r\n        ...props.sx,\r\n      }}\r\n    >\r\n      <CardActionArea\r\n        sx={{ p: 2, height: \"100%\" }}\r\n        onClick={() => setUIState({ step: index })}\r\n      >\r\n        <Flex alignItems=\"center\">\r\n          <Type>{index}</Type>\r\n          <Divider sx={{ mx: 2 }} flexItem orientation=\"vertical\" />\r\n          <Box>\r\n            <EventLabel event={event} hidden={hidden} />\r\n            <PropertyList event={event} />\r\n          </Box>\r\n        </Flex>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport { SortOutlined as ListIcon } from \"@material-ui/icons\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport {\r\n  LazyList as List,\r\n  LazyListHandle as ListHandle,\r\n  LazyListProps as ListProps,\r\n} from \"components/generic/LazyList\";\r\nimport { PlaceholderCard } from \"components/generic/PlaceholderCard\";\r\nimport { delay } from \"lodash\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useLoading } from \"slices/loading\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { EventInspector } from \"./EventInspector\";\r\n\r\nfunction Placeholder() {\r\n  return (\r\n    <PlaceholderCard\r\n      sx={{\r\n        width: \"100%\",\r\n        height: \"fit-content\",\r\n      }}\r\n    >\r\n      <p>\r\n        <ListIcon />\r\n      </p>\r\n      <p>\r\n        Select a source & destination node on the map to see the steps here.\r\n      </p>\r\n    </PlaceholderCard>\r\n  );\r\n}\r\n\r\nexport function EventListInspector(props: ListProps<TraceEvent>) {\r\n  const [loading] = useLoading();\r\n  const [{ step = 0, playback }] = useUIState();\r\n  const [{ specimen }] = useSpecimen();\r\n  const ref = useRef<ListHandle | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (playback === \"paused\") {\r\n      delay(\r\n        () =>\r\n          ref?.current?.scrollToIndex?.({\r\n            index: step,\r\n            align: \"start\",\r\n            behavior: \"smooth\",\r\n            offset: -16,\r\n          }),\r\n        150\r\n      );\r\n    }\r\n  }, [step, playback]);\r\n\r\n  return (\r\n    <Flex vertical alignItems=\"center\">\r\n      {loading.map || loading.specimen ? (\r\n        <CircularProgress />\r\n      ) : specimen?.eventList?.length ? (\r\n        <List\r\n          {...props}\r\n          items={specimen?.eventList}\r\n          listOptions={{ ref }}\r\n          renderItem={(item, i) => (\r\n            <Flex p={2} pt={i ? 0 : 2}>\r\n              <EventInspector\r\n                sx={{ flex: 1 }}\r\n                event={item}\r\n                index={i}\r\n                selected={i === step}\r\n              />\r\n            </Flex>\r\n          )}\r\n        />\r\n      ) : (\r\n        <Flex>\r\n          <Placeholder />\r\n        </Flex>\r\n      )}\r\n    </Flex>\r\n  );\r\n}\r\n","import { BoxProps, Button, Fade, Tooltip } from \"@material-ui/core\";\nimport { SortTwoTone as StepsIcon } from \"@material-ui/icons\";\nimport { TabContext, TabPanel } from \"@material-ui/lab\";\nimport { alpha, Box } from \"@material-ui/system\";\nimport { Flex } from \"components/generic/Flex\";\nimport { PlaceholderCard } from \"components/generic/PlaceholderCard\";\nimport { Toolbar } from \"components/generic/Toolbar\";\nimport { startCase } from \"lodash\";\nimport { useState } from \"react\";\nimport { useUIState } from \"slices/UIState\";\nimport { EventListInspector } from \"./EventListInspector\";\n\nexport function InfoPanel(props: BoxProps) {\n  const [{ playback }] = useUIState();\n  const [tab, setTab] = useState(\"steps\");\n  return (\n    <TabContext value={tab}>\n      <Flex\n        vertical\n        sx={{\n          pointerEvents: \"none\",\n          transition: ({ transitions }) => transitions.create(\"background\"),\n          bgcolor: ({ palette }) =>\n            tab ? alpha(palette.background.default, 0.94) : \"transparent\",\n        }}\n        alignItems=\"center\"\n        {...props}\n      >\n        <Toolbar>\n          {[\n            { icon: <StepsIcon />, key: \"steps\" },\n            { key: \"info\" },\n            { key: \"parameters\" },\n          ].map(({ key, icon }) => (\n            <Tooltip title={startCase(key)}>\n              <Button\n                onClick={() => setTab(key === tab ? \"\" : key)}\n                color=\"primary\"\n                variant={key === tab ? \"contained\" : \"text\"}\n                startIcon={icon}\n              >\n                {startCase(key)}\n              </Button>\n            </Tooltip>\n          ))}\n        </Toolbar>\n        {[\n          {\n            key: \"steps\",\n            content: (\n              <Fade unmountOnExit mountOnEnter in={playback === \"paused\"}>\n                <Box height=\"100%\" width=\"100%\" pl={1}>\n                  <EventListInspector height=\"100%\" width=\"100%\" />\n                </Box>\n              </Fade>\n            ),\n          },\n          {\n            key: \"info\",\n            content: <PlaceholderCard>No info to show.</PlaceholderCard>,\n          },\n          {\n            key: \"parameters\",\n            content: <PlaceholderCard>No parameters to show.</PlaceholderCard>,\n          },\n        ].map(({ content, key }) => (\n          <TabPanel\n            value={key}\n            sx={{ pointerEvents: \"all\", flex: 1, p: 0, width: \"100%\" }}\n          >\n            {content}\n          </TabPanel>\n        ))}\n      </Flex>\n    </TabContext>\n  );\n}\n","import { Box } from \"@material-ui/core\";\nimport { ReactNode } from \"react\";\nimport { Flex } from \"./Flex\";\nimport { Space } from \"./Space\";\n\ntype LabelProps = {\n  primary?: ReactNode;\n  secondary?: ReactNode;\n};\n\nexport function Label({ primary, secondary }: LabelProps) {\n  return (\n    <Flex>\n      <Box>{primary}</Box>\n      <Space />\n      <Box sx={{ opacity: 0.56 }}>{secondary}</Box>\n    </Flex>\n  );\n}\n","import {\r\n  Box,\r\n  Divider,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  PlaceOutlined as DestinationIcon,\r\n  TripOriginOutlined as StartIcon,\r\n} from \"@material-ui/icons\";\r\nimport { Label } from \"components/generic/Label\";\r\nimport { Overline } from \"components/generic/Overline\";\r\nimport { Property } from \"components/generic/Property\";\r\nimport { useSnackbar } from \"components/generic/Snackbar\";\r\nimport { SelectEvent as RendererSelectEvent } from \"components/renderer/Renderer\";\r\nimport { map } from \"lodash\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { EventLabel } from \"./EventLabel\";\r\nimport { PropertyList } from \"./PropertyList\";\r\n\r\ntype Props = {\r\n  selection?: RendererSelectEvent;\r\n  onClose?: () => void;\r\n};\r\n\r\nexport function SelectionMenu({ selection, onClose }: Props) {\r\n  const notify = useSnackbar();\r\n  const [, setUIState] = useUIState();\r\n  const { global, info } = selection ?? {};\r\n  const { current, entry, node } = info ?? {};\r\n\r\n  return (\r\n    <Menu\r\n      open={!!selection}\r\n      anchorReference=\"anchorPosition\"\r\n      anchorPosition={{\r\n        top: global?.y ?? 0,\r\n        left: global?.x ?? 0,\r\n      }}\r\n      onClose={onClose}\r\n    >\r\n      <ListItem>\r\n        <ListItemText>\r\n          <Box>\r\n            <Overline>Point</Overline>\r\n            <Property label=\"x\" value={info?.point?.x ?? \"-\"} />\r\n            <Property label=\"y\" value={info?.point?.y ?? \"-\"} />\r\n          </Box>\r\n          {current?.event && (\r\n            <Box mt={2}>\r\n              <EventLabel event={current?.event} />\r\n              <PropertyList event={current?.event} variant=\"body1\" vertical />\r\n            </Box>\r\n          )}\r\n        </ListItemText>\r\n      </ListItem>\r\n      <Divider sx={{ my: 1 }} />\r\n      {map(\r\n        [\r\n          {\r\n            label: \"Set Origin\",\r\n            icon: <StartIcon sx={{ transform: \"scale(0.5)\" }} />,\r\n            action: () => {\r\n              notify(\"Origin set.\");\r\n              setUIState({ start: node?.key });\r\n            },\r\n            disabled: !node,\r\n          },\r\n          {\r\n            label: \"Set Destination\",\r\n            icon: <DestinationIcon />,\r\n            action: () => {\r\n              notify(\"Destination set.\");\r\n              setUIState({ end: node?.key });\r\n            },\r\n            disabled: !node,\r\n          },\r\n          {\r\n            label: (\r\n              <Label primary=\"Go to Expansion Step\" secondary={entry?.index} />\r\n            ),\r\n            action: () =>\r\n              setUIState({ step: entry?.index ?? 0, playback: \"paused\" }),\r\n            disabled: !entry,\r\n          },\r\n          {\r\n            label: (\r\n              <Label primary=\"Rewind to This Step\" secondary={current?.index} />\r\n            ),\r\n            action: () =>\r\n              setUIState({ step: current?.index ?? 0, playback: \"paused\" }),\r\n            disabled: !current,\r\n          },\r\n        ],\r\n        ({ label, icon, action, disabled }) => (\r\n          <MenuItem\r\n            disabled={disabled}\r\n            onClick={() => {\r\n              action();\r\n              onClose?.();\r\n            }}\r\n          >\r\n            <ListItemIcon>{icon}</ListItemIcon>\r\n            <ListItemText>{label}</ListItemText>\r\n          </MenuItem>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n}\r\n","import { Box, Fade, LinearProgress } from \"@material-ui/core\";\r\nimport { BlurOnTwoTone as DisabledIcon } from \"@material-ui/icons\";\r\nimport { Flex, FlexProps } from \"components/generic/Flex\";\r\nimport { getRenderer } from \"components/renderer\";\r\nimport { SelectEvent as RendererSelectEvent } from \"components/renderer/Renderer\";\r\nimport { some, values } from \"lodash\";\r\nimport { createElement, useState } from \"react\";\r\nimport AutoSize from \"react-virtualized-auto-sizer\";\r\nimport { useLoading } from \"slices/loading\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { InfoPanel } from \"./InfoPanel\";\r\nimport { SelectionMenu } from \"./SelectionMenu\";\r\n\r\ntype SpecimenInspectorProps = {} & FlexProps;\r\n\r\nexport function Inspector(props: SpecimenInspectorProps) {\r\n  const [loading] = useLoading();\r\n  const [{ specimen, format, map }] = useSpecimen();\r\n  const renderer = getRenderer(format);\r\n  const [selection, setSelection] = useState<RendererSelectEvent | undefined>(\r\n    undefined\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Fade in={some(values(loading))}>\r\n        <LinearProgress variant=\"indeterminate\" sx={{ mb: -0.5, zIndex: 1 }} />\r\n      </Fade>\r\n      <Flex {...props}>\r\n        {specimen ? (\r\n          <Flex>\r\n            <AutoSize>\r\n              {(size) => (\r\n                <Fade appear in>\r\n                  <Box>\r\n                    {createElement(renderer, {\r\n                      ...size,\r\n                      key: map,\r\n                      onSelect: setSelection,\r\n                      selection: selection?.world,\r\n                    })}\r\n                  </Box>\r\n                </Fade>\r\n              )}\r\n            </AutoSize>\r\n            <InfoPanel\r\n              position=\"absolute\"\r\n              right={0}\r\n              height=\"100%\"\r\n              width=\"25vw\"\r\n              minWidth={480}\r\n            />\r\n          </Flex>\r\n        ) : (\r\n          <Flex\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            color=\"text.secondary\"\r\n            vertical\r\n          >\r\n            <DisabledIcon sx={{ mb: 2 }} fontSize=\"large\" />\r\n            Select a map to get started.\r\n          </Flex>\r\n        )}\r\n      </Flex>\r\n      <SelectionMenu\r\n        selection={selection}\r\n        onClose={() => setSelection(undefined)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { Controls } from \"components/app-bar/Controls\";\nimport { Flex } from \"components/generic/Flex\";\nimport { Inspector } from \"components/inspector\";\n \nfunction Debugger() {\n  return (\n    <Flex vertical sx={{ bgcolor: \"background.default\" }}>\n      <Controls />\n      <Inspector flex={1} />\n    </Flex>\n  );\n}\n \nexport default Debugger;\n","import { Flex } from \"components/generic/Flex\";\n\nimport HomeBar from \"components/home-app-bar/HomeBar\"\n\nfunction DocsPage() {\n\n  return (\n    <Flex vertical sx={{ bgcolor: \"background.default\" }}> \n    <HomeBar></HomeBar>\n        Documents Page\n    </Flex>\n  );\n}\n \nexport default DocsPage;\n\n\n","import { Flex } from \"components/generic/Flex\";\n\n\nimport HomeBar from \"components/home-app-bar/HomeBar\"\n\nfunction AboutUsPage() {\n\n  return (\n    <Flex vertical sx={{ bgcolor: \"background.default\" }}> \n    <HomeBar></HomeBar>\n        About Us\n    </Flex>\n  );\n}\n \nexport default AboutUsPage;\n\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport HomeScreen from \"pages/LaunchPage\"\r\nimport Debugger from \"pages/Debugger\"\r\nimport DocsPage from \"pages/DocsPage\";\r\nimport AboutUsPage from \"pages/AboutUsPage\";\r\n \r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\">\r\n          <Route index element={<HomeScreen />} />\r\n          <Route path=\"debugger\" element={<Debugger />} />\r\n          <Route path=\"docs\" element={<DocsPage />} />\r\n          <Route path=\"about us\" element={<AboutUsPage />} />\r\n        </Route>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n \r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { getTransport } from \"client\";\r\nimport { useSnackbar } from \"components/generic/Snackbar\";\r\nimport { delay, now } from \"lodash\";\r\nimport { useEffect } from \"react\";\r\nimport { Connection, useConnections } from \"slices/connections\";\r\nimport { useLoadingState } from \"slices/loading\";\r\nimport { useSettings } from \"slices/settings\";\r\n\r\nfunction wait(ms: number) {\r\n  return new Promise((res) => delay(res, ms));\r\n}\r\n\r\nasync function timed<T>(task: () => Promise<T>, ms: number = 2500) {\r\n  const from = now();\r\n  const result = (await Promise.any([task(), wait(ms)])) as T | undefined;\r\n  return { result, delta: now() - from };\r\n}\r\n\r\nexport function ConnectionsService() {\r\n  const notify = useSnackbar();\r\n  const [{ remote }] = useSettings();\r\n  const [, setConnections] = useConnections();\r\n  const usingLoadingState = useLoadingState(\"connections\");\r\n\r\n  useEffect(() => {\r\n    let aborted = false;\r\n    let cs: Connection[] = [];\r\n    usingLoadingState(async () => {\r\n      notify(\"Connecting...\");\r\n      for (const { transport: t, url, disabled } of remote ?? []) {\r\n        if (!disabled) {\r\n          const tp = new (getTransport(t))({ url });\r\n          await tp.connect();\r\n          const { result, delta } = await timed(() => tp.call(\"about\"));\r\n          if (result) {\r\n            cs = [\r\n              ...cs,\r\n              {\r\n                ...result,\r\n                url,\r\n                ping: delta,\r\n                call: tp.call.bind(tp),\r\n                disconnect: tp.disconnect.bind(tp),\r\n              },\r\n            ];\r\n          } else await tp.disconnect();\r\n        }\r\n        if (!aborted) setConnections(cs);\r\n      }\r\n      if (!aborted)\r\n        notify(`Connected to ${cs.length} of ${remote?.length} solvers.`);\r\n    });\r\n    return () => {\r\n      aborted = true;\r\n      cs.map((c) => c.disconnect());\r\n    };\r\n  }, [remote, setConnections, notify, usingLoadingState]);\r\n\r\n  return <></>;\r\n}\r\n","import { call } from \"components/script-editor/call\";\r\nimport { get, keyBy, lowerCase as lower, memoize, startCase } from \"lodash\";\r\nimport { useMemo } from \"react\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\n\r\nexport function useBreakpoints() {\r\n  const [{ specimen }] = useSpecimen();\r\n  const [{ code, breakpoints = [], monotonicF, monotonicG }] = useUIState();\r\n\r\n  return useMemo(() => {\r\n    const memo = keyBy(specimen?.eventList, \"id\");\r\n    return memoize((step: number) => {\r\n      const event = specimen?.eventList?.[step];\r\n      if (event) {\r\n        try {\r\n          // Check monotonic f or g values\r\n          if (step) {\r\n            for (const p of [monotonicF && \"f\", monotonicG && \"g\"]) {\r\n              if (p && get(memo[`${event.pId}`], p) > get(event, p)) {\r\n                return { result: `Monotonicity violation on ${p}` };\r\n              }\r\n            }\r\n          }\r\n          // Check breakpoints in the breakpoints section\r\n          for (const {\r\n            active,\r\n            condition,\r\n            type,\r\n            property = \"\",\r\n            reference = 0,\r\n          } of breakpoints) {\r\n            const isType = !type || type === event.type;\r\n            const match = condition?.apply?.(get(event, property), reference);\r\n            if (active && isType && match) {\r\n              return {\r\n                result: `${property} ${lower(\r\n                  startCase(condition?.key)\r\n                )} ${reference}`,\r\n              };\r\n            }\r\n          }\r\n          // Check breakpoints in the script editor section\r\n          if (\r\n            call(code ?? \"\", \"shouldBreak\", [\r\n              step,\r\n              event,\r\n              specimen?.eventList ?? [],\r\n            ])\r\n          ) {\r\n            return { result: \"Script editor\" };\r\n          }\r\n        } catch (e) {\r\n          return { error: `${e}` };\r\n        }\r\n      }\r\n      return { result: \"\" };\r\n    });\r\n  }, [code, specimen, breakpoints, monotonicF, monotonicG]);\r\n}\r\n","import { useSnackbar } from \"components/generic/Snackbar\";\r\nimport { Label } from \"components/generic/Label\";\r\nimport { usePlaybackState } from \"hooks/usePlaybackState\";\r\nimport { range, trimEnd } from \"lodash\";\r\nimport { ReactNode, useCallback, useEffect } from \"react\";\r\nimport { useRaf } from \"react-use\";\r\nimport { useBreakpoints } from \"../hooks/useBreakpoints\";\r\nimport { useSettings } from \"slices/settings\";\r\n\r\nfunction cancellable<T = void>(f: () => Promise<T>, g: (result: T) => void) {\r\n  let cancelled = false;\r\n  requestAnimationFrame(async () => {\r\n    const result = await f();\r\n    if (!cancelled) g(result);\r\n  });\r\n  return () => {\r\n    cancelled = true;\r\n  };\r\n}\r\n\r\nexport function PlaybackService() {\r\n  useRaf();\r\n\r\n  const notify = useSnackbar();\r\n  const [{ playbackRate = 1 }] = useSettings();\r\n  const { playing, end, step, pause, tick } = usePlaybackState();\r\n  const shouldBreak = useBreakpoints();\r\n\r\n  const renderLabel = useCallback(\r\n    (label: ReactNode, offset: number) => (\r\n      <Label primary={label} secondary={`Step ${step + offset}`} />\r\n    ),\r\n    [step]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (playing) {\r\n      return step < end\r\n        ? cancellable(\r\n            async () => {\r\n              for (const i of range(playbackRate)) {\r\n                const r = shouldBreak(step + i);\r\n                if (r.result || r.error) return { ...r, offset: i };\r\n              }\r\n              return { result: \"\", offset: 0 };\r\n            },\r\n            ({ result, offset, error }) => {\r\n              if (!error) {\r\n                if (result) {\r\n                  notify(renderLabel(`Breakpoint hit: ${result}.`, offset));\r\n                  pause(offset);\r\n                } else tick(playbackRate);\r\n              } else {\r\n                notify(renderLabel(`${trimEnd(error, \".\")}.`, offset));\r\n                pause();\r\n              }\r\n            }\r\n          )\r\n        : pause();\r\n    }\r\n  }, [\r\n    renderLabel,\r\n    playing,\r\n    end,\r\n    step,\r\n    pause,\r\n    tick,\r\n    notify,\r\n    shouldBreak,\r\n    playbackRate,\r\n  ]);\r\n\r\n  return <></>;\r\n}\r\n","import { map, uniqBy } from \"lodash\";\nimport { useAsyncAbortable as useAsync } from \"react-async-hook\";\nimport { useConnections } from \"slices/connections\";\nimport { Features, useFeatures } from \"slices/features\";\nimport { useLoadingState } from \"slices/loading\";\n\nconst withSource = (source: string) => (v: any) => ({ ...v, source });\n\nexport function FeaturesService() {\n  const [connections] = useConnections();\n  const [, setFeatures] = useFeatures();\n  const usingLoadingState = useLoadingState(\"features\");\n\n  useAsync(\n    (signal) =>\n      usingLoadingState(async () => {\n        const features: Features = { algorithms: [], formats: [], maps: [] };\n        for (const { call, url } of connections) {\n          for (const prop of [\"algorithms\", \"formats\", \"maps\"] as const) {\n            features[prop] = uniqBy(\n              [\n                ...features[prop],\n                ...map(await call(`features/${prop}`), withSource(url)),\n              ],\n              \"id\"\n            );\n          }\n        }\n        if (!signal.aborted) setFeatures(features);\n      }),\n    [connections, setFeatures]\n  );\n\n  return <></>;\n}\n","import { useSnackbar } from \"components/generic/Snackbar\";\nimport { memoize as memo } from \"lodash\";\nimport { useMemo } from \"react\";\nimport { useAsync } from \"react-async-hook\";\nimport { useLoadingState } from \"slices/loading\";\nimport { Map, useUIState } from \"slices/UIState\";\nimport { useConnectionResolver } from \"./useConnectionResolver\";\n\nexport function useMapContent() {\n  const notify = useSnackbar();\n  const usingLoadingState = useLoadingState(\"map\");\n  const resolve = useConnectionResolver();\n  const [{ map }] = useUIState();\n\n  const getMap = useMemo(\n    () =>\n      memo(async ({ source, id }: Map = {}) => {\n        if (source && id) {\n          const connection = resolve({ url: source });\n          if (connection) {\n            notify(\"Fetching map...\");\n            const result = await connection.call(\"features/map\", { id });\n            return result?.content;\n          }\n        }\n      }, JSON.stringify),\n    [resolve, notify]\n  );\n\n  return useAsync(\n    () =>\n      usingLoadingState(async () => {\n        if (map && map.id)\n          return {\n            ...map,\n            content: map.content ? map.content : await getMap(map),\n          };\n      }),\n    [getMap, map, usingLoadingState]\n  );\n}\n","type WorkerConstructor = new () => Worker;\n\nexport const usingWorker =\n  <R>(w: WorkerConstructor) =>\n  async (task: (w: Worker) => Promise<R>) => {\n    const worker = new w();\n    const out = await task(worker);\n    worker.terminate();\n    return out;\n  };\n\nexport const usingWorkerTask =\n  <T, R>(w: WorkerConstructor) =>\n  (inp: T) =>\n    usingWorker<R>(w)((worker) => {\n      worker.postMessage(inp);\n      return new Promise<R>((res) => {\n        worker.onmessage = (out) => {\n          res(out.data as R);\n        };\n      });\n    });\n","import { memoize as memo } from \"lodash\";\nimport { HashWorker } from \".\";\nimport { usingWorkerTask } from \"./usingWorker\";\n\nexport const hashAsync = memo(usingWorkerTask<string, string>(HashWorker));\n","import { Transport } from \"client/Transport\";\r\nimport { Label } from \"components/generic/Label\";\r\nimport { useSnackbar } from \"components/generic/Snackbar\";\r\nimport { useConnectionResolver } from \"hooks/useConnectionResolver\";\r\nimport { useMapContent } from \"hooks/useMapContent\";\r\nimport { find, isEmpty } from \"lodash\";\r\nimport { ParamsOf } from \"protocol/Message\";\r\nimport { PathfindingTask } from \"protocol/SolveTask\";\r\nimport { useAsyncAbortable as useAsync } from \"react-async-hook\";\r\nimport { useFeatures } from \"slices/features\";\r\nimport { useLoadingState } from \"slices/loading\";\r\nimport { Specimen, useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { hashAsync as hash } from \"workers/async\";\r\n\r\nasync function solve(\r\n  map: string,\r\n  { format, ...params }: Omit<ParamsOf<PathfindingTask>, \"mapURI\">,\r\n  call: Transport[\"call\"]\r\n): Promise<Specimen | undefined> {\r\n  if (map) {\r\n    for (const mapURI of [\r\n      `hash:${await hash(map)}`,\r\n      `map:${encodeURIComponent(map)}`,\r\n    ] as const) {\r\n      const p = { ...params, format, mapURI };\r\n      try {\r\n        const specimen = await call(\"solve/pathfinding\", p);\r\n        if (specimen)\r\n          return {\r\n            ...p,\r\n            specimen,\r\n            map,\r\n            format: specimen?.format ?? format,\r\n          };\r\n      } catch (e: any) {\r\n        return { ...p, specimen: {}, map, format, error: e.message };\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function SpecimenService() {\r\n  const usingLoadingState = useLoadingState(\"specimen\");\r\n  const notify = useSnackbar();\r\n  const [{ formats: format }] = useFeatures();\r\n  const [{ algorithm, start, end }, setUIState] = useUIState();\r\n  const resolve = useConnectionResolver();\r\n  const [, setSpecimen] = useSpecimen();\r\n\r\n  const { result: map } = useMapContent();\r\n\r\n  useAsync(\r\n    (signal) =>\r\n      usingLoadingState(async () => {\r\n        if (map?.format && map?.content) {\r\n          const entry = find(format, { id: map.format });\r\n          if (entry) {\r\n            const connection = resolve({ url: entry.source });\r\n            if (connection) {\r\n              const solution = await solve(\r\n                map.content,\r\n                {\r\n                  algorithm,\r\n                  format: map.format,\r\n                  instances: [{ end, start }],\r\n                },\r\n                connection.call\r\n              );\r\n              if (solution && !signal.aborted) {\r\n                setSpecimen(solution);\r\n                setUIState({ step: 0, playback: \"paused\", breakpoints: [] });\r\n                notify(\r\n                  solution.error ??\r\n                    (!isEmpty(solution.specimen) ? (\r\n                      <Label\r\n                        primary=\"Solution generated.\"\r\n                        secondary={`${solution.specimen?.eventList?.length} steps`}\r\n                      />\r\n                    ) : (\r\n                      \"Ready.\"\r\n                    ))\r\n                );\r\n              }\r\n            } else\r\n              notify(\r\n                `No solver is available for the map format (${map.format}).`\r\n              );\r\n          }\r\n        }\r\n      }),\r\n    [\r\n      algorithm,\r\n      start,\r\n      end,\r\n      map,\r\n      notify,\r\n      usingLoadingState,\r\n      format,\r\n      resolve,\r\n      setSpecimen,\r\n    ]\r\n  );\r\n\r\n  return <></>;\r\n}\r\n","import { map, reduce } from \"lodash\";\r\nimport {\r\n  cloneElement,\r\n  createElement,\r\n  FunctionComponent,\r\n  ReactNode,\r\n} from \"react\";\r\n\r\ntype SliceProviderProps = {\r\n  slices?: FunctionComponent[];\r\n  services?: FunctionComponent[];\r\n  children?: ReactNode;\r\n};\r\n\r\nexport function SliceProvider({\r\n  slices,\r\n  children,\r\n  services,\r\n}: SliceProviderProps) {\r\n  return (\r\n    <>\r\n      {reduce(\r\n        map(slices, (s) => createElement(s)),\r\n        (prev, next) => cloneElement(next, {}, prev),\r\n        <>\r\n          {children}\r\n          {map(services, (s, i) => createElement(s, { key: i }))}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { CssBaseline, ThemeProvider } from \"@material-ui/core\";\r\nimport App from \"App\";\r\nimport { SnackbarProvider } from \"components/generic/Snackbar\";\r\nimport \"index.css\";\r\nimport { StrictMode } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport reportWebVitals from \"reportWebVitals\";\r\nimport { ConnectionsService } from \"services/ConnectionsService\";\r\nimport { PlaybackService } from \"services/PlaybackService\";\r\nimport { FeaturesService } from \"services/FeaturesService\";\r\nimport { SpecimenService } from \"services/SpecimenService\";\r\nimport { ConnectionsProvider } from \"slices/connections\";\r\nimport { FeaturesProvider } from \"slices/features\";\r\nimport { LoadingProvider } from \"slices/loading\";\r\nimport { SettingsProvider } from \"slices/settings\";\r\nimport { SliceProvider as EnvironmentProvider } from \"slices/SliceProvider\";\r\nimport { SpecimenProvider } from \"slices/specimen\";\r\nimport { UIStateProvider } from \"slices/UIState\";\r\nimport { theme } from \"theme\";\r\n\r\nconst slices = [\r\n  SettingsProvider,\r\n  ConnectionsProvider,\r\n  FeaturesProvider,\r\n  UIStateProvider,\r\n  SpecimenProvider,\r\n  LoadingProvider,\r\n];\r\n\r\nconst services = [\r\n  ConnectionsService,\r\n  PlaybackService,\r\n  SpecimenService,\r\n  FeaturesService,\r\n];\r\n\r\nrender(\r\n  <StrictMode>\r\n    <CssBaseline>\r\n      <ThemeProvider theme={theme}>\r\n        <SnackbarProvider>\r\n          <EnvironmentProvider slices={slices} services={services}>\r\n            <App />\r\n          </EnvironmentProvider>\r\n        </SnackbarProvider>\r\n      </ThemeProvider>\r\n    </CssBaseline>\r\n  </StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
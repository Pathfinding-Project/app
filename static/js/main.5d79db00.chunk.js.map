{"version":3,"sources":["components/generic/Snackbar.tsx","components/generic/Space.tsx","slices/reducers.tsx","slices/createSlice.tsx","slices/connections.ts","slices/features.ts","components/script-editor/makeTemplate.tsx","components/script-editor/templates.tsx","slices/UIState.ts","hooks/useSmallDisplay.tsx","components/generic/Select.tsx","components/app-bar/FeaturePicker.tsx","components/app-bar/upload.tsx","components/app-bar/Input.tsx","components/generic/IconButtonWithTooltip.tsx","slices/specimen.ts","hooks/usePlaybackState.tsx","components/app-bar/Playback.tsx","hooks/useScrollState.tsx","components/generic/ScrollPanel.tsx","components/generic/Modal.tsx","components/generic/Flex.tsx","slices/settings.ts","workers/hash.worker.ts","client/IPCTransport.ts","client/NativeTransport.ts","client/SocketIOTransport.ts","client/index.ts","components/generic/ListEditor.tsx","components/generic/Overline.tsx","hooks/useConnectionResolver.tsx","slices/loading.ts","hooks/useConnectionStatus.tsx","components/settings-editor/ServerEditor.tsx","components/settings-editor/ServerListEditor.tsx","components/settings-editor/SettingsEditor.tsx","components/app-bar/Settings.tsx","components/generic/Switch.tsx","components/breakpoint-editor/comparators.tsx","components/breakpoint-editor/intrinsicProperties.tsx","components/breakpoint-editor/eventTypes.tsx","components/breakpoint-editor/BreakpointEditor.tsx","components/breakpoint-editor/propertyPaths.tsx","components/breakpoint-editor/BreakpointListEditor.tsx","components/script-editor/ScriptEditor.tsx","components/DebugOptionsEditor.tsx","components/app-bar/Utility.tsx","components/app-bar/Controls.tsx","components/specimen-renderer/default-renderer/DefaultRenderer.tsx","components/specimen-renderer/default-renderer/getDefaults.tsx","components/specimen-renderer/grid-renderer/parseMap.tsx","components/specimen-renderer/grid-renderer/getDefaults.tsx","components/script-editor/call.tsx","components/specimen-renderer/colors.tsx","components/specimen-renderer/raster-renderer/config.tsx","components/specimen-renderer/raster-renderer/makeGraphic.tsx","components/specimen-renderer/raster-renderer/Guides.tsx","components/specimen-renderer/raster-renderer/Node.tsx","components/specimen-renderer/raster-renderer/NodeList.tsx","components/specimen-renderer/raster-renderer/Overlay.tsx","components/specimen-renderer/raster-renderer/Path.tsx","components/specimen-renderer/raster-renderer/PixiViewport.tsx","components/specimen-renderer/raster-renderer/Viewport.tsx","components/specimen-renderer/raster-renderer/RasterRenderer.tsx","components/specimen-renderer/grid-renderer/Selection.tsx","components/specimen-renderer/grid-renderer/selectionInfo.tsx","components/specimen-renderer/grid-renderer/GridRenderer.tsx","components/specimen-renderer/network-renderer/parseMap.tsx","components/specimen-renderer/network-renderer/getDefaults.tsx","components/specimen-renderer/network-renderer/Selection.tsx","components/specimen-renderer/network-renderer/selectionInfo.tsx","components/specimen-renderer/network-renderer/NetworkRenderer.tsx","components/specimen-renderer/getRenderer.tsx","components/generic/LazyList.tsx","components/specimen-inspector/EventLabel.tsx","components/generic/Property.tsx","components/specimen-inspector/PropertyList.tsx","components/specimen-inspector/EventInspector.tsx","components/specimen-inspector/EventListInspector.tsx","components/generic/Label.tsx","components/specimen-inspector/SelectionMenu.tsx","components/specimen-inspector/SpecimenInspector.tsx","components/Title.tsx","App.tsx","reportWebVitals.ts","services/ConnectionsService.tsx","hooks/useBreakpoints.tsx","services/PlaybackService.tsx","services/FeaturesService.tsx","hooks/useMapContent.tsx","workers/usingWorker.ts","workers/async.ts","services/SpecimenService.tsx","slices/SliceProvider.tsx","theme.tsx","index.tsx"],"names":["SnackbarContext","createContext","noop","useContext","children","snackPack","setSnackPack","useState","open","setOpen","current","setCurrent","undefined","useEffect","length","prev","slice","handleMessage","useCallback","message","key","Date","getTime","handleClose","_","reason","handleExited","Provider","value","Snackbar","autoHideDuration","onClose","TransitionProps","onExited","action","IconButton","aria-label","color","sx","p","onClick","CloseIcon","props","Box","px","display","replace","next","merge","initialState","init","effect","reduce","Store","set","useReducer","n","useMemo","useAsync","r","cache","localStorage","getItem","JSON","parse","setItem","stringify","useConnections","ConnectionsProvider","createSlice","useFeatures","FeaturesProvider","algorithms","maps","formats","returnType","params","join","map","name","type","method","prefix","close","chunks","chunk","split","description","c","makeTypeString","defaultReturnValue","methods","m","makeComment","makeBody","templates","shouldRender","shouldBreak","useUIState","UIStateProvider","code","makeTemplate","values","theme","useTheme","useMediaQuery","breakpoints","down","itemHeight","sm","padding","trigger","items","onChange","placeholder","useSmallDisplay","max","index","findIndex","State","variant","state","Tooltip","title","span","bindTrigger","Menu","bindMenu","anchorOrigin","horizontal","vertical","transformOrigin","v","label","MenuItem","selected","TextField","minWidth","select","e","target","item","icon","find","id","Select","startCase","Button","disabled","startIcon","Type","Space","s","pop","shift","customMapId","custom","upload","accept","f","file","strict","ext","format","content","text","Error","mapDefaults","start","end","notify","useSnackbar","connections","algorithm","setUIState","FeaturePicker","MapIcon","url","source","CodeIcon","rest","useSpecimen","SpecimenProvider","specimen","playback","step","ready","playing","eventList","canPlay","canPause","canStop","canStepForward","canStepBackward","stepBy","clamp","play","pause","stop","stepForward","stepBackward","tick","usePlaybackState","PreviousIcon","PauseIcon","PlayIcon","ForwardIcon","StopIcon","threshold","showControls","setShowControls","isAbsoluteTop","setIsAbsoluteTop","isTop","setIsTop","setTarget","lastTop","useRef","listener","newIsTop","scrollTop","Math","abs","addEventListener","passive","removeEventListener","onTarget","onScroll","div","style","height","width","overflow","ref","PanelContext","Typography","elevatedStyle","transitionProperties","elevatedChildren","simple","position","panel","usePanel","useScrollState","styles","background","palette","paper","boxShadow","shadows","AppBar","elevation","primary","transition","transitions","create","Toolbar","marginRight","spacing","edge","ArrowBack","gridColumn","gridRow","flex","Fade","in","mountOnEnter","unmountOnExit","actions","scrollable","setContent","contentRef","setContentRef","hasOverflowingChildren","setHasOverflowingChildren","childHeight","setChildHeight","callback","doesOverflow","window","innerHeight","offsetHeight","ceil","ob","ResizeSensor","detach","useVariant","Dialog","fullScreen","paddingTop","PaperProps","borderRadius","shape","default","maxWidth","ScrollPanel","options","ModalProps","appBar","ModalAppBarProps","PopupState","isOpen","cloneElement","Modal","ModalAppBar","flexDirection","defaultRemotes","transport","defaultPlaybackRate","useSettings","SettingsProvider","remote","playbackRate","withLocalStorage","connect","worker","postMessage","Promise","res","disconnect","terminate","call","rpc","request","IPCWorker","JSONRPCClient","data","receive","uri","protocol","pathname","scheme","decodeURIComponent","internal","trace","version","mapURI","parseURI","includes","handler","hostname","socket","io","response","off","emit","on","transports","socketio","constructor","SocketIOTransport","ipc","IPCTransport","native","NativeTransport","defaultTransport","first","keys","DefaultListEditorInput","forwardRef","InputBase","fullWidth","inputRef","LabelIcon","useSwitch","useDelete","useEdit","useEditButton","onChangeItem","onDeleteItem","enabled","element","i","extrasPlacement","autoFocus","cardStyle","field","setField","alignItems","marginTop","marginBottom","flexGrow","marginLeft","onDelete","onValueChange","Switch","checked","focus","EditIcon","DeleteIcon","Card","borderColor","paddingRight","addItemLabel","onAddItem","placeholderText","getCategory","getOrder","extras","isInitialRender","useInitialRender","intermediateItems","setIntermediateItems","newIndex","setNewIndex","timeout","setTimeout","duration","standard","clearTimeout","uniqBy","c2","x","render","Collapse","appear","ListEditorField","sorted","sortBy","List","subheader","ListSubheader","disableSticky","gutterBottom","mt","out","forEach","isNewCategory","push","some","pl","pb","pt","ml","mb","disableElevation","Add","arr","editor","setState","Editor","handleChange","k","filter","b","Dot","fontSize","transform","my","model","resolve","useLoading","LoadingProvider","setLoading","task","loading","useConnectionResolver","entry","statusColor","connected","connecting","error","connection","useConnection","status","useConnectionStatus","Flex","py","Title","entries","setSettings","ListEditor","ServerEditor","debounce","ResetIcon","formatLabel","tab","setTab","TabContext","TabList","Tab","Divider","TabPanel","renderHeading","renderLabel","Slider","marks","baseRate","min","valueLabelFormat","valueLabelDisplay","defaultValue","onChangeCommitted","ServerListEditor","IconButtonWithTooltip","SettingsIcon","SettingsEditor","FormControlLabel","control","MuiSwitch","defaultChecked","comparators","apply","a","intrinsicProperties","eventTypes","properties","flexItem","orientation","mx","textOverflow","whiteSpace","last","component","property","condition","reference","inputProps","inputMode","pattern","active","propertyPaths","uniq","flat","paths","nodeStructure","get","BreakpointEditor","DELAY","AutoSize","CircularProgress","language","minimap","monotonicF","monotonicG","BreakpointListEditor","ScriptEditor","BugIcon","DebugOptionsEditor","divider","bgcolor","Input","Playback","Utility","Settings","justifyContent","DisabledIcon","getDefaults","wall","h","w","d","grid","y","row","tile","variables","valid","parseMap","node","range","floor","fn","memo","script","Function","tint","parseInt","colorsHex","teal","destination","pink","expanding","deepOrange","generating","yellow","closing","blueGrey","colors","mapValues","hex","orange","scale","devicePixelRatio","size","draw","Graphics","g","WEIGHT","Grid","makeGraphic","alpha","clear","lineStyle","moveTo","lineTo","left","top","radius","resolution","beginFill","drawCircle","endFill","square","drawRect","box","Node","Square","defaultCondition","constant","nodes","chain","keyBy","memoize","NodeList","getColor","obj","isUndefined","isNull","path","defined","pId","events","prop","event","PixiViewportBase","register","global","input","clickedAvailable","world","toWorld","viewport","app","stopPropagation","passiveWheel","drag","pinch","wheel","friction","clampZoom","maxScale","minScale","equal","Component","PixiComponent","applyProps","RasterRenderer","ViewportProps","StageProps","cursor","Stage","backgroundColor","Viewport","animateScale","animateAlpha","t","useTween","hover","highlight","point","Selected","take","findLastIndex","between","onSelect","selection","setRef","setActive","setHover","bgNodes","bgNodeColor","once","handleClick","info","selectionInfo","getBoundingClientRect","getPoint","handleMouseEvent","delay","onMouseDown","onMouseOver","Nodes","LazyNodes","Overlay","Path","Selection","Guides","renderers","GridRenderer","getGridDefaults","json","xy","NetworkRenderer","getNetworkDefaults","DefaultRenderer","renderItem","listOptions","totalCount","itemContent","hidden","Overline","getColorHex","mr","HiddenIcon","opacity","flexWrap","Property","cardStyles","CardActionArea","EventLabel","PropertyList","scrollToIndex","align","behavior","offset","EventInspector","secondary","anchorReference","anchorPosition","ListItem","ListItemText","StartIcon","DestinationIcon","Label","ListItemIcon","renderer","getRenderer","setSelection","LinearProgress","zIndex","createElement","EventListInspector","right","SelectionMenu","Controls","SpecimenInspector","App","reportWebVitals","onPerfEntry","import","then","getCLS","getFID","getFCP","getLCP","getTTFB","ms","timed","from","now","result","any","wait","delta","setConnections","usingLoadingState","useLoadingState","aborted","cs","tp","getTransport","ping","bind","isType","match","lower","cancelled","requestAnimationFrame","useRaf","useBreakpoints","cancellable","trimEnd","withSource","setFeatures","signal","features","getMap","usingWorker","usingWorkerTask","inp","onmessage","hashAsync","HashWorker","solve","hash","encodeURIComponent","setSpecimen","useMapContent","defaults","solution","instances","slices","services","shadow","ConnectionsService","PlaybackService","SpecimenService","FeaturesService","StrictMode","CssBaseline","ThemeProvider","SnackbarProvider","EnvironmentProvider","document","getElementById"],"mappings":"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","file":"static/js/main.5d79db00.chunk.js","sourcesContent":["import { IconButton, Snackbar } from \"@material-ui/core\";\r\nimport { CloseOutlined as CloseIcon } from \"@material-ui/icons\";\r\nimport { noop } from \"lodash\";\r\nimport {\r\n  createContext,\r\n  ReactNode,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\n\r\nconst SnackbarContext = createContext<(message?: ReactNode) => void>(noop);\r\n\r\nexport interface SnackbarMessage {\r\n  message?: ReactNode;\r\n  key: number;\r\n}\r\n\r\nexport interface State {\r\n  open: boolean;\r\n  snackPack: readonly SnackbarMessage[];\r\n  messageInfo?: SnackbarMessage;\r\n}\r\n\r\nexport function useSnackbar() {\r\n  return useContext(SnackbarContext);\r\n}\r\n\r\nexport function SnackbarProvider({ children }: { children?: ReactNode }) {\r\n  const [snackPack, setSnackPack] = useState<readonly SnackbarMessage[]>([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [current, setCurrent] = useState<SnackbarMessage | undefined>(\r\n    undefined\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (snackPack.length && !current) {\r\n      setCurrent({ ...snackPack[0] });\r\n      setSnackPack((prev) => prev.slice(1));\r\n      setOpen(true);\r\n    } else if (snackPack.length && current && open) {\r\n      setOpen(false);\r\n    }\r\n  }, [snackPack, current, open]);\r\n\r\n  const handleMessage = useCallback(\r\n    (message: ReactNode) => {\r\n      setSnackPack((prev) => [...prev, { message, key: new Date().getTime() }]);\r\n    },\r\n    [setSnackPack]\r\n  );\r\n\r\n  const handleClose = (_: any, reason?: string) => {\r\n    reason !== \"clickaway\" && setOpen(false);\r\n  };\r\n\r\n  const handleExited = () => setCurrent(undefined);\r\n\r\n  return (\r\n    <>\r\n      <SnackbarContext.Provider value={handleMessage}>\r\n        {children}\r\n      </SnackbarContext.Provider>\r\n      <Snackbar\r\n        key={current?.key}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        TransitionProps={{ onExited: handleExited }}\r\n        message={current?.message}\r\n        action={\r\n          <>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              sx={{ p: 0.5 }}\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { Box } from \"@material-ui/core\";\r\nimport { BoxProps } from \"@material-ui/system\";\r\n\r\nexport function Space(props: BoxProps) {\r\n  return <Box px={0.5} display=\"inline-block\" {...props} />;\r\n}\r\n","export type Reducer<T, U = T> = (prev: T, next: U) => T;\n\nexport const replace = (_: any, next: any) => next;\n\nexport const merge = (prev: any, next: any) => ({ ...prev, ...next });\n","import { noop } from \"lodash\";\r\nimport {\r\n  createContext,\r\n  ReactNode,\r\n  useContext,\r\n  useMemo,\r\n  useReducer,\r\n} from \"react\";\r\nimport { useAsync } from \"react-use\";\r\nimport { Reducer, merge } from \"./reducers\";\r\n\r\ntype Slice<T, U = T> = [T, (next: U) => void];\r\n\r\ntype Options<T, U> = {\r\n  init?: () => Promise<U | undefined>;\r\n  effect?: (state: { prev: T; next: T }) => void;\r\n  reduce?: Reducer<T, U>;\r\n};\r\n\r\nexport function createSlice<T, U = T>(\r\n  initialState: T,\r\n  { init, effect, reduce = merge }: Options<T, U> = {}\r\n) {\r\n  const Store = createContext<Slice<T, U>>([initialState, noop]);\r\n  return [\r\n    // Hook\r\n    () => useContext(Store),\r\n    // Context\r\n    ({ children }: { children?: ReactNode }) => {\r\n      const [value, set] = useReducer((p: T, n: U) => {\r\n        const next = reduce(p, n);\r\n        effect?.({ prev: p, next });\r\n        return next;\r\n      }, initialState);\r\n      const slice = useMemo<Slice<T, U>>(() => [value, set], [value, set]);\r\n      useAsync(async () => {\r\n        const r = await init?.();\r\n        if (r) set(r);\r\n      });\r\n      return <Store.Provider value={slice}>{children}</Store.Provider>;\r\n    },\r\n  ] as const;\r\n}\r\n\r\nexport function withLocalStorage<T>(key: string) {\r\n  return {\r\n    init: () => {\r\n      const cache = localStorage.getItem(key);\r\n      if (cache) return JSON.parse(cache);\r\n    },\r\n    effect: ({ next }) => localStorage.setItem(key, JSON.stringify(next)),\r\n  } as Options<T, T>;\r\n}\r\n","import { Transport } from \"client/Transport\";\r\nimport { CheckConnectionResponse } from \"protocol/CheckConnection\";\r\nimport { createSlice } from \"./createSlice\";\r\nimport { replace } from \"./reducers\";\r\n\r\nexport type Connection = CheckConnectionResponse[\"result\"] & {\r\n  call: Transport[\"call\"];\r\n  disconnect: Transport[\"disconnect\"];\r\n  url: string;\r\n  ping: number;\r\n};\r\n\r\nexport const [useConnections, ConnectionsProvider] = createSlice<Connection[]>(\r\n  [],\r\n  { reduce: replace }\r\n);\r\n","import { FeatureDescriptor } from \"protocol/FeatureQuery\";\r\nimport { createSlice } from \"./createSlice\";\r\n\r\ntype FeatureDescriptorWithSource = FeatureDescriptor & {\r\n  source: string;\r\n};\r\n\r\nexport type Features = {\r\n  algorithms: FeatureDescriptorWithSource[];\r\n  maps: (FeatureDescriptorWithSource & { type: string })[];\r\n  formats: FeatureDescriptorWithSource[];\r\n};\r\n\r\nexport const [useFeatures, FeaturesProvider] = createSlice<Features>({\r\n  algorithms: [],\r\n  maps: [],\r\n  formats: [],\r\n});\r\n","import { chunk, join, map, split } from \"lodash\";\r\nimport { FunctionTemplate } from \"./FunctionTemplate\";\r\n\r\ntype GenericFunctionTemplate = FunctionTemplate<[...any], any>;\r\n\r\nfunction makeTypeString({ returnType, params }: GenericFunctionTemplate) {\r\n  return `@type {(${join(\r\n    map(params, (p) => `${p.name}: ${p.type}`),\r\n    \", \"\r\n  )}) => ${returnType}}`;\r\n}\r\n\r\nfunction makeComment(method: GenericFunctionTemplate) {\r\n  const [open, prefix, close] = [\"/**\", \" * \", \" */\"];\r\n  const chunks = map(chunk(split(method.description, \" \"), 9), (c) =>\r\n    join(c, \" \")\r\n  );\r\n  return join(\r\n    [\r\n      open,\r\n      ...map(chunks, (c) => `${prefix}${c}`),\r\n      `${prefix}${makeTypeString(method)}`,\r\n      close,\r\n    ],\r\n    \"\\n\"\r\n  );\r\n}\r\n\r\nfunction makeBody({\r\n  name,\r\n  params,\r\n  defaultReturnValue,\r\n}: GenericFunctionTemplate) {\r\n  return join(\r\n    [\r\n      `function ${name}(${join(map(params, \"name\"), \", \")}) {`,\r\n      `    return ${JSON.stringify(defaultReturnValue)};`,\r\n      `}`,\r\n    ],\r\n    \"\\n\"\r\n  );\r\n}\r\n\r\nexport function makeTemplate(methods?: GenericFunctionTemplate[]) {\r\n  return join(\r\n    map(methods, (m) => join([makeComment(m), makeBody(m)], \"\\n\")),\r\n    \"\\n\\n\"\r\n  );\r\n}\r\n","import { TraceEvent } from \"protocol/Trace\";\r\nimport { FunctionTemplate } from \"./FunctionTemplate\";\r\n\r\nexport type ShouldBreak = FunctionTemplate<\r\n  [number, TraceEvent, TraceEvent[]],\r\n  boolean\r\n>;\r\n\r\nexport const shouldBreak: ShouldBreak = {\r\n  name: \"shouldBreak\",\r\n  description:\r\n    \"Define in what situations the debugger should break, in addition to the conditions defined in the standard options.\",\r\n  params: [\r\n    { name: \"step\", type: \"number\" },\r\n    { name: \"event\", type: \"any\" },\r\n    { name: \"events\", type: \"any\" },\r\n  ],\r\n  defaultReturnValue: false,\r\n  returnType: \"boolean\",\r\n};\r\n\r\nexport type ShouldRender = FunctionTemplate<\r\n  [number, TraceEvent, TraceEvent[]],\r\n  boolean\r\n>;\r\n\r\nexport const shouldRender: ShouldRender = {\r\n  name: \"shouldRender\",\r\n  description: \"Define which objects the renderer should display.\",\r\n  params: [\r\n    { name: \"step\", type: \"number\" },\r\n    { name: \"event\", type: \"any\" },\r\n    { name: \"events\", type: \"any\" },\r\n  ],\r\n  defaultReturnValue: true,\r\n  returnType: \"boolean\",\r\n};\r\n\r\nexport const templates = {\r\n  shouldRender,\r\n  shouldBreak,\r\n};\r\n","import { makeTemplate } from \"components/script-editor/makeTemplate\";\r\nimport { templates } from \"components/script-editor/templates\";\r\nimport { values } from \"lodash\";\r\nimport { Feature } from \"protocol/FeatureQuery\";\r\nimport { TraceEventType } from \"protocol/Trace\";\r\nimport { createSlice } from \"./createSlice\";\r\n\r\nexport type PlaybackStateType = \"playing\" | \"paused\" | undefined;\r\n\r\ntype PlaybackState = { playback?: PlaybackStateType; step?: number };\r\n\r\nexport type Map = Partial<\r\n  Feature & {\r\n    format: string;\r\n    source?: string;\r\n  }\r\n>;\r\n\r\ntype InputState = {\r\n  algorithm?: string;\r\n  map?: Map;\r\n};\r\n\r\nexport type Comparator = {\r\n  key: string;\r\n  apply: (value: number, reference: number) => boolean;\r\n};\r\n\r\nexport type Breakpoint = {\r\n  key: string;\r\n  property?: string;\r\n  reference?: number;\r\n  condition?: Comparator;\r\n  active?: boolean;\r\n  type?: TraceEventType;\r\n};\r\n\r\ntype DebugOptionsState = {\r\n  code?: string;\r\n  monotonicF?: boolean;\r\n  monotonicG?: boolean;\r\n  breakpoints?: Breakpoint[];\r\n};\r\n\r\ntype SpecimenState = {\r\n  start?: number;\r\n  end?: number;\r\n};\r\n\r\nexport type UIState = InputState &\r\n  PlaybackState &\r\n  DebugOptionsState &\r\n  SpecimenState;\r\n\r\nexport const [useUIState, UIStateProvider] = createSlice<\r\n  UIState,\r\n  Partial<UIState>\r\n>({\r\n  code: makeTemplate(values(templates)),\r\n});\r\n","import { useMediaQuery, useTheme } from \"@material-ui/core\";\r\n\r\nexport function useSmallDisplay() {\r\n  const theme = useTheme();\r\n  return useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n}\r\n","import {\r\n  Menu,\r\n  MenuItem,\r\n  TextField,\r\n  TextFieldProps,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { useSmallDisplay } from \"hooks/useSmallDisplay\";\r\nimport { findIndex, map, max } from \"lodash\";\r\nimport State, { bindMenu, bindTrigger } from \"material-ui-popup-state\";\r\nimport { ReactElement, ReactNode } from \"react\";\r\n\r\ntype Key = string | number;\r\n\r\nexport type SelectProps<T extends Key> = {\r\n  trigger?: (props: ReturnType<typeof bindTrigger>) => ReactElement;\r\n  items?: { value: T; label?: ReactNode }[];\r\n  value?: T;\r\n  onChange?: (value: T) => void;\r\n  placeholder?: string;\r\n};\r\n\r\nconst itemHeight = (sm: boolean) => (sm ? 48 : 36);\r\nconst padding = 8;\r\n\r\nexport function Select<T extends string>({\r\n  trigger,\r\n  items,\r\n  value,\r\n  onChange,\r\n  placeholder = \"Select Option\",\r\n}: SelectProps<T>) {\r\n  const sm = useSmallDisplay();\r\n  const index = max([findIndex(items, { value: value as any }), 0]) ?? 0;\r\n  return (\r\n    <State variant=\"popover\">\r\n      {(state) => (\r\n        <>\r\n          <Tooltip title={placeholder}>\r\n            <span>{trigger?.(bindTrigger(state))}</span>\r\n          </Tooltip>\r\n          <Menu\r\n            {...bindMenu(state)}\r\n            anchorOrigin={{\r\n              horizontal: \"center\",\r\n              vertical: -itemHeight(sm) * index - padding,\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            {map(items, ({ value: v, label }) => (\r\n              <MenuItem\r\n                key={v}\r\n                value={v}\r\n                selected={v === value}\r\n                onClick={() => {\r\n                  state.close();\r\n                  onChange?.(v);\r\n                }}\r\n              >\r\n                {label}\r\n              </MenuItem>\r\n            ))}\r\n          </Menu>\r\n        </>\r\n      )}\r\n    </State>\r\n  );\r\n}\r\n\r\nexport type SelectFieldProps<T extends string> = Pick<\r\n  SelectProps<T>,\r\n  \"items\" | \"onChange\"\r\n> &\r\n  Omit<TextFieldProps, \"onChange\">;\r\n\r\nexport function SelectField<T extends string>(props: SelectFieldProps<T>) {\r\n  const { placeholder, value, items = [], onChange } = props;\r\n  return (\r\n    <TextField\r\n      sx={{ minWidth: 120 }}\r\n      select\r\n      label={placeholder}\r\n      value={value}\r\n      variant=\"filled\"\r\n      {...props}\r\n      onChange={(e) => onChange?.(e.target.value as T)}\r\n    >\r\n      {map(items, (item) => (\r\n        <MenuItem key={item.value} value={item.value}>\r\n          {item.label}\r\n        </MenuItem>\r\n      ))}\r\n    </TextField>\r\n  );\r\n}\r\n","import { Button, Typography as Type } from \"@material-ui/core\";\r\nimport { Select } from \"components/generic/Select\";\r\nimport { Space } from \"components/generic/Space\";\r\nimport { find, map, startCase } from \"lodash\";\r\nimport { FeatureDescriptor } from \"protocol/FeatureQuery\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype Props = {\r\n  label?: string;\r\n  value?: string;\r\n  onChange?: (key: string) => void;\r\n  items?: FeatureDescriptor[];\r\n  icon?: ReactNode;\r\n};\r\n\r\nexport function FeaturePicker({ label, value, onChange, items, icon }: Props) {\r\n  const selected = find(items, { id: value });\r\n  return (\r\n    <Select\r\n      placeholder={startCase(label)}\r\n      trigger={(props) => (\r\n        <Button {...props} disabled={!items?.length} startIcon={icon}>\r\n          {selected?.name ?? label}\r\n        </Button>\r\n      )}\r\n      items={map(items, ({ id, name, description }) => ({\r\n        value: id,\r\n        label: (\r\n          <>\r\n            <Type>{name}</Type>\r\n            <Space />\r\n            <Type variant=\"body2\" color=\"textSecondary\">\r\n              {description}\r\n            </Type>\r\n          </>\r\n        ),\r\n      }))}\r\n      value={selected?.id}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n}\r\n","import { fileDialog as file } from \"file-select-dialog\";\nimport { find, startCase } from \"lodash\";\nimport { Feature, FeatureDescriptor } from \"protocol/FeatureQuery\";\n\nfunction ext(s: string) {\n  return s.split(\".\").pop();\n}\nfunction name(s: string) {\n  return s.split(\".\").shift();\n}\n\nconst customMapId = \"internal/custom\";\n\nexport const custom = (map?: Partial<Feature>) => ({\n  name: map?.id === customMapId ? `Custom - ${map?.name}` : \"Custom\",\n  description: \"Import Map\",\n  id: customMapId,\n});\n\nexport async function upload(accept: FeatureDescriptor[]) {\n  const f = await file({\n    accept: accept.map(({ id }) => `.${id}`),\n    strict: true,\n  });\n  if (f) {\n    if (find(accept, { id: ext(f.name) })) {\n      return {\n        ...custom(),\n        format: ext(f.name),\n        content: await f.text(),\n        name: startCase(name(f.name)),\n      } as Feature;\n    } else {\n      throw new Error(`The format (${ext(f.name)}) is unsupported.`);\n    }\n  }\n}\n","import { Code as CodeIcon, MapTwoTone as MapIcon } from \"@material-ui/icons\";\r\nimport { useSnackbar } from \"components/generic/Snackbar\";\r\nimport { Space } from \"components/generic/Space\";\r\nimport { find } from \"lodash\";\r\nimport { useConnections } from \"slices/connections\";\r\nimport { useFeatures } from \"slices/features\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { FeaturePicker } from \"./FeaturePicker\";\r\nimport { custom, upload } from \"./upload\";\r\n\r\nexport const mapDefaults = { start: undefined, end: undefined };\r\n\r\nexport function Input() {\r\n  const notify = useSnackbar();\r\n  const [connections] = useConnections();\r\n  const [{ algorithms, maps, formats }] = useFeatures();\r\n  const [{ algorithm, map }, setUIState] = useUIState();\r\n\r\n  return (\r\n    <>\r\n      <FeaturePicker\r\n        icon={<MapIcon />}\r\n        label=\"map\"\r\n        value={map?.id}\r\n        items={[\r\n          custom(map),\r\n          ...maps.map((c) => ({\r\n            ...c,\r\n            description: find(connections, { url: c.source })?.name,\r\n          })),\r\n        ]}\r\n        onChange={async (v) => {\r\n          switch (v) {\r\n            case custom().id:\r\n              try {\r\n                const f = await upload(formats);\r\n                if (f) setUIState({ ...mapDefaults, map: f });\r\n              } catch (e) {\r\n                notify(`${e}`);\r\n              }\r\n              break;\r\n            default:\r\n              setUIState({ ...mapDefaults, map: find(maps, { id: v }) });\r\n              break;\r\n          }\r\n        }}\r\n      />\r\n      <Space />\r\n      <FeaturePicker\r\n        icon={<CodeIcon />}\r\n        label=\"algorithm\"\r\n        value={algorithm}\r\n        items={algorithms.map((c) => ({\r\n          ...c,\r\n          description: find(connections, { url: c.source })?.name,\r\n        }))}\r\n        onChange={(v) => setUIState({ algorithm: v })}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { IconButton, IconButtonProps, Tooltip } from \"@material-ui/core\";\r\nimport { startCase } from \"lodash\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype IconButtonWithTooltipProps = {\r\n  label: string;\r\n  icon: ReactNode;\r\n} & IconButtonProps;\r\n\r\nexport function IconButtonWithTooltip({\r\n  label,\r\n  icon,\r\n  ...rest\r\n}: IconButtonWithTooltipProps) {\r\n  return (\r\n    <Tooltip title={startCase(label)} key={label}>\r\n      <span>\r\n        <IconButton {...rest}>{icon}</IconButton>\r\n      </span>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import { createSlice } from \"./createSlice\";\r\nimport { Trace } from \"protocol/Trace\";\r\nimport { PathfindingTask } from \"protocol/SolveTask\";\r\nimport { ParamsOf } from \"protocol/Message\";\r\n\r\ntype Specimen = {\r\n  specimen?: Trace;\r\n  map?: string;\r\n} & Partial<ParamsOf<PathfindingTask>>;\r\n\r\nexport const [useSpecimen, SpecimenProvider] = createSlice<Specimen>({});\r\n","import { clamp } from \"lodash\";\r\nimport { useMemo } from \"react\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\n\r\nexport function usePlaybackState() {\r\n  const [{ specimen }] = useSpecimen();\r\n  const [{ playback, step = 0 }, setUIState] = useUIState();\r\n\r\n  const ready = !!specimen;\r\n  const playing = playback === \"playing\";\r\n  const [start, end] = [0, (specimen?.eventList?.length ?? 1) - 1];\r\n\r\n  return useMemo(() => {\r\n    const state = {\r\n      start,\r\n      end,\r\n      step,\r\n      canPlay: ready && !playing && step < end,\r\n      canPause: ready && playing,\r\n      canStop: ready,\r\n      canStepForward: ready && !playing && step < end,\r\n      canStepBackward: ready && !playing && step > 0,\r\n    };\r\n\r\n    const stepBy = (n: number) => clamp(step + n, start, end);\r\n\r\n    const callbacks = {\r\n      play: () => setUIState({ playback: \"playing\", step: stepBy(1) }),\r\n      pause: (n = 0) => setUIState({ playback: \"paused\", step: stepBy(n) }),\r\n      stop: () => setUIState({ step: start, playback: \"paused\" }),\r\n      stepForward: () => setUIState({ step: stepBy(1) }),\r\n      stepBackward: () => setUIState({ step: stepBy(-1) }),\r\n      tick: (n = 1) => setUIState({ playback: \"playing\", step: stepBy(n) }),\r\n    };\r\n\r\n    return {\r\n      playing: playback === \"playing\",\r\n      ...state,\r\n      ...callbacks,\r\n    };\r\n  }, [end, playback, playing, ready, setUIState, start, step]);\r\n}\r\n","import {\r\n  PauseOutlined as PauseIcon,\r\n  PlayArrowOutlined as PlayIcon,\r\n  SkipNextOutlined as ForwardIcon,\r\n  SkipPreviousOutlined as PreviousIcon,\r\n  StopOutlined as StopIcon,\r\n} from \"@material-ui/icons\";\r\nimport { IconButtonWithTooltip as Button } from \"components/generic/IconButtonWithTooltip\";\r\nimport { usePlaybackState } from \"hooks/usePlaybackState\";\r\n\r\nexport function Playback() {\r\n  const {\r\n    playing,\r\n    canPause,\r\n    canPlay,\r\n    canStepBackward,\r\n    canStepForward,\r\n    canStop,\r\n    pause,\r\n    play,\r\n    stepBackward,\r\n    stepForward,\r\n    stop,\r\n  } = usePlaybackState();\r\n  return (\r\n    <>\r\n      <Button\r\n        label=\"step-backward\"\r\n        icon={<PreviousIcon />}\r\n        onClick={stepBackward}\r\n        disabled={!canStepBackward}\r\n      />\r\n      <Button\r\n        {...(playing\r\n          ? {\r\n              label: \"pause\",\r\n              icon: <PauseIcon />,\r\n              onClick: () => pause(),\r\n              disabled: !canPause,\r\n            }\r\n          : {\r\n              label: \"play\",\r\n              icon: <PlayIcon />,\r\n              onClick: () => play(),\r\n              disabled: !canPlay,\r\n              color: \"primary\",\r\n            })}\r\n      />\r\n      <Button\r\n        label=\"step-forward\"\r\n        icon={<ForwardIcon />}\r\n        onClick={stepForward}\r\n        disabled={!canStepForward}\r\n      />\r\n      <Button\r\n        label=\"stop\"\r\n        icon={<StopIcon />}\r\n        onClick={stop}\r\n        disabled={!canStop}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport function useScrollState(threshold: number = 128) {\r\n  const [showControls, setShowControls] = useState(true);\r\n  const [isAbsoluteTop, setIsAbsoluteTop] = useState(true);\r\n  const [isTop, setIsTop] = useState(true);\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n  const lastTop = useRef(0);\r\n  useEffect(() => {\r\n    if (target) {\r\n      const listener = () => {\r\n        {\r\n          const newIsTop = target.scrollTop <= threshold;\r\n          if (newIsTop !== isTop) {\r\n            setIsTop(newIsTop);\r\n          }\r\n        }\r\n        {\r\n          const newIsTop = target.scrollTop <= 1;\r\n          if (newIsTop !== isAbsoluteTop) {\r\n            setIsAbsoluteTop(newIsTop);\r\n          }\r\n        }\r\n        if (lastTop.current - target.scrollTop) {\r\n          if (\r\n            Math.abs(lastTop.current - target.scrollTop) > 2 &&\r\n            lastTop.current >= 0\r\n          ) {\r\n            setShowControls(lastTop.current > target.scrollTop);\r\n          }\r\n          lastTop.current = target.scrollTop;\r\n        }\r\n      };\r\n      target.addEventListener(\"scroll\", listener, { passive: true });\r\n      return () => {\r\n        target.removeEventListener(\"scroll\", listener);\r\n      };\r\n    }\r\n  }, [target, isTop, isAbsoluteTop, lastTop, threshold]);\r\n  return [\r\n    showControls || isTop,\r\n    isTop,\r\n    isAbsoluteTop,\r\n    target,\r\n    setTarget,\r\n  ] as const;\r\n}\r\n","import {\r\n  ComponentProps,\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\n\r\ntype ScrollPanelProps = {\r\n  onTarget?: (e: HTMLDivElement | null) => void;\r\n} & ComponentProps<\"div\">;\r\n\r\nexport function ScrollPanel({\r\n  onTarget,\r\n  onScroll,\r\n  ...props\r\n}: ScrollPanelProps) {\r\n  const [target, setTarget] = useState<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (target && onScroll) {\r\n      target.addEventListener(\"scroll\", onScroll as any, { passive: true });\r\n      return () => target.removeEventListener(\"scroll\", onScroll as any);\r\n    }\r\n  }, [target, onScroll]);\r\n\r\n  return (\r\n    <div\r\n      {...props}\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        overflow: \"hidden scroll\",\r\n        ...props.style,\r\n      }}\r\n      ref={(e) => {\r\n        setTarget(e);\r\n        onTarget?.(e);\r\n      }}\r\n    >\r\n      <PanelContext.Provider value={target}>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          {props.children}\r\n        </div>\r\n      </PanelContext.Provider>\r\n    </div>\r\n  );\r\n}\r\nconst PanelContext = createContext<HTMLDivElement | null>(null);\r\n\r\nexport function usePanel() {\r\n  return useContext(PanelContext);\r\n}\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Dialog,\r\n  Fade,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { ArrowBack } from \"@material-ui/icons\";\r\nimport { ResizeSensor } from \"css-element-queries\";\r\nimport PopupState from \"material-ui-popup-state\";\r\nimport {\r\n  cloneElement,\r\n  ComponentProps,\r\n  CSSProperties,\r\n  ReactElement,\r\n  ReactNode,\r\n  SyntheticEvent,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { useScrollState } from \"hooks/useScrollState\";\r\nimport { useSmallDisplay } from \"hooks/useSmallDisplay\";\r\nimport { ScrollPanel, usePanel } from \"./ScrollPanel\";\r\n\r\nexport function AppBarTitle({ children }: { children?: ReactNode }) {\r\n  return <Typography variant=\"h6\">{children}</Typography>;\r\n}\r\n\r\nexport type Props = {\r\n  children?: ReactNode;\r\n  actions?: ReactNode;\r\n  width?: number;\r\n  height?: string | number;\r\n  onTarget?: (target: HTMLDivElement | null) => void;\r\n  variant?: \"default\" | \"submodal\";\r\n  scrollable?: boolean;\r\n};\r\n\r\ntype ModalAppBarProps = {\r\n  onClose?: () => void;\r\n  style?: CSSProperties;\r\n  elevatedStyle?: CSSProperties;\r\n  transitionProperties?: string[];\r\n  children?: ReactNode;\r\n  elevatedChildren?: ReactNode;\r\n  simple?: boolean;\r\n  position?: \"fixed\" | \"absolute\" | \"sticky\" | \"static\";\r\n};\r\n\r\nexport function ModalAppBar({\r\n  onClose = () => {},\r\n  style,\r\n  elevatedStyle,\r\n  children,\r\n  transitionProperties = [\"box-shadow\", \"background\", \"border-bottom\"],\r\n  elevatedChildren,\r\n  simple,\r\n  position = \"sticky\",\r\n}: ModalAppBarProps) {\r\n  const panel = usePanel();\r\n  const theme = useTheme();\r\n  const [, , isAbsoluteTop, , setTarget] = useScrollState();\r\n  useEffect(() => {\r\n    setTarget(panel);\r\n  }, [panel, setTarget]);\r\n\r\n  const styles = isAbsoluteTop\r\n    ? {\r\n        background: theme.palette.background.paper,\r\n        ...(!simple && {\r\n          boxShadow: theme.shadows[0],\r\n        }),\r\n        ...style,\r\n      }\r\n    : {\r\n        background: theme.palette.background.paper,\r\n        ...(!simple && {\r\n          boxShadow: theme.shadows[4],\r\n        }),\r\n        ...elevatedStyle,\r\n      };\r\n\r\n  return (\r\n    <AppBar\r\n      elevation={0}\r\n      position={position}\r\n      style={{\r\n        color: theme.palette.text.primary,\r\n        transition: theme.transitions.create(transitionProperties),\r\n        ...styles,\r\n      }}\r\n    >\r\n      <Toolbar>\r\n        <IconButton\r\n          style={{\r\n            marginRight: theme.spacing(1),\r\n          }}\r\n          aria-label=\"open drawer\"\r\n          edge=\"start\"\r\n          onClick={() => onClose()}\r\n        >\r\n          <ArrowBack />\r\n        </IconButton>\r\n\r\n        {children && (\r\n          <div\r\n            style={{\r\n              gridColumn: 1,\r\n              gridRow: 1,\r\n              flex: 1,\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <Fade\r\n              in={!!(!elevatedChildren || isAbsoluteTop)}\r\n              mountOnEnter\r\n              unmountOnExit\r\n            >\r\n              <Box style={{ width: \"100%\" }}>{children}</Box>\r\n            </Fade>\r\n          </div>\r\n        )}\r\n        {elevatedChildren && (\r\n          <div\r\n            style={{\r\n              gridColumn: 1,\r\n              gridRow: 1,\r\n              flex: 1,\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <Fade\r\n              in={!!(elevatedChildren && !isAbsoluteTop)}\r\n              mountOnEnter\r\n              unmountOnExit\r\n            >\r\n              <Box style={{ width: \"100%\" }}>{elevatedChildren}</Box>\r\n            </Fade>\r\n          </div>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default function Modal({\r\n  children,\r\n  actions,\r\n  width = 480,\r\n  height,\r\n  onTarget,\r\n  variant = \"default\",\r\n  scrollable = true,\r\n  ...props\r\n}: Props & ComponentProps<typeof Dialog>) {\r\n  const [content, setContent] = useState<ReactNode | undefined>(undefined);\r\n  useEffect(() => {\r\n    if (children) setContent(children);\r\n  }, [children]);\r\n  const theme = useTheme();\r\n  const sm = useSmallDisplay();\r\n\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n  const [contentRef, setContentRef] = useState<HTMLElement | null>(null);\r\n  const [hasOverflowingChildren, setHasOverflowingChildren] = useState(false);\r\n  const [childHeight, setChildHeight] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (target && contentRef && !sm && !height) {\r\n      const callback = () => {\r\n        const doesOverflow = window.innerHeight - 64 < contentRef.offsetHeight;\r\n        setHasOverflowingChildren(doesOverflow);\r\n        setChildHeight(\r\n          contentRef.offsetHeight <= 1 ? 0 : Math.ceil(contentRef.offsetHeight)\r\n        );\r\n      };\r\n      window.addEventListener(\"resize\", callback);\r\n      const ob = new ResizeSensor(contentRef, callback);\r\n      callback();\r\n      return () => {\r\n        window.removeEventListener(\"resize\", callback);\r\n        ob.detach();\r\n      };\r\n    }\r\n  }, [target, contentRef, sm, height]);\r\n\r\n  const useVariant = variant === \"submodal\" && sm;\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen={sm}\r\n      {...props}\r\n      style={{\r\n        ...(useVariant && {\r\n          paddingTop: theme.spacing(8),\r\n        }),\r\n        ...props.style,\r\n      }}\r\n      PaperProps={{\r\n        ref: (e: HTMLElement | null) => setTarget(e),\r\n        style: {\r\n          ...(useVariant && {\r\n            borderRadius: `${theme.shape.borderRadius}px ${theme.shape.borderRadius}px 0 0`,\r\n          }),\r\n          background: theme.palette.background.default,\r\n          overflow: \"hidden\",\r\n          height:\r\n            height && !sm\r\n              ? height\r\n              : hasOverflowingChildren || sm\r\n              ? \"100%\"\r\n              : childHeight || \"fit-content\",\r\n          position: \"relative\",\r\n          maxWidth: \"none\",\r\n          ...props.PaperProps?.style,\r\n        },\r\n        ...props.PaperProps,\r\n      }}\r\n    >\r\n      <ScrollPanel\r\n        style={{\r\n          height: \"100%\",\r\n          width: sm ? undefined : width,\r\n          maxWidth: \"100%\",\r\n          overflow: scrollable ? undefined : \"hidden\",\r\n        }}\r\n        onTarget={onTarget}\r\n      >\r\n        <div\r\n          ref={(e) => setContentRef(e)}\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n        >\r\n          {content}\r\n        </div>\r\n      </ScrollPanel>\r\n      {actions}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport function ManagedModal({\r\n  options: ModalProps,\r\n  appBar: ModalAppBarProps,\r\n  trigger = () => <></>,\r\n  children,\r\n}: {\r\n  options?: Props;\r\n  trigger?: (onClick: (e: SyntheticEvent<any, Event>) => void) => ReactElement;\r\n  appBar?: ModalAppBarProps;\r\n  children?: ReactNode;\r\n}) {\r\n  return (\r\n    <PopupState variant=\"popover\">\r\n      {({ open, close, isOpen }) => {\r\n        return (\r\n          <>\r\n            {cloneElement(trigger(open))}\r\n            <Modal open={isOpen} onClose={close} {...ModalProps}>\r\n              <ModalAppBar onClose={close} {...ModalAppBarProps} />\r\n              {children ?? ModalProps?.children}\r\n            </Modal>\r\n          </>\r\n        );\r\n      }}\r\n    </PopupState>\r\n  );\r\n}\r\n","import { Box, BoxProps } from \"@material-ui/core\";\r\n\r\nexport type FlexProps = {\r\n  vertical?: boolean;\r\n} & BoxProps;\r\n\r\nexport function Flex({ vertical, ...props }: FlexProps) {\r\n  return (\r\n    <Box\r\n      position=\"relative\"\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      display=\"flex\"\r\n      flexDirection={vertical ? \"column\" : \"row\"}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n","import { createSlice, withLocalStorage } from \"./createSlice\";\r\n\r\nexport type Remote = {\r\n  url: string;\r\n  transport: string;\r\n  key: string;\r\n  disabled?: boolean;\r\n};\r\n\r\ntype Settings = {\r\n  remote?: Remote[];\r\n  playbackRate?: number;\r\n};\r\n\r\nconst DEV_PORT = 8001;\r\n\r\nexport const defaultRemotes = [\r\n  {\r\n    url: `internal://trace`,\r\n    transport: \"native\",\r\n    key: \"trace-provider\",\r\n  },\r\n  {\r\n    url: `http://localhost:${DEV_PORT}/`,\r\n    transport: \"socketio\",\r\n    key: \"default-development-server\",\r\n  },\r\n  {\r\n    url: `https://rachmaninoff.duckdns.org/`,\r\n    transport: \"socketio\",\r\n    key: \"legacy-production-server\",\r\n  },\r\n];\r\n\r\nexport const defaultPlaybackRate = 4;\r\n\r\nexport const [useSettings, SettingsProvider] = createSlice<Settings>(\r\n  {\r\n    remote: defaultRemotes,\r\n    playbackRate: defaultPlaybackRate,\r\n  },\r\n  withLocalStorage(\"settings\")\r\n);\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/hash.worker.ac18d53b.worker.js\");\n}\n","import { JSONRPCClient, JSONRPCResponse as Response } from \"json-rpc-2.0\";\nimport { NameMethodMap } from \"protocol\";\nimport { Request, RequestOf, ResponseOf } from \"protocol/Message\";\nimport { IPCWorker } from \"workers\";\nimport { Transport, TransportOptions } from \"./Transport\";\n\nexport class IPCTransport implements Transport {\n  worker: IPCWorker;\n  rpc: JSONRPCClient;\n\n  constructor(readonly options: TransportOptions) {\n    this.worker = new IPCWorker();\n    this.rpc = new JSONRPCClient(async (request: Request) => {\n      const listener = ({ data }: MessageEvent<Response>) => {\n        if (data.id === request.id) {\n          this.worker.removeEventListener(\"message\", listener);\n          this.rpc.receive(data);\n        }\n      };\n      this.worker.postMessage(request);\n      this.worker.addEventListener(\"message\", listener);\n    });\n  }\n\n  connect() {\n    this.worker.postMessage(this.options.url);\n    return new Promise<void>((res) => {\n      const listener = () => {\n        res();\n        this.worker.removeEventListener(\"message\", listener);\n      };\n      this.worker.addEventListener(\"message\", listener);\n    });\n  }\n\n  async disconnect() {\n    this.worker.terminate();\n  }\n\n  async call<T extends keyof NameMethodMap>(\n    name: T,\n    params?: RequestOf<NameMethodMap[T]>[\"params\"]\n  ): Promise<ResponseOf<NameMethodMap[T]>[\"result\"]> {\n    return await this.rpc.request(name, params);\n  }\n}\n","import { NameMethodMap } from \"protocol\";\nimport { RequestOf, ResponseOf } from \"protocol/Message\";\nimport { PathfindingTask, Scheme } from \"protocol/SolveTask\";\nimport { Transport, TransportOptions } from \"./Transport\";\nimport url from \"url-parse\";\n\nexport function parseURI(uri: string) {\n  const { protocol, pathname } = url(uri);\n  return {\n    scheme: protocol as Scheme,\n    content: decodeURIComponent(pathname),\n  };\n}\n\nconst internal: { [K in string]: Transport[\"call\"] } = {\n  trace: async (name, params) => {\n    switch (name) {\n      case \"about\":\n        return {\n          name: \"Search Trace\",\n          description: \"Provides JSON Search Trace Visualisation Functionality\",\n          version: \"1.0.2\",\n        };\n      case \"features/formats\":\n        return [\n          {\n            id: \"json\",\n            name: \"Search Trace\",\n          },\n        ];\n      case \"solve/pathfinding\":\n        const { mapURI } = (params as PathfindingTask[\"params\"])!;\n        const { scheme, content } = parseURI(mapURI);\n        if ([\"map:\", \"trace:\"].includes(scheme)) return JSON.parse(content);\n    }\n  },\n};\n\nexport class NativeTransport implements Transport {\n  handler: Transport[\"call\"];\n  constructor(readonly options: TransportOptions) {\n    const { hostname } = url(options.url);\n    this.handler = internal[hostname];\n  }\n\n  async connect() {}\n\n  async disconnect() {}\n\n  async call<T extends keyof NameMethodMap>(\n    name: T,\n    params?: RequestOf<NameMethodMap[T]>[\"params\"]\n  ): Promise<ResponseOf<NameMethodMap[T]>[\"result\"]> {\n    return await this.handler(name, params);\n  }\n}\n","import { JSONRPCClient, JSONRPCResponse as Response } from \"json-rpc-2.0\";\r\nimport { NameMethodMap } from \"protocol\";\r\nimport { Request, RequestOf, ResponseOf } from \"protocol/Message\";\r\nimport { io, Socket } from \"socket.io-client\";\r\nimport { Transport, TransportOptions } from \"./Transport\";\r\n\r\nexport class SocketIOTransport implements Transport {\r\n  rpc: JSONRPCClient;\r\n  socket: Socket;\r\n\r\n  constructor(readonly options: TransportOptions) {\r\n    this.socket = io(options.url);\r\n    this.rpc = new JSONRPCClient(async (request: Request) => {\r\n      const listener = (response: Response) => {\r\n        if (response.id === request.id) {\r\n          this.socket.off(\"response\", listener);\r\n          this.rpc.receive(response);\r\n        }\r\n      };\r\n      this.socket.emit(\"request\", request);\r\n      this.socket.on(\"response\", listener);\r\n    });\r\n  }\r\n\r\n  async connect() {\r\n    this.socket.connect();\r\n  }\r\n\r\n  async disconnect() {\r\n    this.socket.disconnect();\r\n  }\r\n\r\n  async call<T extends keyof NameMethodMap>(\r\n    name: T,\r\n    params?: RequestOf<NameMethodMap[T]>[\"params\"]\r\n  ): Promise<ResponseOf<NameMethodMap[T]>[\"result\"]> {\r\n    return await this.rpc.request(name, params);\r\n  }\r\n}\r\n","import { Dictionary, first, keys } from \"lodash\";\nimport { IPCTransport } from \"./IPCTransport\";\nimport { NativeTransport } from \"./NativeTransport\";\nimport { SocketIOTransport } from \"./SocketIOTransport\";\nimport { TransportConstructor } from \"./Transport\";\n\ntype TransportEntry = {\n  name: string;\n  constructor: TransportConstructor;\n};\n\nexport const transports: Dictionary<TransportEntry> = {\n  socketio: { name: \"socket.io\", constructor: SocketIOTransport },\n  ipc: { name: \"Web Worker\", constructor: IPCTransport },\n  native: { name: \"Internal\", constructor: NativeTransport },\n};\n\nexport function getTransport(key: string) {\n  return transports[key].constructor;\n}\n\nexport const defaultTransport = first(keys(transports))!;\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Collapse,\r\n  IconButton,\r\n  InputBase,\r\n  List,\r\n  ListSubheader,\r\n  Switch,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Add,\r\n  DeleteOutlined as DeleteIcon,\r\n  EditOutlined as EditIcon,\r\n  LabelOutlined as LabelIcon,\r\n} from \"@material-ui/icons\";\r\nimport { filter, map, sortBy, uniqBy } from \"lodash\";\r\nimport { nanoid as id } from \"nanoid\";\r\nimport {\r\n  cloneElement,\r\n  ComponentProps,\r\n  CSSProperties,\r\n  forwardRef,\r\n  ReactElement,\r\n  ReactNode,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\nexport const DefaultListEditorInput = forwardRef(function StyledInputBase(\r\n  props: ComponentProps<typeof InputBase>,\r\n  ref\r\n) {\r\n  return (\r\n    <InputBase\r\n      fullWidth\r\n      {...props}\r\n      placeholder=\"Untitled item\"\r\n      inputRef={ref}\r\n    />\r\n  );\r\n});\r\n\r\ntype Key = string | number;\r\n\r\ntype Item<T = any> = {\r\n  element?: ReactElement;\r\n  enabled?: boolean;\r\n  value?: T;\r\n  id: Key;\r\n};\r\n\r\ntype Props<T = any> = {\r\n  extras?: ReactNode;\r\n  addItemLabel?: ReactNode;\r\n  label?: ReactNode;\r\n  text?: ReactNode;\r\n  items?: Item<T>[];\r\n  useSwitch?: boolean;\r\n  useDelete?: boolean;\r\n  onChangeItem?: (key: Key, value: T, enabled: boolean) => void;\r\n  onAddItem?: () => void;\r\n  onDeleteItem?: (key: Key) => void;\r\n  icon?: ReactElement | null;\r\n  useEdit?: boolean;\r\n  variant?: \"outlined\" | \"default\";\r\n  extrasPlacement?: \"flex-start\" | \"center\" | \"flex-end\";\r\n  placeholderText?: ReactNode;\r\n  cardStyle?: CSSProperties;\r\n  autoFocus?: boolean;\r\n  getCategory?: (value?: T) => string;\r\n  getOrder?: (value?: T) => string | number;\r\n};\r\n\r\ntype ListEditorFieldProps = {\r\n  isPlaceholder?: boolean;\r\n  i?: number;\r\n};\r\n\r\nfunction useInitialRender() {\r\n  const ref = useRef(false);\r\n  const current = ref.current;\r\n  ref.current = true;\r\n  return !current;\r\n}\r\n\r\nexport function ListEditorField({\r\n  icon = <LabelIcon />,\r\n  useSwitch,\r\n  useDelete,\r\n  useEdit: useEditButton = true,\r\n  onChangeItem = () => {},\r\n  onDeleteItem = () => {},\r\n  enabled = false,\r\n  element = <DefaultListEditorInput />,\r\n  value,\r\n  id,\r\n  i = 0,\r\n  variant = \"default\",\r\n  extrasPlacement = \"center\",\r\n  autoFocus,\r\n  cardStyle: style,\r\n}: Props & ListEditorFieldProps & Item) {\r\n  const [field, setField] = useState<HTMLElement | null>(null);\r\n  const theme = useTheme();\r\n  const content = (\r\n    <Box display=\"flex\" alignItems={extrasPlacement}>\r\n      {icon !== null &&\r\n        cloneElement(icon, {\r\n          style: {\r\n            marginRight: theme.spacing(1),\r\n            marginTop: theme.spacing(0.5),\r\n            marginBottom: theme.spacing(0.5),\r\n          },\r\n          color: \"action\",\r\n        })}\r\n      <Box\r\n        flexGrow={1}\r\n        style={{\r\n          marginLeft: -theme.spacing(icon === null ? 2 : 0),\r\n        }}\r\n      >\r\n        {cloneElement(element, {\r\n          onDelete: () => onDeleteItem(id ?? i),\r\n          autoFocus,\r\n          value,\r\n          key: id ?? i,\r\n          onValueChange: (e: any) => onChangeItem(id ?? i, e, enabled),\r\n          onChange: (e: any) => onChangeItem(id ?? i, e.target.value, enabled),\r\n          ref: (e: HTMLElement | null) => setField(e),\r\n        })}\r\n      </Box>\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        {useSwitch && (\r\n          <Switch\r\n            color=\"primary\"\r\n            edge=\"end\"\r\n            onChange={(_, v) => onChangeItem(id ?? i, value, v)}\r\n            checked={enabled}\r\n          />\r\n        )}\r\n        {useEditButton && (\r\n          <IconButton\r\n            edge=\"end\"\r\n            onClick={() => {\r\n              if (field?.focus) {\r\n                field.focus();\r\n              }\r\n            }}\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n        )}\r\n        {useDelete && (\r\n          <IconButton onClick={() => onDeleteItem(id ?? i)}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n  return (\r\n    <Box\r\n      style={{\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n      }}\r\n    >\r\n      {variant === \"outlined\" ? (\r\n        <Card\r\n          variant=\"outlined\"\r\n          style={{\r\n            borderColor: \"transparent\",\r\n            paddingRight: theme.spacing(2),\r\n            transition: theme.transitions.create([\r\n              \"box-shadow\",\r\n              \"border-color\",\r\n            ]),\r\n            ...style,\r\n          }}\r\n        >\r\n          {content}\r\n        </Card>\r\n      ) : (\r\n        content\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function Editor<T>(props: Props<T>) {\r\n  const {\r\n    addItemLabel = \"Add Item\",\r\n    label,\r\n    text,\r\n    onAddItem = () => {},\r\n    onDeleteItem = () => {},\r\n    items = [],\r\n    placeholderText,\r\n    autoFocus,\r\n    getCategory,\r\n    getOrder,\r\n    extras,\r\n  } = props;\r\n  const isInitialRender = useInitialRender();\r\n  const theme = useTheme();\r\n  const [intermediateItems, setIntermediateItems] = useState(items);\r\n  const [newIndex, setNewIndex] = useState(-1);\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setIntermediateItems(items);\r\n    }, theme.transitions.duration.standard);\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [items, setIntermediateItems, theme.transitions.duration.standard]);\r\n  const children = uniqBy([...intermediateItems, ...items], (c) => c.id)\r\n    .map((c) => items.find((c2) => c.id === c2.id) ?? c)\r\n    .map((x, i) => {\r\n      const { enabled, element, value, id } = x ?? {};\r\n      return {\r\n        value,\r\n        render: (p?: ComponentProps<typeof ListEditorField>) => (\r\n          <Collapse\r\n            in={!!items.find((p) => p.id === x.id)}\r\n            unmountOnExit\r\n            appear={!isInitialRender}\r\n            mountOnEnter\r\n          >\r\n            <ListEditorField\r\n              {...props}\r\n              onDeleteItem={(e) => {\r\n                onDeleteItem(e);\r\n                setNewIndex(-1);\r\n              }}\r\n              enabled={enabled}\r\n              element={element}\r\n              value={value}\r\n              id={id}\r\n              i={i}\r\n              autoFocus={autoFocus || i === newIndex}\r\n              {...p}\r\n            />\r\n          </Collapse>\r\n        ),\r\n        key: id,\r\n        in: !!items.find((p) => p.id === x.id),\r\n      };\r\n    });\r\n  const sorted = sortBy(\r\n    children,\r\n    (c) => getCategory?.(c.value),\r\n    (c) => getOrder?.(c.value)\r\n  ).map((c) => ({\r\n    ...c,\r\n    render: (p?: ComponentProps<typeof ListEditorField>) => (\r\n      <Box key={c.key}>{c.render(p)}</Box>\r\n    ),\r\n  }));\r\n  return (\r\n    <List\r\n      subheader={\r\n        label || text ? (\r\n          <>\r\n            <ListSubheader disableSticky>\r\n              {label && (\r\n                <Typography variant=\"body1\" gutterBottom color=\"textPrimary\">\r\n                  {label}\r\n                </Typography>\r\n              )}\r\n              {text && (\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                  style={{ marginBottom: theme.spacing(3) }}\r\n                >\r\n                  {text}\r\n                </Typography>\r\n              )}\r\n            </ListSubheader>\r\n          </>\r\n        ) : undefined\r\n      }\r\n    >\r\n      <Box mt={getCategory ? -1 : 0}>\r\n        {(() => {\r\n          const out: ReactNode[] = [];\r\n          sorted.forEach((c, i) => {\r\n            if (getCategory && isNewCategory(sorted, i, c)) {\r\n              out.push(\r\n                <Collapse\r\n                  in={items.some(\r\n                    (c2) => getCategory(c2.value) === getCategory(c.value)\r\n                  )}\r\n                  appear\r\n                  key={getCategory(c.value)}\r\n                >\r\n                  <Box pl={2} pb={2} pt={1}>\r\n                    <Typography variant=\"overline\" color=\"textSecondary\">\r\n                      {getCategory(c.value)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Collapse>\r\n              );\r\n            }\r\n            out.push(c.render());\r\n          });\r\n          return out;\r\n        })()}\r\n      </Box>\r\n      <Collapse in={!items?.length}>\r\n        <Box ml={2} mb={1} pt={getCategory ? 1 : 0}>\r\n          <Typography color=\"textSecondary\">\r\n            {placeholderText ?? \"No items\"}\r\n          </Typography>\r\n        </Box>\r\n      </Collapse>\r\n      <Box p={2} mb={-3}>\r\n        <Button\r\n          disableElevation\r\n          variant=\"contained\"\r\n          startIcon={<Add />}\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            onAddItem();\r\n            setNewIndex(items.length);\r\n          }}\r\n        >\r\n          {addItemLabel}\r\n        </Button>\r\n        {extras}\r\n      </Box>\r\n    </List>\r\n  );\r\n\r\n  function isNewCategory(\r\n    arr: {\r\n      value: T | undefined;\r\n      render: (\r\n        p?: (Props<any> & ListEditorFieldProps & Item<any>) | undefined\r\n      ) => JSX.Element;\r\n      key: Key;\r\n    }[],\r\n    i: number,\r\n    c: {\r\n      value: T | undefined;\r\n      render: (\r\n        p?: (Props<any> & ListEditorFieldProps & Item<any>) | undefined\r\n      ) => JSX.Element;\r\n      key: Key;\r\n    }\r\n  ) {\r\n    return !!(\r\n      getCategory &&\r\n      (arr[i - 1] === undefined ||\r\n        getCategory(arr[i - 1].value) !== getCategory(c.value))\r\n    );\r\n  }\r\n}\r\n\r\nexport function ListEditor<T extends { key: string }>({\r\n  onChange,\r\n  value = [],\r\n  editor,\r\n  create,\r\n  ...props\r\n}: Omit<Props<T>, \"items\"> & {\r\n  items?: T[];\r\n  onChange?: (value: T[]) => void;\r\n  value?: T[];\r\n  editor?: (item: T) => ReactElement;\r\n  create?: () => Omit<T, \"key\">;\r\n}) {\r\n  const [state, setState] = useState(value ?? []);\r\n  function handleChange(next: T[]) {\r\n    setState(next);\r\n    onChange?.(next);\r\n  }\r\n  useEffect(() => {\r\n    setState(value);\r\n  }, [value]);\r\n  return (\r\n    <Box sx={{ ml: -2 }}>\r\n      <Editor\r\n        {...props}\r\n        items={state.map((c) => ({\r\n          id: c.key,\r\n          value: c,\r\n          element: editor?.(c),\r\n        }))}\r\n        useDelete\r\n        useEdit={false}\r\n        onAddItem={() =>\r\n          handleChange?.([...state, { key: id(), ...create?.() } as T])\r\n        }\r\n        onDeleteItem={(k) => {\r\n          return handleChange?.(filter(state, (b) => b.key !== k));\r\n        }}\r\n        onChangeItem={(k, v) =>\r\n          handleChange?.(map(state, (b) => (b.key === k ? v : b)))\r\n        }\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { Typography as Type } from \"@material-ui/core\";\r\nimport { FiberManualRecord as Dot } from \"@material-ui/icons\";\r\nimport { ComponentProps, ReactNode } from \"react\";\r\n\r\nexport function OverlineDot(props: ComponentProps<typeof Dot>) {\r\n  return (\r\n    <Dot\r\n      {...props}\r\n      sx={{\r\n        fontSize: 12,\r\n        transform: \"translateY(1.75px) translateX(-2px)\",\r\n        ...props.sx,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\ntype Props = {\r\n  children?: ReactNode;\r\n};\r\n\r\nexport function Overline({ children }: Props) {\r\n  return (\r\n    <Type variant=\"overline\" sx={{ my: -0.75, display: \"block\" }}>\r\n      {children}\r\n    </Type>\r\n  );\r\n}\r\n","import { find } from \"lodash\";\nimport { useCallback } from \"react\";\nimport { Connection, useConnections } from \"slices/connections\";\n\nexport function useConnectionResolver() {\n  const [connections] = useConnections();\n  return useCallback(\n    (model?: Partial<Connection>) => find(connections, model),\n    [connections]\n  );\n}\n\nexport function useConnection(url: string) {\n  const resolve = useConnectionResolver();\n  return resolve({ url });\n}\n","import { useCallback } from \"react\";\r\nimport { createSlice } from \"./createSlice\";\r\n\r\ntype Loading = {\r\n  specimen?: boolean;\r\n  map?: boolean;\r\n  connections?: boolean;\r\n  features?: boolean;\r\n};\r\n\r\nexport const [useLoading, LoadingProvider] = createSlice<Loading>({});\r\n\r\nexport function useLoadingState(key: keyof Loading) {\r\n  const [, setLoading] = useLoading();\r\n\r\n  return useCallback(\r\n    async <T>(task: () => Promise<T>) => {\r\n      setLoading({ [key]: true });\r\n      const out = await task();\r\n      setLoading({ [key]: false });\r\n      return out;\r\n    },\r\n    [key, setLoading]\r\n  );\r\n}\r\n","import { find } from \"lodash\";\nimport { useLoading } from \"slices/loading\";\nimport { useSettings } from \"slices/settings\";\nimport { useConnectionResolver } from \"./useConnectionResolver\";\n\nexport type ConnectionStatus =\n  | \"connected\"\n  | \"connecting\"\n  | \"error\"\n  | \"not-connected\";\n\nexport function useConnectionStatus(url?: string): ConnectionStatus {\n  const [{ connections: loading }] = useLoading();\n  const resolve = useConnectionResolver();\n  const [{ remote }] = useSettings();\n  const entry = find(remote, { url });\n\n  return entry && !entry?.disabled\n    ? resolve({ url })\n      ? \"connected\"\n      : loading\n      ? \"connecting\"\n      : url\n      ? \"error\"\n      : \"not-connected\"\n    : \"not-connected\";\n}\n","import {\n  Switch,\n  TextField,\n  Tooltip,\n  Typography as Type,\n} from \"@material-ui/core\";\nimport { EditTwoTone as EditIcon } from \"@material-ui/icons\";\nimport { Box } from \"@material-ui/system\";\nimport { Flex } from \"components/generic/Flex\";\nimport { IconButtonWithTooltip as IconButton } from \"components/generic/IconButtonWithTooltip\";\nimport {\n  AppBarTitle as Title,\n  ManagedModal as Dialog,\n} from \"components/generic/Modal\";\nimport { OverlineDot as Dot } from \"components/generic/Overline\";\nimport { Space } from \"components/generic/Space\";\nimport { useConnection } from \"hooks/useConnectionResolver\";\nimport { useConnectionStatus } from \"hooks/useConnectionStatus\";\nimport { entries, startCase } from \"lodash\";\nimport { merge } from \"slices/reducers\";\nimport { Remote } from \"slices/settings\";\nimport { SelectField as Select } from \"components/generic/Select\";\nimport { transports } from \"client\";\n\nconst statusColor = {\n  connected: \"success.light\",\n  connecting: \"warning.light\",\n  error: \"error.light\",\n  \"not-connected\": \"text.disabled\",\n};\n\ntype ServerEditorProps = {\n  value: Remote;\n  onValueChange?: (e: Remote) => void;\n};\n\nexport function ServerEditor({ value, onValueChange }: ServerEditorProps) {\n  const connection = useConnection(value.url);\n  const status = useConnectionStatus(value.url);\n\n  function handleChange(next: Partial<Remote>) {\n    onValueChange?.(merge(value, next));\n  }\n\n  return (\n    <>\n      <Flex alignItems=\"center\" py={0.5}>\n        <Dot sx={{ color: statusColor[status] }} />\n        <Space />\n        <Box flex={1}>\n          <Type>\n            {connection\n              ? `${connection.name} ${connection.version}`\n              : startCase(status)}\n          </Type>\n          <Type variant=\"body2\" color=\"text.secondary\">\n            {connection?.description ?? (value?.url || \"No URL\")}\n          </Type>\n        </Box>\n        <Tooltip title={`${value.disabled ? \"Enable\" : \"Disable\"} Connection`}>\n          <Box>\n            <Switch\n              checked={!value.disabled}\n              onChange={(_, v) => handleChange({ disabled: !v })}\n            />\n          </Box>\n        </Tooltip>\n        <Dialog\n          trigger={(onClick) => (\n            <IconButton\n              icon={<EditIcon />}\n              label=\"Edit Connection\"\n              {...{ onClick }}\n            />\n          )}\n          appBar={{ children: <Title>Edit Connection</Title> }}\n        >\n          <Box p={2.5}>\n            <TextField\n              value={value.url}\n              onChange={(e) => handleChange({ url: e.target.value })}\n              fullWidth\n              variant=\"filled\"\n              label=\"URL\"\n              sx={{ mb: 2 }}\n            />\n            <Select\n              placeholder=\"Connection Type\"\n              items={entries(transports).map(([k, { name }]) => ({\n                value: k,\n                label: name,\n              }))}\n              fullWidth\n              value={value.transport}\n              onChange={(v) => handleChange({ transport: v })}\n            />\n          </Box>\n        </Dialog>\n      </Flex>\n    </>\n  );\n}\n","import { Button } from \"@material-ui/core\";\nimport { ReplayOutlined as ResetIcon } from \"@material-ui/icons\";\nimport { defaultTransport } from \"client\";\nimport { ListEditor } from \"components/generic/ListEditor\";\nimport { debounce } from \"lodash\";\nimport { defaultRemotes, Remote, useSettings } from \"slices/settings\";\nimport { ServerEditor } from \"./ServerEditor\";\n\nexport function ServerListEditor() {\n  const [{ remote }, setSettings] = useSettings();\n  return (\n    <>\n      <ListEditor<Remote>\n        editor={(v) => <ServerEditor value={v} />}\n        icon={null}\n        value={remote}\n        onChange={debounce((v) => setSettings({ remote: v }), 300)}\n        addItemLabel=\"Add Solver\"\n        create={() => ({\n          transport: defaultTransport,\n          url: \"\",\n          disabled: true,\n        })}\n        extras={\n          <Button\n            startIcon={<ResetIcon />}\n            sx={{ ml: 2 }}\n            onClick={() => setSettings({ remote: defaultRemotes })}\n          >\n            Reset to Defaults\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","import {\n  Box,\n  Divider,\n  Slider,\n  Tab,\n  Typography as Type,\n} from \"@material-ui/core\";\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\nimport { Flex } from \"components/generic/Flex\";\nimport { Space } from \"components/generic/Space\";\nimport { ReactNode, useState } from \"react\";\nimport { defaultPlaybackRate as baseRate, useSettings } from \"slices/settings\";\nimport { ServerListEditor } from \"./ServerListEditor\";\n\nconst formatLabel = (v: number) => `${v}x`;\n\nexport function SettingsEditor() {\n  const [{ playbackRate = 1 }, setSettings] = useSettings();\n  const [tab, setTab] = useState(\"general\");\n  function renderHeading(label: ReactNode) {\n    return (\n      <Type variant=\"overline\" color=\"textSecondary\">\n        {label}\n      </Type>\n    );\n  }\n  function renderLabel(label: ReactNode) {\n    return <Type variant=\"body1\">{label}</Type>;\n  }\n  return (\n    <TabContext value={tab}>\n      <TabList onChange={(_, v) => setTab(v)}>\n        <Tab label=\"General\" value=\"general\" />\n        <Tab label=\"Connections\" value=\"connections\" />\n      </TabList>\n      <Divider />\n      <TabPanel value=\"general\">\n        <Box>\n          {renderHeading(\"Visualiser\")}\n          <Flex alignItems=\"center\">\n            {renderLabel(\"Playback Rate\")}\n            <Space flex={1} />\n            <Slider\n              sx={{ maxWidth: 320 }}\n              marks={[0.25, 1, 5].map((v) => ({\n                value: v * baseRate,\n                label: formatLabel(v),\n              }))}\n              step={0.25 * baseRate}\n              min={0.25 * baseRate}\n              max={5 * baseRate}\n              valueLabelFormat={(v) => formatLabel(v / baseRate)}\n              valueLabelDisplay=\"auto\"\n              defaultValue={playbackRate}\n              onChangeCommitted={(_, v) =>\n                setSettings({ playbackRate: v as number })\n              }\n            />\n          </Flex>\n        </Box>\n      </TabPanel>\n      <TabPanel value=\"connections\">\n        <Box>\n          {renderHeading(\"Solvers\")}\n          <ServerListEditor />\n        </Box>\n      </TabPanel>\n    </TabContext>\n  );\n}\n","import { SettingsTwoTone as SettingsIcon } from \"@material-ui/icons\";\nimport { IconButtonWithTooltip } from \"components/generic/IconButtonWithTooltip\";\nimport {\n  AppBarTitle as Title,\n  ManagedModal as Dialog,\n} from \"components/generic/Modal\";\nimport { SettingsEditor } from \"components/settings-editor/SettingsEditor\";\n\nexport function Settings() {\n  return (\n    <>\n      <Dialog\n        trigger={(onClick) => (\n          <IconButtonWithTooltip\n            {...{ onClick }}\n            icon={<SettingsIcon fontSize=\"small\" color=\"primary\" />}\n            label=\"Settings\"\n          />\n        )}\n        options={{ width: 960, scrollable: false }}\n        appBar={{ children: <Title>Settings</Title> }}\n      >\n        <SettingsEditor />\n      </Dialog>\n    </>\n  );\n}\n","import {\r\n  FormControlLabel,\r\n  Switch as MuiSwitch,\r\n  SwitchProps as MuiSwitchProps,\r\n} from \"@material-ui/core\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype SwitchProps = { label?: ReactNode } & MuiSwitchProps;\r\n\r\nexport function Switch({ label = <></>, ...props }: SwitchProps) {\r\n  return (\r\n    <FormControlLabel\r\n      control={<MuiSwitch defaultChecked {...props} />}\r\n      {...{ label }}\r\n    />\r\n  );\r\n}\r\n","import { Comparator } from \"slices/UIState\";\r\n\r\nexport const comparators: Comparator[] = [\r\n  {\r\n    key: \"equal\",\r\n    apply: (a, b) => a === b,\r\n  },\r\n  {\r\n    key: \"less-than\",\r\n    apply: (a, b) => a < b,\r\n  },\r\n  {\r\n    key: \"greater-than\",\r\n    apply: (a, b) => a > b,\r\n  },\r\n];\r\n","export const intrinsicProperties = [\"f\", \"g\"];\r\n","import { TraceEventType } from \"protocol/Trace\";\r\n\r\nexport const eventTypes: (TraceEventType | \"any\")[] = [\r\n  \"any\",\r\n  \"source\",\r\n  \"destination\",\r\n  \"expanding\",\r\n  \"generating\",\r\n  \"closing\",\r\n];\r\n","import { Divider, TextField, Typography as Type } from \"@material-ui/core\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { SelectField as Select } from \"components/generic/Select\";\r\nimport { Space } from \"components/generic/Space\";\r\nimport { Switch } from \"components/generic/Switch\";\r\nimport { find, last, map, startCase } from \"lodash\";\r\nimport { Breakpoint } from \"slices/UIState\";\r\nimport { comparators } from \"./comparators\";\r\nimport { eventTypes } from \"./eventTypes\";\r\n\r\ntype BreakpointEditorProps = {\r\n  value: Breakpoint;\r\n  onValueChange?: (v: Breakpoint) => void;\r\n  properties?: string[];\r\n};\r\n\r\nexport function BreakpointEditor({\r\n  value,\r\n  onValueChange: onChange,\r\n  properties,\r\n}: BreakpointEditorProps) {\r\n  function handleChange(next: Partial<Breakpoint>) {\r\n    onChange?.({ ...value, ...next });\r\n  }\r\n  return (\r\n    <Flex>\r\n      <Select\r\n        placeholder=\"Event\"\r\n        sx={{ minWidth: 160 }}\r\n        items={map(eventTypes, (c) => ({ value: c, label: startCase(c) }))}\r\n        onChange={(v) => handleChange({ type: v === \"any\" ? undefined : v })}\r\n        value={value.type ?? \"any\"}\r\n      />\r\n      <Divider flexItem orientation=\"vertical\" sx={{ mx: 2 }} />\r\n      <Select\r\n        placeholder=\"Property\"\r\n        sx={{\r\n          minWidth: 140,\r\n          textOverflow: \"ellipsis\",\r\n          whiteSpace: \"nowrap\",\r\n        }}\r\n        items={map(properties, (c) => ({\r\n          value: c,\r\n          label: (\r\n            <>\r\n              {last(c.split(\".\"))}\r\n              <Space />\r\n              <Type\r\n                color=\"textSecondary\"\r\n                variant=\"body2\"\r\n                component=\"span\"\r\n              >{`event.${c}`}</Type>\r\n            </>\r\n          ),\r\n        }))}\r\n        onChange={(v) => handleChange({ property: v })}\r\n        value={value.property}\r\n      />\r\n      <Space />\r\n      <Select\r\n        placeholder=\"Condition\"\r\n        items={comparators.map((c) => ({\r\n          value: c.key,\r\n          label: startCase(c.key),\r\n        }))}\r\n        value={value?.condition?.key ?? comparators?.[0]?.key}\r\n        onChange={(v) =>\r\n          handleChange({ condition: find(comparators, { key: v }) })\r\n        }\r\n      />\r\n      <Space />\r\n      <TextField\r\n        label=\"Reference\"\r\n        fullWidth\r\n        value={`${value.reference ?? 0}`}\r\n        variant=\"filled\"\r\n        inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\r\n        onChange={(v) => handleChange({ reference: +v.target.value })}\r\n        type=\"number\"\r\n      />\r\n      <Space sx={{ px: 2 }} />\r\n      <Switch\r\n        checked={!!value.active}\r\n        onChange={(_, v) => handleChange({ active: v })}\r\n      />\r\n    </Flex>\r\n  );\r\n}\r\n","export const propertyPaths = [\"variables\"];\r\n","import { ListEditor } from \"components/generic/ListEditor\";\r\nimport { debounce, flatMap as flat, get, keys, map, uniq } from \"lodash\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { Breakpoint, useUIState } from \"slices/UIState\";\r\nimport { comparators } from \"./comparators\";\r\nimport { intrinsicProperties } from \"./intrinsicProperties\";\r\nimport { BreakpointEditor } from \"./BreakpointEditor\";\r\nimport { Box } from \"@material-ui/system\";\r\nimport { propertyPaths as paths } from \"./propertyPaths\";\r\n\r\nexport function BreakpointListEditor() {\r\n  const [{ breakpoints = [] }, setUIState] = useUIState();\r\n  const [{ specimen }] = useSpecimen();\r\n\r\n  const properties = uniq([\r\n    ...intrinsicProperties,\r\n    ...flat(paths, (p) =>\r\n      flat(specimen?.nodeStructure, (v) =>\r\n        map(keys(get(v, p)), (k) => `${p}.${k}`)\r\n      )\r\n    ),\r\n  ]);\r\n\r\n  return (\r\n    <Box sx={{ overflow: \"auto hidden\", width: \"100%\" }}>\r\n      <Box sx={{ minWidth: 720, mb: 2 }}>\r\n        <ListEditor<Breakpoint>\r\n          icon={null}\r\n          value={breakpoints}\r\n          useDelete\r\n          useEdit={false}\r\n          editor={(v) => <BreakpointEditor value={v} properties={properties} />}\r\n          create={() => ({\r\n            active: true,\r\n            property: properties?.[0],\r\n            condition: comparators?.[0],\r\n            type: undefined,\r\n            reference: 0,\r\n          })}\r\n          onChange={debounce((v) => setUIState({ breakpoints: v }), 1000)}\r\n          addItemLabel=\"Breakpoint\"\r\n          placeholderText=\"Click the button below to add a breakpoint.\"\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { debounce } from \"lodash\";\r\nimport AutoSize from \"react-virtualized-auto-sizer\";\r\nimport { useUIState } from \"slices/UIState\";\r\n\r\nconst DELAY = 2500;\r\n\r\nexport function ScriptEditor() {\r\n  const [{ code }, setUIState] = useUIState();\r\n  return (\r\n    <Flex height=\"70vh\" overflow=\"hidden\">\r\n      <AutoSize>\r\n        {({ width, height }) => (\r\n          <Editor\r\n            width={width}\r\n            loading={<CircularProgress variant=\"indeterminate\" />}\r\n            height={height}\r\n            language=\"javascript\"\r\n            defaultValue={code}\r\n            onChange={debounce((v) => setUIState({ code: v }), DELAY)}\r\n            options={{\r\n              minimap: {\r\n                enabled: false,\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n      </AutoSize>\r\n    </Flex>\r\n  );\r\n}\r\n","import { Box, Divider, Tab, Typography as Type } from \"@material-ui/core\";\r\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { Space } from \"components/generic/Space\";\r\nimport { Switch } from \"components/generic/Switch\";\r\nimport { ReactNode, useState } from \"react\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { BreakpointListEditor } from \"./breakpoint-editor/BreakpointListEditor\";\r\nimport { ScriptEditor } from \"./script-editor/ScriptEditor\";\r\n\r\nexport function DebugOptionsEditor() {\r\n  const [{ monotonicF, monotonicG }, setUIState] = useUIState();\r\n  const [tab, setTab] = useState(\"standard\");\r\n  function renderHeading(label: ReactNode) {\r\n    return (\r\n      <Type variant=\"overline\" color=\"textSecondary\">\r\n        {label}\r\n      </Type>\r\n    );\r\n  }\r\n  return (\r\n    <TabContext value={tab}>\r\n      <TabList onChange={(_, v) => setTab(v)}>\r\n        <Tab label=\"Standard\" value=\"standard\" />\r\n        <Tab label=\"Advanced\" value=\"advanced\" />\r\n      </TabList>\r\n      <Divider />\r\n      <TabPanel value=\"standard\">\r\n        <Box>\r\n          {renderHeading(\"General\")}\r\n          <Flex>\r\n            <Switch\r\n              label=\"Monotonic f value\"\r\n              checked={!!monotonicF}\r\n              onChange={(_, v) => setUIState({ monotonicF: v })}\r\n            />\r\n            <Space />\r\n            <Switch\r\n              label=\"Monotonic g value\"\r\n              checked={!!monotonicG}\r\n              onChange={(_, v) => setUIState({ monotonicG: v })}\r\n            />\r\n          </Flex>\r\n        </Box>\r\n        <Space />\r\n        <Box>\r\n          {renderHeading(\"Breakpoints\")}\r\n          <BreakpointListEditor />\r\n        </Box>\r\n      </TabPanel>\r\n      <TabPanel value=\"advanced\" sx={{ p: 0 }}>\r\n        <ScriptEditor />\r\n      </TabPanel>\r\n    </TabContext>\r\n  );\r\n}\r\n","import { Button, Tooltip } from \"@material-ui/core\";\r\nimport { BugReportTwoTone as BugIcon } from \"@material-ui/icons\";\r\nimport { DebugOptionsEditor } from \"components/DebugOptionsEditor\";\r\nimport {\r\n  AppBarTitle as Title,\r\n  ManagedModal as Dialog,\r\n} from \"components/generic/Modal\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\n\r\nexport function Utility() {\r\n  const [{ specimen }] = useSpecimen();\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        trigger={(onClick) => (\r\n          <Tooltip title=\"Debug Options\">\r\n            <Button\r\n              {...{ onClick }}\r\n              disabled={!specimen}\r\n              startIcon={<BugIcon />}\r\n            >\r\n              Debug\r\n            </Button>\r\n          </Tooltip>\r\n        )}\r\n        options={{ width: 960, scrollable: false }}\r\n        appBar={{ children: <Title>Debug Options</Title> }}\r\n      >\r\n        <DebugOptionsEditor />\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import { AppBar, Box, Divider, Toolbar } from \"@material-ui/core\";\r\nimport { Input } from \"./Input\";\r\nimport { Playback } from \"./Playback\";\r\nimport { Settings } from \"./Settings\";\r\nimport { Utility } from \"./Utility\";\r\n\r\nconst divider = <Divider orientation=\"vertical\" flexItem sx={{ m: 1 }} />;\r\n\r\nexport function Controls() {\r\n  return (\r\n    <AppBar\r\n      position=\"static\"\r\n      sx={{ bgcolor: \"background.paper\" }}\r\n      elevation={0}\r\n    >\r\n      <Toolbar>\r\n        <Box m={-1} display=\"flex\" alignItems=\"center\">\r\n          <Input />\r\n          {divider}\r\n          <Playback />\r\n          {divider}\r\n          <Utility />\r\n          {divider}\r\n          <Settings />\r\n        </Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import { BlurOffOutlined as DisabledIcon } from \"@material-ui/icons\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { RendererProps } from \"components/specimen-renderer/Renderer\";\r\n\r\nexport function DefaultRenderer({ width, height }: RendererProps) {\r\n  return (\r\n    <Flex\r\n      {...{ width, height }}\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      color=\"text.secondary\"\r\n      vertical\r\n    >\r\n      <DisabledIcon sx={{ mb: 2 }} fontSize=\"large\" />\r\n      No renderer is installed for the current map style.\r\n    </Flex>\r\n  );\r\n}\r\n","export const getDefaults = () => ({\r\n  start: 0,\r\n  end: 0,\r\n});\r\n","import { Point } from \"components/specimen-renderer/Renderer\";\r\nimport { filter, flatMap as flat, last, map, split } from \"lodash\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\n\r\nexport function parseMap(m: string = \"\", wall: string = \"@\") {\r\n  const [, h, w] = split(m, \"\\n\");\r\n  const [width, height] = map([w, h], (d) => +last(split(d, \" \"))!);\r\n  const grid = split(m, \"\\n\").slice(4);\r\n  return [\r\n    { x: width, y: height },\r\n    filter(\r\n      flat(grid, (row, y) =>\r\n        map(row, (tile, x) =>\r\n          tile === wall ? { variables: { x, y } } : undefined\r\n        )\r\n      )\r\n    ) as TraceEvent[],\r\n    ({ x, y }: Point) => grid[y]?.[x] !== wall,\r\n  ] as const;\r\n}\r\n","import { find, floor, range } from \"lodash\";\r\nimport { parseMap } from \"./parseMap\";\r\n\r\nexport function getDefaults(m: string = \"\", wall: string = \"@\") {\r\n  const [{ x: w, y: h }, , valid] = parseMap(m, wall);\r\n  const node =\r\n    find(range(w * h), (i) => valid({ x: i % w, y: floor(i / w) })) ?? 0;\r\n  return {\r\n    start: node,\r\n    end: node,\r\n  };\r\n}\r\n","import memo from \"memoizee\";\r\nimport { FunctionTemplate } from \"./FunctionTemplate\";\r\nimport { templates } from \"./templates\";\r\n\r\ntype TemplateMap = typeof templates;\r\n\r\ntype Key = keyof TemplateMap;\r\n\r\ntype ReturnTypeOf<T extends Key> = TemplateMap[T] extends FunctionTemplate<\r\n  [...any],\r\n  infer R\r\n>\r\n  ? R\r\n  : never;\r\n\r\ntype ParamsOf<T extends Key> = TemplateMap[T] extends FunctionTemplate<\r\n  infer R,\r\n  any\r\n>\r\n  ? R\r\n  : [];\r\n\r\nconst fn = memo(\r\n  (script: string, method: string) =>\r\n    // eslint-disable-next-line no-new-func\r\n    new Function(\r\n      \"params\",\r\n      `${script}; return ${method}.apply(null, params);`\r\n    ) as (params: any[]) => any\r\n);\r\n\r\nexport function call<T extends Key>(\r\n  script: string,\r\n  method: T,\r\n  params: ParamsOf<T>\r\n): ReturnTypeOf<T> {\r\n  try {\r\n    return fn(script, method)(params);\r\n  } catch {\r\n    return templates[method].defaultReturnValue as ReturnTypeOf<T>;\r\n  }\r\n}\r\n","import {\r\n  blueGrey,\r\n  deepOrange,\r\n  orange,\r\n  pink,\r\n  teal,\r\n  yellow,\r\n} from \"@material-ui/core/colors\";\r\nimport { mapValues } from \"lodash\";\r\nimport { TraceEventType } from \"protocol/Trace\";\r\n\r\nconst tint = \"500\";\r\n\r\nexport function hex(h: string) {\r\n  return parseInt(h.replace(\"#\", \"0x\"));\r\n}\r\n\r\nexport const colorsHex = {\r\n  source: teal[\"A400\"],\r\n  destination: pink[\"A400\"],\r\n  expanding: deepOrange[tint],\r\n  generating: yellow[tint],\r\n  closing: blueGrey[\"200\"],\r\n  end: pink[\"A400\"],\r\n};\r\n\r\nexport const colors: { [K in TraceEventType]: number } = mapValues(\r\n  colorsHex,\r\n  hex\r\n);\r\n\r\nexport function getColor(key?: TraceEventType) {\r\n  return (key && colors[key]) || hex(orange[tint]);\r\n}\r\n\r\nexport function getColorHex(key?: TraceEventType) {\r\n  return (key && colorsHex[key]) ?? orange[tint];\r\n}\r\n","export const scale = 10 * devicePixelRatio;\r\nexport const size = 1200;\r\n","import { Graphics } from \"@inlet/react-pixi\";\r\nimport { ComponentProps } from \"react\";\r\nimport { Graphics as PIXIGraphics } from \"@pixi/graphics\";\r\n\r\nexport function makeGraphic<T = any>(\r\n  draw: (g: PIXIGraphics, props: ComponentProps<typeof Graphics> & T) => void\r\n) {\r\n  return (props: ComponentProps<typeof Graphics> & T) => {\r\n    return <Graphics {...props} draw={(g) => draw(g, props)} />;\r\n  };\r\n}\r\n","import { ceil, forEach, range } from \"lodash\";\r\nimport { makeGraphic } from \"./makeGraphic\";\r\nimport { scale } from \"./config\";\r\nimport { ComponentProps } from \"react\";\r\n\r\nconst WEIGHT = 1;\r\n\r\nconst Grid = makeGraphic<{ alpha?: number; grid?: number }>(\r\n  (g, { width = 0, height = 0, alpha = 1, grid = 5 }) => {\r\n    g.clear();\r\n    g.lineStyle(WEIGHT, 0x000000, alpha);\r\n    forEach(range(scale * grid, height, scale * grid), (i) =>\r\n      g.moveTo(0, i + WEIGHT / 2).lineTo(width, i + WEIGHT / 2)\r\n    );\r\n    forEach(range(scale * grid, width, scale * grid), (i) =>\r\n      g.moveTo(i + WEIGHT / 2, 0).lineTo(i + WEIGHT / 2, height)\r\n    );\r\n  }\r\n);\r\n\r\ntype Props = ComponentProps<typeof Grid>;\r\n\r\nexport function Guides({\r\n  width = 0,\r\n  height = 0,\r\n  x = 0,\r\n  y = 0,\r\n  grid = 5,\r\n  ...params\r\n}: Props) {\r\n  return (\r\n    <Grid\r\n      width={ceil((width + 2) / grid) * grid * scale}\r\n      height={ceil((height + 2) / grid) * grid * scale}\r\n      grid={grid}\r\n      {...params}\r\n    />\r\n  );\r\n}\r\n","import { makeGraphic } from \"./makeGraphic\";\r\nimport { scale } from \"./config\";\r\nimport { Graphics } from \"@pixi/graphics\";\r\nimport { map } from \"lodash\";\r\n\r\nexport type NodeProps = {\r\n  color?: number;\r\n  left?: number;\r\n  top?: number;\r\n  radius?: number;\r\n  resolution?: number;\r\n};\r\n\r\nexport const node = (\r\n  g: Graphics,\r\n  { color, left = 0, top = 0, radius = 0.25, resolution: r = 1 }: NodeProps\r\n) =>\r\n  g\r\n    .beginFill(color ?? 0x000000)\r\n    .drawCircle(\r\n      r * (1.5 * scale + left),\r\n      r * (1.5 * scale + top),\r\n      r * radius * scale\r\n    )\r\n    .endFill();\r\n\r\nexport const square = (\r\n  g: Graphics,\r\n  { color, left = 0, top = 0, radius = 0.5, resolution: r = 1 }: NodeProps\r\n) =>\r\n  g\r\n    .beginFill(color ?? 0x000000)\r\n    .drawRect(\r\n      r * (scale + (radius * scale) / 2 + left),\r\n      r * (scale + (radius * scale) / 2 + top),\r\n      r * (radius * scale),\r\n      r * (radius * scale)\r\n    )\r\n    .endFill();\r\n\r\nexport const box = (\r\n  g: Graphics,\r\n  { color, left = 0, top = 0, resolution: r = 1 }: NodeProps\r\n) =>\r\n  g\r\n    .beginFill(color ?? 0x000000)\r\n    .drawRect(\r\n      r * (scale + left),\r\n      r * (scale + top),\r\n      r * (1 * scale),\r\n      r * (1 * scale)\r\n    )\r\n    .endFill();\r\n\r\nexport const [Node, Box, Square] = map([node, box, square], (f) =>\r\n  makeGraphic<NodeProps>((g, p) => {\r\n    g.clear();\r\n    f(g, p);\r\n  })\r\n);\r\n","import { Graphics } from \"@inlet/react-pixi\";\r\nimport { chain, constant, floor, memoize, slice } from \"lodash\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport { Trace, TraceEventType } from \"protocol/Trace\";\r\nimport { useCallback, useMemo } from \"react\";\r\nimport { scale } from \"./config\";\r\nimport { box, NodeProps } from \"./Node\";\r\n\r\ntype Props = {\r\n  nodes: Trace[\"eventList\"];\r\n  color?: (type?: TraceEventType) => number;\r\n  variant?: (g: PIXI.Graphics, options: NodeProps) => PIXI.Graphics;\r\n  resolution?: number;\r\n  condition?: (step: number) => boolean;\r\n};\r\n\r\nconst defaultCondition = constant(true);\r\n\r\nexport function NodeList({\r\n  nodes,\r\n  color,\r\n  variant = box,\r\n  resolution = 1 / scale,\r\n  condition = defaultCondition,\r\n}: Props) {\r\n  const memo = useMemo(\r\n    () =>\r\n      chain(nodes)\r\n        .filter((_, i) => condition(i))\r\n        .keyBy(({ variables: v }) => `${v?.x ?? 0}::${v?.y ?? 0}`)\r\n        .values()\r\n        .value(),\r\n    [nodes, condition]\r\n  );\r\n  const draw = useCallback(\r\n    (g: PIXI.Graphics) => {\r\n      g.clear();\r\n      for (const { variables: v, type } of memo) {\r\n        variant(g, {\r\n          color: color?.(type) ?? 0xf1f1f1,\r\n          left: (v?.x ?? 0) * scale,\r\n          top: (v?.y ?? 0) * scale,\r\n          radius: 0.25,\r\n          resolution,\r\n        });\r\n      }\r\n      return g;\r\n    },\r\n    [memo, color, resolution, variant]\r\n  );\r\n  return <Graphics draw={draw} scale={1 / resolution} />;\r\n}\r\n\r\nconst down = (n: number, a: number = 1) => floor(n / a) * a;\r\n\r\nexport function LazyNodeList({\r\n  nodes,\r\n  step = 0,\r\n  size = 2500,\r\n  condition,\r\n  ...props\r\n}: {\r\n  step?: number;\r\n  size?: number;\r\n} & Props) {\r\n  const threshold = down(step, size);\r\n\r\n  const chunk = useMemo(\r\n    () => memoize((n: number) => slice(nodes, 0, n)),\r\n    [nodes]\r\n  );\r\n\r\n  const c = useCallback(\r\n    (n: number) => condition?.(n + threshold) ?? true,\r\n    [condition, threshold]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <NodeList {...props} nodes={chunk(threshold)} condition={condition} />\r\n      <NodeList\r\n        {...props}\r\n        nodes={slice(nodes, threshold, step + 1)}\r\n        condition={c}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { Point } from \"components/specimen-renderer/Renderer\";\r\nimport { floor, map } from \"lodash\";\r\nimport { getColor } from \"../colors\";\r\nimport { scale } from \"./config\";\r\nimport { Square } from \"./Node\";\r\n\r\ntype OverlayProps = {\r\n  start?: number;\r\n  end?: number;\r\n  size?: Point;\r\n};\r\nexport function Overlay({\r\n  start = 0,\r\n  end = 0,\r\n  size = { x: 0, y: 0 },\r\n}: OverlayProps) {\r\n  return (\r\n    <>\r\n      {map(\r\n        [\r\n          { color: getColor(\"destination\"), node: end },\r\n          { color: getColor(\"source\"), node: start },\r\n        ],\r\n        ({ color, node }, i) => (\r\n          <Square\r\n            key={i}\r\n            x={scale * (node % size.x)}\r\n            y={scale * floor(node / size.x)}\r\n            color={color}\r\n          />\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { Graphics } from \"@inlet/react-pixi\";\r\nimport { Graphics as PixiGraphics } from \"@pixi/graphics\";\r\nimport { isNull, isUndefined, keyBy } from \"lodash\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\nimport { useMemo } from \"react\";\r\nimport { getColor } from \"../colors\";\r\nimport { scale } from \"./config\";\r\nimport { Square } from \"./Node\";\r\n\r\nfunction defined<T>(obj: T): obj is Exclude<T, undefined | null> {\r\n  return !isUndefined(obj) && !isNull(obj);\r\n}\r\n\r\ntype PathProps = {\r\n  nodes?: TraceEvent[];\r\n  step?: number;\r\n};\r\n\r\nexport function Path({ nodes = [], step = 0 }: PathProps) {\r\n  const path = useMemo(() => {\r\n    const memo = keyBy(nodes, \"id\");\r\n    return (s: number) => {\r\n      const out = [];\r\n      let next: TraceEvent | undefined = nodes[s];\r\n      while (next) {\r\n        out.push(next);\r\n        next = defined(next.pId) ? memo[`${next.pId}`] : undefined;\r\n      }\r\n      return out;\r\n    };\r\n  }, [nodes]);\r\n\r\n  const draw = useMemo(() => {\r\n    const p = path(step);\r\n    return (g: PixiGraphics) => {\r\n      g.clear();\r\n      for (const [i, node] of p.entries()) {\r\n        const { x = 0, y = 0 } = node?.variables ?? {};\r\n        g.lineTo((x + 1.5) * scale, (y + 1.5) * scale);\r\n        if (!i) g.lineStyle(3, getColor(\"source\"));\r\n      }\r\n    };\r\n  }, [path, step]);\r\n\r\n  return (\r\n    <>\r\n      <Graphics draw={draw} />\r\n      <Square\r\n        x={scale * (nodes?.[step]?.variables?.x ?? 0)}\r\n        y={scale * (nodes?.[step]?.variables?.y ?? 0)}\r\n        color={getColor(\"source\")}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { find } from \"lodash\";\r\nimport { Viewport as PixiViewportBase } from \"pixi-viewport\";\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport type ViewportEvent = {\r\n  global: PIXI.Point;\r\n  world: PIXI.Point;\r\n  event: PointerEvent;\r\n};\r\n\r\nexport type ViewportEventHandler = (e: ViewportEvent) => void;\r\n\r\nexport type PointerEvent = \"onMouseOver\" | \"onClick\" | \"onMouseDown\";\r\n\r\nexport type PropEventPair = {\r\n  prop: PointerEvent;\r\n  event: string;\r\n  filter?: boolean;\r\n};\r\n\r\nexport const events = [\r\n  { prop: \"onMouseOver\", event: \"mousemove\" },\r\n  { prop: \"onClick\", event: \"click\", filter: true },\r\n  { prop: \"onClick\", event: \"tap\", filter: true },\r\n  { prop: \"onMouseDown\", event: \"pointerdown\", filter: true },\r\n] as PropEventPair[];\r\n\r\nexport class PixiViewport extends PixiViewportBase {\r\n  events: {\r\n    [K in string]?: () => void;\r\n  } = {};\r\n  register(prop: PointerEvent, handler?: ViewportEventHandler) {\r\n    const { event, filter } = find(events, (c) => c.prop === prop)!;\r\n    this.events?.[event]?.();\r\n    if (handler) {\r\n      const f = (e: PIXI.InteractionEvent) => {\r\n        const { global } = e.data;\r\n        if (!filter || this.input.clickedAvailable) {\r\n          handler?.({\r\n            global,\r\n            world: this.toWorld(global),\r\n            event: prop,\r\n          });\r\n        }\r\n      };\r\n      this.on(event, f);\r\n      this.events[event] = () => this.off(event, f);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Adapted from https://codesandbox.io/s/react-pixi-viewport-9ngfd\r\n * @author roxgarage\r\n */\r\n\r\nimport { PixiComponent, useApp } from \"@inlet/react-pixi\";\r\nimport { map } from \"lodash\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport React from \"react\";\r\nimport {\r\n  PointerEvent,\r\n  PixiViewport,\r\n  events,\r\n  ViewportEventHandler,\r\n} from \"./PixiViewport\";\r\n\r\nexport type ViewportProps = {\r\n  width?: number;\r\n  height?: number;\r\n  children?: React.ReactNode;\r\n  event?: PIXI.InteractionEvent;\r\n} & { [K in PointerEvent]?: ViewportEventHandler };\r\n\r\nexport type Props = {\r\n  app: PIXI.Application;\r\n} & ViewportProps;\r\n\r\nfunction create(props: Props) {\r\n  const viewport = new PixiViewport({\r\n    interaction: props.app.renderer.plugins.interaction,\r\n    ticker: props.app.ticker,\r\n    stopPropagation: true,\r\n    passiveWheel: false,\r\n  })\r\n    .drag()\r\n    .pinch()\r\n    .wheel()\r\n    .decelerate({ friction: 0.98 })\r\n    .clampZoom({ maxScale: 10, minScale: 0.02 });\r\n  return viewport as PixiViewport;\r\n}\r\n\r\nfunction applyProps(\r\n  v: PixiViewport,\r\n  prev: Props,\r\n  { width, height, ...next }: Props\r\n) {\r\n  for (const { equal, apply } of [\r\n    ...map(events, ({ prop }) => ({\r\n      equal: prev[prop] === next[prop],\r\n      apply: () => v.register(prop, next[prop]),\r\n    })),\r\n    {\r\n      prop: prev.width === width && prev.height === height,\r\n      apply: () => v.resize(width, height, (width ?? 0) * 2, (height ?? 0) * 2),\r\n    },\r\n  ]) {\r\n    !equal && apply();\r\n  }\r\n}\r\n\r\nconst Component = PixiComponent<Props, PixiViewport>(\"Viewport\", {\r\n  create: (props) => {\r\n    const viewport = create(props);\r\n    applyProps(viewport, props, props);\r\n    return viewport;\r\n  },\r\n  applyProps,\r\n});\r\n\r\nexport const Viewport = (props: ViewportProps) => {\r\n  const app = useApp();\r\n  return <Component app={app} {...props} />;\r\n};\r\n","import { Stage } from \"@inlet/react-pixi\";\nimport { Box } from \"@material-ui/core\";\nimport { ComponentProps, forwardRef, ReactNode } from \"react\";\nimport { RendererProps } from \"../Renderer\";\nimport { Viewport } from \"../raster-renderer/Viewport\";\n\ntype RasterRendererProps = RendererProps & {\n  children?: ReactNode;\n  StageProps?: ComponentProps<typeof Stage>;\n  ViewportProps?: ComponentProps<typeof Viewport>;\n};\n\nexport const RasterRenderer = forwardRef<unknown, RasterRendererProps>(\n  ({ children, width, height, ViewportProps, StageProps }, ref) => (\n    <Box sx={{ cursor: \"pointer\" }} ref={ref}>\n      <Stage options={{ backgroundColor: 0xffffff }} {...StageProps}>\n        <Viewport width={width} height={height} {...ViewportProps}>\n          {children}\n        </Viewport>\n      </Stage>\n    </Box>\n  )\n);\n","import { map } from \"lodash\";\r\nimport { Point } from \"components/specimen-renderer/Renderer\";\r\nimport { scale } from \"../raster-renderer/config\";\r\nimport { useTween } from \"react-use\";\r\nimport { ComponentProps as PropsOf } from \"react\";\r\nimport { Node } from \"../raster-renderer/Node\";\r\n\r\ntype SelectedProps = {\r\n  animateScale?: boolean;\r\n  animateAlpha?: boolean;\r\n} & PropsOf<typeof Node>;\r\n\r\ntype Props = {\r\n  hover?: Point;\r\n  highlight?: Point;\r\n};\r\n\r\nexport function Selected({\r\n  x = 0,\r\n  y = 0,\r\n  alpha = 0,\r\n  animateScale,\r\n  animateAlpha,\r\n  ...props\r\n}: SelectedProps) {\r\n  const t = useTween(\"outCirc\", 300);\r\n  return (\r\n    <Node\r\n      {...props}\r\n      scale={animateScale ? t : 1}\r\n      x={x + (animateScale ? 1.5 * scale - 1.5 * scale * t : 0)}\r\n      y={y + (animateScale ? 1.5 * scale - 1.5 * scale * t : 0)}\r\n      radius={1}\r\n      alpha={(animateAlpha ? t : 1) * alpha}\r\n    />\r\n  );\r\n}\r\n\r\nexport function Selection({ hover, highlight }: Props) {\r\n  return (\r\n    <>\r\n      {map(\r\n        [\r\n          { point: hover, alpha: 0.08, animateAlpha: true },\r\n          { point: highlight, alpha: 0.08, animateScale: true },\r\n        ],\r\n        ({ point, ...props }, i) =>\r\n          point && (\r\n            <Selected\r\n              key={`${i}::${point.x}::${point.y}`}\r\n              x={point.x * scale}\r\n              y={point.y * scale}\r\n              color={0x000000}\r\n              {...props}\r\n            />\r\n          )\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { Point, SelectionInfo } from \"components/specimen-renderer/Renderer\";\r\nimport { findIndex, findLastIndex, take } from \"lodash\";\r\nimport { Trace } from \"protocol/Trace\";\r\nimport { parseMap } from \"./parseMap\";\r\n\r\nfunction between(v: number, min: number, max: number) {\r\n  return v >= min && v < max;\r\n}\r\n\r\nexport function selectionInfo(map: string = \"\", specimen: Trace = {}) {\r\n  const [{ x: w, y: h }, , valid] = parseMap(map);\r\n  return ({ x, y }: Point, step: number = 0) => {\r\n    const nodes = take(specimen?.eventList, step);\r\n    const node = findLastIndex(\r\n      nodes,\r\n      ({ variables: v }) => (v?.x ?? 0) === x && (v?.y ?? 0) === y\r\n    );\r\n    const entry = findIndex(\r\n      specimen?.eventList,\r\n      ({ variables: v, type }) =>\r\n        type === \"expanding\" && (v?.x ?? 0) === x && (v?.y ?? 0) === y\r\n    );\r\n    return {\r\n      current: node !== -1 ? { index: node, event: nodes[node] } : undefined,\r\n      entry: entry !== -1 ? { index: entry, event: nodes[entry] } : undefined,\r\n      node:\r\n        between(x, 0, w) && between(y, 0, h) && valid({ x, y })\r\n          ? { key: y * w + x }\r\n          : undefined,\r\n    } as SelectionInfo;\r\n  };\r\n}\r\n","import { Stage } from \"@inlet/react-pixi\";\r\nimport { blueGrey } from \"@material-ui/core/colors\";\r\nimport { call } from \"components/script-editor/call\";\r\nimport { Point, RendererProps } from \"components/specimen-renderer/Renderer\";\r\nimport { constant, delay, floor, memoize, merge, once } from \"lodash\";\r\nimport { ComponentProps, useMemo, useState } from \"react\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { getColor, hex } from \"../colors\";\r\nimport { scale } from \"../raster-renderer/config\";\r\nimport { Guides } from \"../raster-renderer/Guides\";\r\nimport {\r\n  LazyNodeList as LazyNodes,\r\n  NodeList as Nodes,\r\n} from \"../raster-renderer/NodeList\";\r\nimport { Overlay } from \"../raster-renderer/Overlay\";\r\nimport { Path } from \"../raster-renderer/Path\";\r\nimport { ViewportEvent } from \"../raster-renderer/PixiViewport\";\r\nimport { RasterRenderer } from \"../raster-renderer/RasterRenderer\";\r\nimport { getDefaults } from \"./getDefaults\";\r\nimport { parseMap } from \"./parseMap\";\r\nimport { Selection } from \"./Selection\";\r\nimport { selectionInfo } from \"./selectionInfo\";\r\n\r\ntype GridRendererProps = RendererProps &\r\n  Omit<ComponentProps<typeof Stage>, \"onSelect\">;\r\n\r\nfunction getPoint({ x, y }: Point) {\r\n  return { x: floor(x / scale) - 1, y: floor(y / scale) - 1 };\r\n}\r\n\r\nexport function GridRenderer({\r\n  onSelect,\r\n  selection,\r\n  ...props\r\n}: GridRendererProps) {\r\n  const [ref, setRef] = useState<HTMLDivElement | null>(null);\r\n  const [{ specimen, map: m }] = useSpecimen();\r\n  const [{ step = 0, code, ...state }] = useUIState();\r\n\r\n  const [active, setActive] = useState<Point | undefined>(undefined);\r\n  const [hover, setHover] = useState<Point | undefined>(undefined);\r\n\r\n  const [[size, bgNodes], bgNodeColor, { start, end }] = useMemo(\r\n    () =>\r\n      [\r\n        parseMap(m),\r\n        once(() => hex(blueGrey[\"500\"])),\r\n        merge(getDefaults(m), { start: state.start, end: state.end }),\r\n      ] as const,\r\n    [m, state.start, state.end]\r\n  );\r\n\r\n  const handleClick = useMemo(() => {\r\n    const info = selectionInfo(m, specimen);\r\n    return (step: number = 0) =>\r\n      ({ global, world }: ViewportEvent) => {\r\n        if (ref && specimen) {\r\n          const { top, left } = ref.getBoundingClientRect();\r\n          const point = getPoint(world);\r\n          onSelect?.({\r\n            global: { x: left + global.x, y: top + global.y },\r\n            world: point,\r\n            info: info(point, step),\r\n          });\r\n        }\r\n      };\r\n  }, [ref, onSelect, specimen, m]);\r\n\r\n  const handleMouseEvent = useMemo(() => {\r\n    let timeout = 0;\r\n    return ({ world, event }: ViewportEvent) => {\r\n      switch (event) {\r\n        case \"onMouseOver\":\r\n          setHover(getPoint(world));\r\n          setActive(undefined);\r\n          clearTimeout(timeout);\r\n          break;\r\n        case \"onMouseDown\":\r\n          timeout = delay(() => setActive(getPoint(world)), 100);\r\n          break;\r\n      }\r\n    };\r\n  }, [setHover]);\r\n\r\n  const condition = useMemo(() => {\r\n    if (code && specimen?.eventList) {\r\n      return memoize((n: number) =>\r\n        code && specimen?.eventList\r\n          ? call(code ?? \"\", \"shouldRender\", [\r\n              n,\r\n              specimen.eventList[n],\r\n              specimen.eventList,\r\n            ])\r\n          : true\r\n      );\r\n    } else return constant(true);\r\n  }, [code, specimen?.eventList]);\r\n\r\n  return (\r\n    <RasterRenderer\r\n      ref={setRef}\r\n      StageProps={props}\r\n      ViewportProps={{\r\n        onClick: handleClick(step),\r\n        onMouseDown: handleMouseEvent,\r\n        onMouseOver: handleMouseEvent,\r\n      }}\r\n    >\r\n      <Nodes nodes={specimen?.eventList} />\r\n      <Nodes nodes={bgNodes} color={bgNodeColor} />\r\n      <LazyNodes\r\n        nodes={specimen?.eventList}\r\n        step={step}\r\n        color={getColor}\r\n        condition={condition}\r\n      />\r\n      <Overlay start={start} end={end} size={size} />\r\n      <Path nodes={specimen?.eventList} step={step} />\r\n      <Selection hover={hover} highlight={selection || active} />\r\n      <Guides width={size.x} height={size.y} alpha={0.24} grid={1} />\r\n    </RasterRenderer>\r\n  );\r\n}\r\n","import { Point } from \"components/specimen-renderer/Renderer\";\r\nimport { filter, flatMap as flat, last, map, split } from \"lodash\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\n\r\nexport function parseMap(m: string = \"\", wall: string = \"@\") {\r\n  const [, h, w] = split(m, \"\\n\");\r\n  const [width, height] = map([w, h], (d) => +last(split(d, \" \"))!);\r\n  const grid = split(m, \"\\n\").slice(4);\r\n  return [\r\n    { x: width, y: height },\r\n    filter(\r\n      flat(grid, (row, y) =>\r\n        map(row, (tile, x) =>\r\n          tile === wall ? { variables: { x, y } } : undefined\r\n        )\r\n      )\r\n    ) as TraceEvent[],\r\n    ({ x, y }: Point) => grid[y]?.[x] !== wall,\r\n  ] as const;\r\n}\r\n","import { find, floor, range } from \"lodash\";\r\nimport { parseMap } from \"./parseMap\";\r\n\r\nexport function getDefaults(m: string = \"\", wall: string = \"@\") {\r\n  const [{ x: w, y: h }, , valid] = parseMap(m, wall);\r\n  const node =\r\n    find(range(w * h), (i) => valid({ x: i % w, y: floor(i / w) })) ?? 0;\r\n  return {\r\n    start: node,\r\n    end: node,\r\n  };\r\n}\r\n","import { map } from \"lodash\";\r\nimport { Point } from \"components/specimen-renderer/Renderer\";\r\nimport { scale } from \"../raster-renderer/config\";\r\nimport { useTween } from \"react-use\";\r\nimport { ComponentProps as PropsOf } from \"react\";\r\nimport { Node } from \"../raster-renderer/Node\";\r\n\r\ntype SelectedProps = {\r\n  animateScale?: boolean;\r\n  animateAlpha?: boolean;\r\n} & PropsOf<typeof Node>;\r\n\r\ntype Props = {\r\n  hover?: Point;\r\n  highlight?: Point;\r\n};\r\n\r\nexport function Selected({\r\n  x = 0,\r\n  y = 0,\r\n  animateScale,\r\n  animateAlpha,\r\n  ...props\r\n}: SelectedProps) {\r\n  const t = useTween(\"outCirc\", 300);\r\n  return (\r\n    <Node\r\n      {...props}\r\n      scale={animateScale ? t : 1}\r\n      x={x + (animateScale ? 1.5 * scale - 1.5 * scale * t : 0)}\r\n      y={y + (animateScale ? 1.5 * scale - 1.5 * scale * t : 0)}\r\n      radius={1}\r\n      alpha={animateAlpha ? t : 1}\r\n    />\r\n  );\r\n}\r\n\r\nexport function Selection({ hover, highlight }: Props) {\r\n  return (\r\n    <>\r\n      {map(\r\n        [\r\n          { point: hover, color: 0xf9f9f9, animateAlpha: true },\r\n          { point: highlight, color: 0xf1f1f1, animateScale: true },\r\n        ],\r\n        ({ point, ...props }, i) =>\r\n          point && (\r\n            <Selected\r\n              key={`${i}::${point.x}::${point.y}`}\r\n              x={point.x * scale}\r\n              y={point.y * scale}\r\n              {...props}\r\n            />\r\n          )\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { Point, SelectionInfo } from \"components/specimen-renderer/Renderer\";\r\nimport { findIndex, findLastIndex, take } from \"lodash\";\r\nimport { Trace } from \"protocol/Trace\";\r\nimport { parseMap } from \"./parseMap\";\r\n\r\nfunction between(v: number, min: number, max: number) {\r\n  return v >= min && v < max;\r\n}\r\n\r\nexport function selectionInfo(map: string = \"\", specimen: Trace = {}) {\r\n  const [{ x: w, y: h }, , valid] = parseMap(map);\r\n  return ({ x, y }: Point, step: number = 0) => {\r\n    const nodes = take(specimen?.eventList, step);\r\n    const node = findLastIndex(\r\n      nodes,\r\n      ({ variables: v }) => (v?.x ?? 0) === x && (v?.y ?? 0) === y\r\n    );\r\n    const entry = findIndex(\r\n      specimen?.eventList,\r\n      ({ variables: v, type }) =>\r\n        type === \"expanding\" && (v?.x ?? 0) === x && (v?.y ?? 0) === y\r\n    );\r\n    return {\r\n      current: node !== -1 ? { index: node, event: nodes[node] } : undefined,\r\n      entry: entry !== -1 ? { index: entry, event: nodes[entry] } : undefined,\r\n      node:\r\n        between(x, 0, w) && between(y, 0, h) && valid({ x, y })\r\n          ? { key: y * w + x }\r\n          : undefined,\r\n    } as SelectionInfo;\r\n  };\r\n}\r\n","import { Stage } from \"@inlet/react-pixi\";\r\nimport { blueGrey } from \"@material-ui/core/colors\";\r\nimport { call } from \"components/script-editor/call\";\r\nimport { Point, RendererProps } from \"components/specimen-renderer/Renderer\";\r\nimport { constant, delay, floor, memoize, merge, once } from \"lodash\";\r\nimport { ComponentProps, useMemo, useState } from \"react\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { getColor, hex } from \"../colors\";\r\nimport { scale } from \"../raster-renderer/config\";\r\nimport { Guides } from \"../raster-renderer/Guides\";\r\nimport {\r\n  LazyNodeList as LazyNodes,\r\n  NodeList as Nodes,\r\n} from \"../raster-renderer/NodeList\";\r\nimport { Overlay } from \"../raster-renderer/Overlay\";\r\nimport { Path } from \"../raster-renderer/Path\";\r\nimport { ViewportEvent } from \"../raster-renderer/PixiViewport\";\r\nimport { RasterRenderer } from \"../raster-renderer/RasterRenderer\";\r\nimport { getDefaults } from \"./getDefaults\";\r\nimport { parseMap } from \"./parseMap\";\r\nimport { Selection } from \"./Selection\";\r\nimport { selectionInfo } from \"./selectionInfo\";\r\n\r\ntype NetworkRendererProps = RendererProps &\r\n  Omit<ComponentProps<typeof Stage>, \"onSelect\">;\r\n\r\nfunction getPoint({ x, y }: Point) {\r\n  return { x: floor(x / scale) - 1, y: floor(y / scale) - 1 };\r\n}\r\n\r\nexport function NetworkRenderer({\r\n  onSelect,\r\n  selection,\r\n  ...props\r\n}: NetworkRendererProps) {\r\n  const [ref, setRef] = useState<HTMLDivElement | null>(null);\r\n  const [{ specimen, map: m }] = useSpecimen();\r\n  const [{ step = 0, code, ...state }] = useUIState();\r\n\r\n  const [active, setActive] = useState<Point | undefined>(undefined);\r\n  const [hover, setHover] = useState<Point | undefined>(undefined);\r\n\r\n  const [[size, bgNodes], bgNodeColor, { start, end }] = useMemo(\r\n    () =>\r\n      [\r\n        parseMap(m),\r\n        once(() => hex(blueGrey[\"500\"])),\r\n        merge(getDefaults(m), { start: state.start, end: state.end }),\r\n      ] as const,\r\n    [m, state.start, state.end]\r\n  );\r\n\r\n  const handleClick = useMemo(() => {\r\n    const info = selectionInfo(m, specimen);\r\n    return ({ global, world }: ViewportEvent, step: number = 0) => {\r\n      if (ref && specimen) {\r\n        const { top, left } = ref.getBoundingClientRect();\r\n        const point = getPoint(world);\r\n        onSelect?.({\r\n          global: { x: left + global.x, y: top + global.y },\r\n          world: point,\r\n          info: info(point),\r\n        });\r\n      }\r\n    };\r\n  }, [ref, onSelect, specimen, m]);\r\n\r\n  const handleMouseEvent = useMemo(() => {\r\n    let timeout = 0;\r\n    return ({ world, event }: ViewportEvent) => {\r\n      switch (event) {\r\n        case \"onMouseOver\":\r\n          setHover(getPoint(world));\r\n          setActive(undefined);\r\n          clearTimeout(timeout);\r\n          break;\r\n        case \"onMouseDown\":\r\n          timeout = delay(() => setActive(getPoint(world)), 100);\r\n          break;\r\n      }\r\n    };\r\n  }, [setHover]);\r\n\r\n  const condition = useMemo(() => {\r\n    if (code && specimen?.eventList) {\r\n      return memoize((n: number) =>\r\n        code && specimen?.eventList\r\n          ? call(code ?? \"\", \"shouldRender\", [\r\n              n,\r\n              specimen.eventList[n],\r\n              specimen.eventList,\r\n            ])\r\n          : true\r\n      );\r\n    } else return constant(true);\r\n  }, [code, specimen?.eventList]);\r\n\r\n  return (\r\n    <RasterRenderer\r\n      ref={setRef}\r\n      StageProps={props}\r\n      ViewportProps={{\r\n        onClick: (e) => handleClick(e, step),\r\n        onMouseDown: handleMouseEvent,\r\n        onMouseOver: handleMouseEvent,\r\n      }}\r\n    >\r\n      <Selection hover={hover} highlight={selection || active} />\r\n      <Nodes nodes={specimen?.eventList} />\r\n      <Nodes nodes={bgNodes} color={bgNodeColor} />\r\n      <LazyNodes\r\n        nodes={specimen?.eventList}\r\n        step={step}\r\n        color={getColor}\r\n        condition={condition}\r\n      />\r\n      <Overlay start={start} end={end} size={size} />\r\n      <Path nodes={specimen?.eventList} step={step} />\r\n      <Guides width={size.x} height={size.y} alpha={0.24} grid={1} />\r\n    </RasterRenderer>\r\n  );\r\n}\r\n","import { get } from \"lodash\";\r\nimport { DefaultRenderer } from \"./default-renderer/DefaultRenderer\";\r\nimport { getDefaults } from \"./default-renderer/getDefaults\";\r\nimport { getDefaults as getGridDefaults } from \"./grid-renderer/getDefaults\";\r\nimport { GridRenderer } from \"./grid-renderer/GridRenderer\";\r\nimport { getDefaults as getNetworkDefaults } from \"./network-renderer/getDefaults\";\r\nimport { NetworkRenderer } from \"./network-renderer/NetworkRenderer\";\r\nimport { RendererEntry, RendererMap } from \"./Renderer\";\r\n\r\nconst renderers: RendererMap = {\r\n  grid: [GridRenderer, getGridDefaults],\r\n  json: [GridRenderer, getGridDefaults],\r\n  xy: [NetworkRenderer, getNetworkDefaults],\r\n};\r\n\r\nexport function getRenderer(key = \"\") {\r\n  return get(renderers, key, [DefaultRenderer, getDefaults] as RendererEntry);\r\n}\r\n","import { Box, BoxProps } from \"@material-ui/core\";\r\nimport { ReactElement } from \"react\";\r\nimport {\r\n  Virtuoso as List,\r\n  VirtuosoHandle as Handle,\r\n  VirtuosoProps as ListProps,\r\n} from \"react-virtuoso\";\r\n\r\nexport type LazyListHandle = Handle;\r\n\r\nexport type LazyListProps<T> = {\r\n  items?: T[];\r\n  renderItem?: (item: T, index: number) => ReactElement;\r\n  listOptions?: Partial<ListProps<T>>;\r\n} & BoxProps;\r\n\r\nexport function LazyList<T>({\r\n  items = [],\r\n  renderItem,\r\n  listOptions: options,\r\n  ...props\r\n}: LazyListProps<T>) {\r\n  return (\r\n    <Box {...props}>\r\n      <List\r\n        totalCount={items.length}\r\n        itemContent={(i) => renderItem?.(items[i], i)}\r\n        {...options}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { HideSourceOutlined as HiddenIcon } from \"@material-ui/icons\";\nimport { Overline, OverlineDot as Dot } from \"components/generic/Overline\";\nimport { getColorHex } from \"components/specimen-renderer/colors\";\nimport { TraceEvent } from \"protocol/Trace\";\n\nexport function EventLabel({\n  event,\n  hidden,\n}: {\n  event?: TraceEvent;\n  hidden?: boolean;\n}) {\n  return (\n    <Overline>\n      <Dot\n        sx={{\n          color: getColorHex(event?.type),\n          mr: 1,\n        }}\n      />\n      {`${event?.type ?? \"unsupported\"} #${event?.id ?? \"-\"}`}{\" \"}\n      {hidden && (\n        <HiddenIcon\n          sx={{\n            opacity: 0.56,\n            fontSize: 12,\n            ml: 1,\n            transform: \"translateY(1.75px)\",\n          }}\n        />\n      )}\n    </Overline>\n  );\n}\n","import { Flex } from \"./Flex\";\r\nimport {\r\n  Typography as Type,\r\n  TypographyProps as TypeProps,\r\n} from \"@material-ui/core\";\r\nimport { Space } from \"./Space\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype Props = {\r\n  label?: ReactNode;\r\n  value?: ReactNode;\r\n  type?: TypeProps;\r\n};\r\n\r\nexport function Property({ label, value, type }: Props) {\r\n  return (\r\n    <Flex width=\"auto\" mr={3} mt={0.5} key={`${label}::${value}`}>\r\n      <Type sx={{ opacity: 0.54 }} {...type}>\r\n        {label}\r\n      </Type>\r\n      <Space />\r\n      <Type {...type}>{value}</Type>\r\n    </Flex>\r\n  );\r\n}\r\n","import { TypographyVariant } from \"@material-ui/core\";\nimport { Flex, FlexProps } from \"components/generic/Flex\";\nimport { Property } from \"components/generic/Property\";\nimport { entries, filter, map } from \"lodash\";\nimport { TraceEvent } from \"protocol/Trace\";\n\nexport function PropertyList({\n  event,\n  variant = \"body2\",\n  ...props\n}: {\n  event?: TraceEvent<string>;\n  variant?: TypographyVariant;\n} & FlexProps) {\n  return (\n    <Flex flexWrap=\"wrap\" {...props}>\n      {map(\n        filter(\n          [\n            [\"f\", event?.f],\n            [\"g\", event?.g],\n            ...entries(event?.variables),\n            [\"pId\", event?.pId],\n          ],\n          ([, v]) => v !== undefined\n        ),\n        ([k, v]) => (\n          <Property label={k} value={v} type={{ variant }} />\n        )\n      )}\n    </Flex>\n  );\n}\n","import {\r\n  Box,\r\n  Card,\r\n  CardActionArea,\r\n  CardProps,\r\n  Divider,\r\n  Typography as Type,\r\n} from \"@material-ui/core\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { call } from \"components/script-editor/call\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { EventLabel } from \"./EventLabel\";\r\nimport { PropertyList } from \"./PropertyList\";\r\n\r\ntype EventInspectorProps = {\r\n  event?: TraceEvent;\r\n  index?: number;\r\n  selected?: boolean;\r\n} & CardProps;\r\n\r\nexport function EventInspector({\r\n  event,\r\n  index,\r\n  selected,\r\n  ...props\r\n}: EventInspectorProps) {\r\n  const [{ specimen }] = useSpecimen();\r\n  const [{ code }, setUIState] = useUIState();\r\n\r\n  const cardStyles = selected\r\n    ? {\r\n        color: \"primary.contrastText\",\r\n        bgcolor: \"primary.main\",\r\n      }\r\n    : {};\r\n\r\n  const hidden = event\r\n    ? !call(code ?? \"\", \"shouldRender\", [\r\n        index ?? 0,\r\n        event,\r\n        specimen?.eventList ?? [],\r\n      ])\r\n    : false;\r\n\r\n  return (\r\n    <Card\r\n      {...props}\r\n      sx={{\r\n        ...cardStyles,\r\n        ...props.sx,\r\n      }}\r\n    >\r\n      <CardActionArea\r\n        sx={{ p: 2, height: \"100%\" }}\r\n        onClick={() => setUIState({ step: index })}\r\n      >\r\n        <Flex alignItems=\"center\">\r\n          <Type>{index}</Type>\r\n          <Divider sx={{ mx: 2 }} flexItem orientation=\"vertical\" />\r\n          <Box>\r\n            <EventLabel event={event} hidden={hidden} />\r\n            <PropertyList event={event} />\r\n          </Box>\r\n        </Flex>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n","import { Fade } from \"@material-ui/core\";\r\nimport { Box } from \"@material-ui/system\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport {\r\n  LazyList as List,\r\n  LazyListHandle as ListHandle,\r\n  LazyListProps as ListProps,\r\n} from \"components/generic/LazyList\";\r\nimport { delay } from \"lodash\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { EventInspector } from \"./EventInspector\";\r\n\r\nexport function EventListInspector(props: ListProps<TraceEvent>) {\r\n  const [{ step = 0, playback }] = useUIState();\r\n  const [{ specimen }] = useSpecimen();\r\n  const ref = useRef<ListHandle | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (playback === \"paused\") {\r\n      delay(\r\n        () =>\r\n          ref?.current?.scrollToIndex?.({\r\n            index: step,\r\n            align: \"start\",\r\n            behavior: \"smooth\",\r\n            offset: -16,\r\n          }),\r\n        150\r\n      );\r\n    }\r\n  }, [step, playback]);\r\n\r\n  return (\r\n    <Fade unmountOnExit mountOnEnter in={playback === \"paused\"}>\r\n      <Box>\r\n        <List\r\n          {...props}\r\n          items={specimen?.eventList}\r\n          listOptions={{ ref }}\r\n          renderItem={(item, i) => (\r\n            <Flex p={2} pt={i ? 0 : 2}>\r\n              <EventInspector\r\n                sx={{ flex: 1 }}\r\n                event={item}\r\n                index={i}\r\n                selected={i === step}\r\n              />\r\n            </Flex>\r\n          )}\r\n        />\r\n      </Box>\r\n    </Fade>\r\n  );\r\n}\r\n","import { Box } from \"@material-ui/core\";\nimport { ReactNode } from \"react\";\nimport { Flex } from \"./Flex\";\nimport { Space } from \"./Space\";\n\ntype LabelProps = {\n  primary?: ReactNode;\n  secondary?: ReactNode;\n};\n\nexport function Label({ primary, secondary }: LabelProps) {\n  return (\n    <Flex>\n      <Box>{primary}</Box>\n      <Space />\n      <Box sx={{ opacity: 0.56 }}>{secondary}</Box>\n    </Flex>\n  );\n}\n","import {\r\n  Box,\r\n  Divider,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  PlaceOutlined as DestinationIcon,\r\n  TripOriginOutlined as StartIcon,\r\n} from \"@material-ui/icons\";\r\nimport { Overline } from \"components/generic/Overline\";\r\nimport { Property } from \"components/generic/Property\";\r\nimport { map } from \"lodash\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { SelectEvent as RendererSelectEvent } from \"components/specimen-renderer/Renderer\";\r\nimport { useSnackbar } from \"components/generic/Snackbar\";\r\nimport { PropertyList } from \"./PropertyList\";\r\nimport { EventLabel } from \"./EventLabel\";\r\nimport { Label } from \"components/generic/Label\";\r\n\r\ntype Props = {\r\n  selection?: RendererSelectEvent;\r\n  onClose?: () => void;\r\n};\r\n\r\nexport function SelectionMenu({ selection, onClose }: Props) {\r\n  const notify = useSnackbar();\r\n  const [, setUIState] = useUIState();\r\n  const { global, world, info } = selection ?? {};\r\n  const { current, entry, node } = info ?? {};\r\n\r\n  return (\r\n    <Menu\r\n      open={!!selection}\r\n      anchorReference=\"anchorPosition\"\r\n      anchorPosition={{\r\n        top: global?.y ?? 0,\r\n        left: global?.x ?? 0,\r\n      }}\r\n      onClose={onClose}\r\n    >\r\n      <ListItem>\r\n        <ListItemText>\r\n          <Box>\r\n            <Overline>Point</Overline>\r\n            <Property label=\"x\" value={world?.x ?? \"-\"} />\r\n            <Property label=\"y\" value={world?.y ?? \"-\"} />\r\n          </Box>\r\n          {current?.event && (\r\n            <Box mt={2}>\r\n              <EventLabel event={current?.event} />\r\n              <PropertyList event={current?.event} variant=\"body1\" vertical />\r\n            </Box>\r\n          )}\r\n        </ListItemText>\r\n      </ListItem>\r\n      <Divider sx={{ my: 1 }} />\r\n      {map(\r\n        [\r\n          {\r\n            label: \"Set Origin\",\r\n            icon: <StartIcon sx={{ transform: \"scale(0.5)\" }} />,\r\n            action: () => {\r\n              notify(\"Origin set.\");\r\n              setUIState({ start: node?.key });\r\n            },\r\n            disabled: !node,\r\n          },\r\n          {\r\n            label: \"Set Destination\",\r\n            icon: <DestinationIcon />,\r\n            action: () => {\r\n              notify(\"Destination set.\");\r\n              setUIState({ end: node?.key });\r\n            },\r\n            disabled: !node,\r\n          },\r\n          {\r\n            label: (\r\n              <Label primary=\"Go to Expansion Step\" secondary={entry?.index} />\r\n            ),\r\n            action: () =>\r\n              setUIState({ step: entry?.index ?? 0, playback: \"paused\" }),\r\n            disabled: !entry,\r\n          },\r\n          {\r\n            label: (\r\n              <Label primary=\"Rewind to This Step\" secondary={current?.index} />\r\n            ),\r\n            action: () =>\r\n              setUIState({ step: current?.index ?? 0, playback: \"paused\" }),\r\n            disabled: !current,\r\n          },\r\n        ],\r\n        ({ label, icon, action, disabled }) => (\r\n          <MenuItem\r\n            disabled={disabled}\r\n            onClick={() => {\r\n              action();\r\n              onClose?.();\r\n            }}\r\n          >\r\n            <ListItemIcon>{icon}</ListItemIcon>\r\n            <ListItemText>{label}</ListItemText>\r\n          </MenuItem>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n}\r\n","import { Fade, LinearProgress } from \"@material-ui/core\";\r\nimport { Flex, FlexProps } from \"components/generic/Flex\";\r\nimport { getRenderer } from \"components/specimen-renderer/getRenderer\";\r\nimport { SelectEvent as RendererSelectEvent } from \"components/specimen-renderer/Renderer\";\r\nimport { some, values } from \"lodash\";\r\nimport { createElement, useState } from \"react\";\r\nimport AutoSize from \"react-virtualized-auto-sizer\";\r\nimport { useLoading } from \"slices/loading\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { EventListInspector } from \"./EventListInspector\";\r\nimport { SelectionMenu } from \"./SelectionMenu\";\r\nimport { BlurOnTwoTone as DisabledIcon } from \"@material-ui/icons\";\r\n\r\ntype SpecimenInspectorProps = {} & FlexProps;\r\n\r\nexport function SpecimenInspector(props: SpecimenInspectorProps) {\r\n  const [loading] = useLoading();\r\n  const [{ specimen, format, map }] = useSpecimen();\r\n  const [renderer] = getRenderer(format);\r\n  const [selection, setSelection] = useState<RendererSelectEvent | undefined>(\r\n    undefined\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Fade in={some(values(loading))}>\r\n        <LinearProgress variant=\"indeterminate\" sx={{ mb: -0.5, zIndex: 1 }} />\r\n      </Fade>\r\n      <Flex {...props}>\r\n        {specimen ? (\r\n          <Flex>\r\n            <AutoSize>\r\n              {(size) =>\r\n                createElement(renderer, {\r\n                  ...size,\r\n                  key: map,\r\n                  onSelect: setSelection,\r\n                  selection: selection?.world,\r\n                })\r\n              }\r\n            </AutoSize>\r\n            <EventListInspector\r\n              position=\"absolute\"\r\n              right={0}\r\n              height=\"100%\"\r\n              width=\"30vw\"\r\n              minWidth={480}\r\n            />\r\n          </Flex>\r\n        ) : (\r\n          <Flex\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            color=\"text.secondary\"\r\n            vertical\r\n          >\r\n            <DisabledIcon sx={{ mb: 2 }} fontSize=\"large\" />\r\n            Select a map to get started.\r\n          </Flex>\r\n        )}\r\n      </Flex>\r\n      <SelectionMenu\r\n        selection={selection}\r\n        onClose={() => setSelection(undefined)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { AppBar, Divider, Toolbar, Typography } from \"@material-ui/core\";\r\n\r\nexport function Title() {\r\n  return (\r\n    <AppBar\r\n      position=\"static\"\r\n      elevation={0}\r\n      sx={{ bgcolor: \"background.paper\", color: \"text.primary\" }}\r\n    >\r\n      <Toolbar>\r\n        <Typography variant=\"h6\">Path Search Visualiser</Typography>\r\n      </Toolbar>\r\n      <Divider />\r\n    </AppBar>\r\n  );\r\n}\r\n","import { Controls } from \"components/app-bar/Controls\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { SpecimenInspector } from \"components/specimen-inspector/SpecimenInspector\";\r\nimport { Title } from \"components/Title\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Flex vertical sx={{ bgcolor: \"background.default\" }}>\r\n      <Flex vertical boxShadow={4} height=\"auto\" zIndex={1}>\r\n        <Title />\r\n        <Controls />\r\n      </Flex>\r\n      <SpecimenInspector flex={1} />\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { getTransport } from \"client\";\r\nimport { useSnackbar } from \"components/generic/Snackbar\";\r\nimport { delay, now } from \"lodash\";\r\nimport { useEffect } from \"react\";\r\nimport { Connection, useConnections } from \"slices/connections\";\r\nimport { useLoadingState } from \"slices/loading\";\r\nimport { useSettings } from \"slices/settings\";\r\n\r\nfunction wait(ms: number) {\r\n  return new Promise((res) => delay(res, ms));\r\n}\r\n\r\nasync function timed<T>(task: () => Promise<T>, ms: number = 5000) {\r\n  const from = now();\r\n  const result = (await Promise.any([task(), wait(ms)])) as T | undefined;\r\n  return { result, delta: now() - from };\r\n}\r\n\r\nexport function ConnectionsService() {\r\n  const notify = useSnackbar();\r\n  const [{ remote }] = useSettings();\r\n  const [, setConnections] = useConnections();\r\n  const usingLoadingState = useLoadingState(\"connections\");\r\n\r\n  useEffect(() => {\r\n    let aborted = false;\r\n    let cs: Connection[] = [];\r\n    usingLoadingState(async () => {\r\n      notify(\"Connecting...\");\r\n      for (const { transport: t, url, disabled } of remote ?? []) {\r\n        if (!disabled) {\r\n          const tp = new (getTransport(t))({ url });\r\n          await tp.connect();\r\n          const { result, delta } = await timed(() => tp.call(\"about\"));\r\n          if (result) {\r\n            cs = [\r\n              ...cs,\r\n              {\r\n                ...result,\r\n                url,\r\n                ping: delta,\r\n                call: tp.call.bind(tp),\r\n                disconnect: tp.disconnect.bind(tp),\r\n              },\r\n            ];\r\n          } else await tp.disconnect();\r\n        }\r\n        if (!aborted) setConnections(cs);\r\n      }\r\n      if (!aborted)\r\n        notify(`Connected to ${cs.length} of ${remote?.length} solvers.`);\r\n    });\r\n    return () => {\r\n      aborted = true;\r\n      cs.map((c) => c.disconnect());\r\n    };\r\n  }, [remote, setConnections, notify, usingLoadingState]);\r\n\r\n  return <></>;\r\n}\r\n","import { call } from \"components/script-editor/call\";\r\nimport { get, keyBy, lowerCase as lower, memoize, startCase } from \"lodash\";\r\nimport { useMemo } from \"react\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\n\r\nexport function useBreakpoints() {\r\n  const [{ specimen }] = useSpecimen();\r\n  const [{ code, breakpoints = [], monotonicF, monotonicG }] = useUIState();\r\n\r\n  return useMemo(() => {\r\n    const memo = keyBy(specimen?.eventList, \"id\");\r\n    return memoize((step: number) => {\r\n      const event = specimen?.eventList?.[step];\r\n      if (event) {\r\n        try {\r\n          // Check monotonic f or g values\r\n          if (step) {\r\n            for (const p of [monotonicF && \"f\", monotonicG && \"g\"]) {\r\n              if (p && get(memo[`${event.pId}`], p) > get(event, p)) {\r\n                return { result: `Monotonicity violation on ${p}` };\r\n              }\r\n            }\r\n          }\r\n          // Check breakpoints in the breakpoints section\r\n          for (const {\r\n            active,\r\n            condition,\r\n            type,\r\n            property = \"\",\r\n            reference = 0,\r\n          } of breakpoints) {\r\n            const isType = !type || type === event.type;\r\n            const match = condition?.apply?.(get(event, property), reference);\r\n            if (active && isType && match) {\r\n              return {\r\n                result: `${property} ${lower(\r\n                  startCase(condition?.key)\r\n                )} ${reference}`,\r\n              };\r\n            }\r\n          }\r\n          // Check breakpoints in the script editor section\r\n          if (\r\n            call(code ?? \"\", \"shouldBreak\", [\r\n              step,\r\n              event,\r\n              specimen?.eventList ?? [],\r\n            ])\r\n          ) {\r\n            return { result: \"Script editor\" };\r\n          }\r\n        } catch (e) {\r\n          return { error: `${e}` };\r\n        }\r\n      }\r\n      return { result: \"\" };\r\n    });\r\n  }, [code, specimen, breakpoints, monotonicF, monotonicG]);\r\n}\r\n","import { useSnackbar } from \"components/generic/Snackbar\";\r\nimport { Label } from \"components/generic/Label\";\r\nimport { usePlaybackState } from \"hooks/usePlaybackState\";\r\nimport { range, trimEnd } from \"lodash\";\r\nimport { ReactNode, useCallback, useEffect } from \"react\";\r\nimport { useRaf } from \"react-use\";\r\nimport { useBreakpoints } from \"../hooks/useBreakpoints\";\r\nimport { useSettings } from \"slices/settings\";\r\n\r\nfunction cancellable<T = void>(f: () => Promise<T>, g: (result: T) => void) {\r\n  let cancelled = false;\r\n  requestAnimationFrame(async () => {\r\n    const result = await f();\r\n    if (!cancelled) g(result);\r\n  });\r\n  return () => {\r\n    cancelled = true;\r\n  };\r\n}\r\n\r\nexport function PlaybackService() {\r\n  useRaf();\r\n\r\n  const notify = useSnackbar();\r\n  const [{ playbackRate = 1 }] = useSettings();\r\n  const { playing, end, step, pause, tick } = usePlaybackState();\r\n  const shouldBreak = useBreakpoints();\r\n\r\n  const renderLabel = useCallback(\r\n    (label: ReactNode, offset: number) => (\r\n      <Label primary={label} secondary={`Step ${step + offset}`} />\r\n    ),\r\n    [step]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (playing) {\r\n      return step < end\r\n        ? cancellable(\r\n            async () => {\r\n              for (const i of range(playbackRate)) {\r\n                const r = shouldBreak(step + i);\r\n                if (r.result || r.error) return { ...r, offset: i };\r\n              }\r\n              return { result: \"\", offset: 0 };\r\n            },\r\n            ({ result, offset, error }) => {\r\n              if (!error) {\r\n                if (result) {\r\n                  notify(renderLabel(`Breakpoint hit: ${result}.`, offset));\r\n                  pause(offset);\r\n                } else tick(playbackRate);\r\n              } else {\r\n                notify(renderLabel(`${trimEnd(error, \".\")}.`, offset));\r\n                pause();\r\n              }\r\n            }\r\n          )\r\n        : pause();\r\n    }\r\n  }, [\r\n    renderLabel,\r\n    playing,\r\n    end,\r\n    step,\r\n    pause,\r\n    tick,\r\n    notify,\r\n    shouldBreak,\r\n    playbackRate,\r\n  ]);\r\n\r\n  return <></>;\r\n}\r\n","import { map, uniqBy } from \"lodash\";\nimport { useAsyncAbortable as useAsync } from \"react-async-hook\";\nimport { useConnections } from \"slices/connections\";\nimport { Features, useFeatures } from \"slices/features\";\nimport { useLoadingState } from \"slices/loading\";\n\nconst withSource = (source: string) => (v: any) => ({ ...v, source });\n\nexport function FeaturesService() {\n  const [connections] = useConnections();\n  const [, setFeatures] = useFeatures();\n  const usingLoadingState = useLoadingState(\"features\");\n\n  useAsync(\n    (signal) =>\n      usingLoadingState(async () => {\n        const features: Features = { algorithms: [], formats: [], maps: [] };\n        for (const { call, url } of connections) {\n          for (const prop of [\"algorithms\", \"formats\", \"maps\"] as const) {\n            features[prop] = uniqBy(\n              [\n                ...features[prop],\n                ...map(await call(`features/${prop}`), withSource(url)),\n              ],\n              \"id\"\n            );\n          }\n        }\n        if (!signal.aborted) setFeatures(features);\n      }),\n    [connections, setFeatures]\n  );\n\n  return <></>;\n}\n","import { memoize as memo } from \"lodash\";\nimport { useMemo } from \"react\";\nimport { useAsync } from \"react-async-hook\";\nimport { useLoadingState } from \"slices/loading\";\nimport { Map, useUIState } from \"slices/UIState\";\nimport { useConnectionResolver } from \"./useConnectionResolver\";\n\nexport function useMapContent() {\n  const usingLoadingState = useLoadingState(\"map\");\n  const resolve = useConnectionResolver();\n  const [{ map }] = useUIState();\n\n  const getMap = useMemo(\n    () =>\n      memo(async ({ source, id }: Map = {}) => {\n        if (source && id) {\n          const connection = resolve({ url: source });\n          if (connection) {\n            const result = await connection.call(\"features/map\", { id });\n            return result?.content;\n          }\n        }\n      }, JSON.stringify),\n    [resolve]\n  );\n\n  return useAsync(\n    () =>\n      usingLoadingState(async () => {\n        if (map && map.id)\n          return {\n            ...map,\n            content: map.content ? map.content : await getMap(map),\n          };\n      }),\n    [getMap, map, usingLoadingState]\n  );\n}\n","type WorkerConstructor = new () => Worker;\n\nexport const usingWorker =\n  <R>(w: WorkerConstructor) =>\n  async (task: (w: Worker) => Promise<R>) => {\n    const worker = new w();\n    const out = await task(worker);\n    worker.terminate();\n    return out;\n  };\n\nexport const usingWorkerTask =\n  <T, R>(w: WorkerConstructor) =>\n  (inp: T) =>\n    usingWorker<R>(w)((worker) => {\n      worker.postMessage(inp);\n      return new Promise<R>((res) => {\n        worker.onmessage = (out) => {\n          res(out.data as R);\n        };\n      });\n    });\n","import { memoize as memo } from \"lodash\";\nimport { HashWorker } from \".\";\nimport { usingWorkerTask } from \"./usingWorker\";\n\nexport const hashAsync = memo(usingWorkerTask<string, string>(HashWorker));\n","import { Transport } from \"client/Transport\";\r\nimport { Label } from \"components/generic/Label\";\r\nimport { useSnackbar } from \"components/generic/Snackbar\";\r\nimport { getRenderer } from \"components/specimen-renderer/getRenderer\";\r\nimport { useConnectionResolver } from \"hooks/useConnectionResolver\";\r\nimport { useMapContent } from \"hooks/useMapContent\";\r\nimport { find } from \"lodash\";\r\nimport { ParamsOf } from \"protocol/Message\";\r\nimport { PathfindingTask } from \"protocol/SolveTask\";\r\nimport { useAsyncAbortable as useAsync } from \"react-async-hook\";\r\nimport { useFeatures } from \"slices/features\";\r\nimport { useLoadingState } from \"slices/loading\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { hashAsync as hash } from \"workers/async\";\r\n\r\nasync function solve(\r\n  map: string,\r\n  params: Omit<ParamsOf<PathfindingTask>, \"mapURI\">,\r\n  call: Transport[\"call\"]\r\n) {\r\n  if (map) {\r\n    for (const mapURI of [\r\n      `hash:${await hash(map)}`,\r\n      `map:${encodeURIComponent(map)}`,\r\n    ] as const) {\r\n      const p = { ...params, mapURI };\r\n      const specimen = await call(\"solve/pathfinding\", p);\r\n      if (specimen) return { ...p, specimen, map };\r\n    }\r\n  }\r\n}\r\n\r\nexport function SpecimenService() {\r\n  const usingLoadingState = useLoadingState(\"specimen\");\r\n  const notify = useSnackbar();\r\n  const [{ formats: format }] = useFeatures();\r\n  const [{ algorithm, start, end }, setUIState] = useUIState();\r\n  const resolve = useConnectionResolver();\r\n  const [, setSpecimen] = useSpecimen();\r\n\r\n  const { result: map } = useMapContent();\r\n\r\n  useAsync(\r\n    (signal) =>\r\n      usingLoadingState(async () => {\r\n        if (map?.format && map?.content) {\r\n          const [, defaults] = getRenderer(map.format);\r\n          try {\r\n            const entry = find(format, { id: map.format });\r\n            if (entry) {\r\n              const connection = resolve({ url: entry.source });\r\n              if (connection) {\r\n                const solution = await solve(\r\n                  map.content,\r\n                  {\r\n                    algorithm,\r\n                    format: map.format,\r\n                    instances: [\r\n                      {\r\n                        end: end ?? defaults(map.content)?.end,\r\n                        start: start ?? defaults(map.content)?.start,\r\n                      },\r\n                    ],\r\n                  },\r\n                  connection.call\r\n                );\r\n                if (solution && !signal.aborted) {\r\n                  setSpecimen(solution);\r\n                  setUIState({ step: 0, playback: \"paused\", breakpoints: [] });\r\n                  notify(\r\n                    <Label\r\n                      primary=\"Solution generated.\"\r\n                      secondary={`${solution.specimen.eventList?.length} steps`}\r\n                    />\r\n                  );\r\n                }\r\n              }\r\n            } else\r\n              notify(\r\n                `No solver is available for the map format (${map.format}).`\r\n              );\r\n          } catch (e) {\r\n            notify(`${e}`);\r\n          }\r\n        }\r\n      }),\r\n    [\r\n      algorithm,\r\n      start,\r\n      end,\r\n      map,\r\n      notify,\r\n      usingLoadingState,\r\n      format,\r\n      resolve,\r\n      setSpecimen,\r\n    ]\r\n  );\r\n\r\n  return <></>;\r\n}\r\n","import { map, reduce } from \"lodash\";\r\nimport {\r\n  cloneElement,\r\n  createElement,\r\n  FunctionComponent,\r\n  ReactNode,\r\n} from \"react\";\r\n\r\ntype SliceProviderProps = {\r\n  slices?: FunctionComponent[];\r\n  services?: FunctionComponent[];\r\n  children?: ReactNode;\r\n};\r\n\r\nexport function SliceProvider({\r\n  slices,\r\n  children,\r\n  services,\r\n}: SliceProviderProps) {\r\n  return (\r\n    <>\r\n      {reduce(\r\n        map(slices, (s) => createElement(s)),\r\n        (prev, next) => cloneElement(next, {}, prev),\r\n        <>\r\n          {children}\r\n          {map(services, (s, i) => createElement(s, { key: i }))}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { colors, createTheme } from \"@material-ui/core\";\r\nimport { constant, times } from \"lodash\";\r\n\r\nconst shadow = `\r\n    0px 8px 18px -1px rgb(0 0 0 / 8%), \r\n    0px 10px 48px 0px rgb(0 0 0 / 1%), \r\n    0px 20px 96px 0px rgb(0 0 0 / 0.5%)\r\n`;\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    primary: colors[\"blueGrey\"],\r\n  },\r\n  shadows: [\"\", ...times(24, constant(shadow))] as any,\r\n});\r\n","import { CssBaseline, ThemeProvider } from \"@material-ui/core\";\r\nimport App from \"App\";\r\nimport { SnackbarProvider } from \"components/generic/Snackbar\";\r\nimport \"index.css\";\r\nimport { StrictMode } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport reportWebVitals from \"reportWebVitals\";\r\nimport { ConnectionsService } from \"services/ConnectionsService\";\r\nimport { PlaybackService } from \"services/PlaybackService\";\r\nimport { FeaturesService } from \"services/FeaturesService\";\r\nimport { SpecimenService } from \"services/SpecimenService\";\r\nimport { ConnectionsProvider } from \"slices/connections\";\r\nimport { FeaturesProvider } from \"slices/features\";\r\nimport { LoadingProvider } from \"slices/loading\";\r\nimport { SettingsProvider } from \"slices/settings\";\r\nimport { SliceProvider as EnvironmentProvider } from \"slices/SliceProvider\";\r\nimport { SpecimenProvider } from \"slices/specimen\";\r\nimport { UIStateProvider } from \"slices/UIState\";\r\nimport { theme } from \"theme\";\r\n\r\nconst slices = [\r\n  SettingsProvider,\r\n  ConnectionsProvider,\r\n  FeaturesProvider,\r\n  UIStateProvider,\r\n  SpecimenProvider,\r\n  LoadingProvider,\r\n];\r\n\r\nconst services = [\r\n  ConnectionsService,\r\n  PlaybackService,\r\n  SpecimenService,\r\n  FeaturesService,\r\n];\r\n\r\nrender(\r\n  <StrictMode>\r\n    <CssBaseline>\r\n      <ThemeProvider theme={theme}>\r\n        <SnackbarProvider>\r\n          <EnvironmentProvider slices={slices} services={services}>\r\n            <App />\r\n          </EnvironmentProvider>\r\n        </SnackbarProvider>\r\n      </ThemeProvider>\r\n    </CssBaseline>\r\n  </StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
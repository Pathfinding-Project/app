{"version":3,"sources":["components/generic/Flex.tsx","slices/reducers.tsx","slices/createSlice.tsx","slices/settings.ts","theme.tsx","components/generic/Snackbar.tsx","components/generic/Space.tsx","slices/connections.ts","slices/features.ts","components/script-editor/makeTemplate.tsx","components/script-editor/templates.tsx","slices/UIState.ts","hooks/useSmallDisplay.tsx","components/generic/Select.tsx","components/app-bar/FeaturePicker.tsx","components/app-bar/upload.tsx","components/app-bar/Input.tsx","components/generic/IconButtonWithTooltip.tsx","slices/specimen.ts","hooks/usePlaybackState.tsx","components/app-bar/Playback.tsx","hooks/useScrollState.tsx","components/generic/ScrollPanel.tsx","components/generic/Modal.tsx","workers/hash.worker.ts","client/IPCTransport.ts","client/internal.ts","client/NativeTransport.ts","client/SocketIOTransport.ts","client/index.ts","components/generic/ListEditor.tsx","components/generic/Overline.tsx","hooks/useConnectionResolver.tsx","slices/loading.ts","hooks/useConnectionStatus.tsx","components/settings-editor/ServerEditor.tsx","components/settings-editor/ServerListEditor.tsx","components/settings-editor/SettingsEditor.tsx","components/app-bar/Settings.tsx","components/app-bar/Title.tsx","components/generic/Switch.tsx","components/breakpoint-editor/comparators.tsx","components/breakpoint-editor/intrinsicProperties.tsx","components/breakpoint-editor/eventTypes.tsx","components/breakpoint-editor/BreakpointEditor.tsx","components/breakpoint-editor/propertyPaths.tsx","components/breakpoint-editor/BreakpointListEditor.tsx","components/script-editor/ScriptEditor.tsx","components/debug-options-editor/saveJSON.tsx","components/debug-options-editor/DebugOptionsEditor.tsx","components/app-bar/Utility.tsx","components/app-bar/Controls.tsx","components/specimen-renderer/default-renderer/DefaultRenderer.tsx","components/specimen-renderer/default-renderer/getDefaults.tsx","components/specimen-renderer/MapParser.tsx","components/specimen-renderer/grid-renderer/parseMap.tsx","components/specimen-renderer/grid-renderer/getDefaults.tsx","components/script-editor/call.tsx","components/specimen-renderer/colors.tsx","components/specimen-renderer/info.tsx","components/specimen-renderer/isNode.tsx","components/specimen-renderer/raster-renderer/config.tsx","components/specimen-renderer/raster-renderer/makeGraphic.tsx","components/specimen-renderer/raster-renderer/Guides.tsx","components/specimen-renderer/Node.tsx","components/specimen-renderer/raster-renderer/Draw.tsx","components/specimen-renderer/raster-renderer/NodeList.tsx","components/specimen-renderer/raster-renderer/Path.tsx","components/specimen-renderer/raster-renderer/PixiViewport.tsx","components/specimen-renderer/raster-renderer/Viewport.tsx","components/specimen-renderer/raster-renderer/RasterRenderer.tsx","components/specimen-renderer/raster-renderer/Selected.tsx","components/specimen-renderer/raster-renderer/Selection.tsx","components/specimen-renderer/base-raster-renderer/BaseRasterRenderer.tsx","components/specimen-renderer/raster-renderer/Overlay.tsx","components/specimen-renderer/grid-renderer/GridRenderer.tsx","components/specimen-renderer/network-renderer/getDefaults.tsx","components/specimen-renderer/network-renderer/parseMap.tsx","components/specimen-renderer/network-renderer/NetworkRenderer.tsx","components/specimen-renderer/index.tsx","components/generic/Toolbar.tsx","components/generic/LazyList.tsx","components/specimen-inspector/EventLabel.tsx","components/generic/Property.tsx","components/specimen-inspector/PropertyList.tsx","components/specimen-inspector/EventInspector.tsx","components/specimen-inspector/EventListInspector.tsx","components/specimen-inspector/InfoPanel.tsx","components/generic/Label.tsx","components/specimen-inspector/SelectionMenu.tsx","components/specimen-inspector/SpecimenInspector.tsx","App.tsx","reportWebVitals.ts","services/ConnectionsService.tsx","hooks/useBreakpoints.tsx","services/PlaybackService.tsx","services/FeaturesService.tsx","hooks/useMapContent.tsx","workers/usingWorker.ts","workers/async.ts","services/SpecimenService.tsx","slices/SliceProvider.tsx","index.tsx"],"names":["vertical","props","Box","position","height","width","display","flexDirection","replace","_","next","merge","prev","initialState","init","effect","reduce","Store","createContext","noop","useContext","children","value","set","useReducer","p","n","slice","useMemo","useAsync","r","Provider","key","cache","localStorage","getItem","JSON","parse","setItem","stringify","defaultRemotes","url","transport","defaultPlaybackRate","useSettings","SettingsProvider","createSlice","remote","playbackRate","withLocalStorage","shadow","constant","acrylic","palette","backdropFilter","background","SnackbarContext","snackPack","setSnackPack","useState","open","setOpen","current","setCurrent","undefined","useEffect","length","handleMessage","useCallback","message","Date","getTime","handleClose","reason","handleExited","Snackbar","autoHideDuration","onClose","TransitionProps","onExited","action","IconButton","aria-label","color","sx","onClick","CloseIcon","px","useConnections","ConnectionsProvider","useFeatures","FeaturesProvider","algorithms","maps","formats","returnType","params","join","map","name","type","method","prefix","close","chunks","chunk","split","description","c","makeTypeString","defaultReturnValue","methods","m","makeComment","makeBody","templates","shouldRender","shouldBreak","useUIState","UIStateProvider","code","makeTemplate","values","theme","useTheme","useMediaQuery","breakpoints","down","itemHeight","sm","padding","trigger","items","onChange","placeholder","useSmallDisplay","max","index","findIndex","State","variant","state","Tooltip","title","span","bindTrigger","Menu","bindMenu","anchorOrigin","horizontal","transformOrigin","v","label","MenuItem","selected","TextField","minWidth","select","e","target","item","icon","find","id","Select","startCase","Button","disabled","startIcon","Type","Space","s","pop","shift","customMapId","custom","upload","accept","f","file","strict","ext","format","content","text","Error","mapDefaults","start","end","notify","useSnackbar","connections","algorithm","setUIState","FeaturePicker","MapIcon","source","CodeIcon","rest","useSpecimen","SpecimenProvider","specimen","playback","step","ready","playing","eventList","canPlay","canPause","canStop","canStepForward","canStepBackward","stepBy","clamp","play","pause","stop","stepForward","stepBackward","tick","usePlaybackState","PreviousIcon","PauseIcon","PlayIcon","ForwardIcon","StopIcon","threshold","showControls","setShowControls","isAbsoluteTop","setIsAbsoluteTop","isTop","setIsTop","setTarget","lastTop","useRef","listener","newIsTop","scrollTop","Math","abs","addEventListener","passive","removeEventListener","onTarget","onScroll","div","style","overflow","ref","PanelContext","Typography","elevatedStyle","transitionProperties","elevatedChildren","simple","panel","usePanel","useScrollState","styles","paper","boxShadow","shadows","AppBar","elevation","primary","transition","transitions","create","Toolbar","marginRight","spacing","edge","ArrowBack","gridColumn","gridRow","flex","Fade","in","mountOnEnter","unmountOnExit","actions","scrollable","setContent","contentRef","setContentRef","hasOverflowingChildren","setHasOverflowingChildren","childHeight","setChildHeight","callback","doesOverflow","window","innerHeight","offsetHeight","ceil","ob","ResizeSensor","detach","useVariant","Dialog","fullScreen","paddingTop","PaperProps","borderRadius","shape","default","maxWidth","ScrollPanel","options","ModalProps","appBar","ModalAppBarProps","PopupState","isOpen","cloneElement","Modal","ModalAppBar","connect","worker","postMessage","Promise","res","disconnect","terminate","call","rpc","request","IPCWorker","JSONRPCClient","data","receive","uri","protocol","pathname","scheme","decodeURIComponent","internal","trace","version","mapURI","parseURI","includes","handler","hostname","socket","io","response","off","emit","on","transports","socketio","constructor","SocketIOTransport","ipc","IPCTransport","native","NativeTransport","defaultTransport","first","keys","DefaultListEditorInput","forwardRef","InputBase","fullWidth","inputRef","LabelIcon","useSwitch","useDelete","useEdit","useEditButton","onChangeItem","onDeleteItem","enabled","element","i","extrasPlacement","autoFocus","cardStyle","field","setField","alignItems","marginTop","marginBottom","flexGrow","marginLeft","onDelete","onValueChange","Switch","checked","focus","EditIcon","DeleteIcon","Card","borderColor","paddingRight","addItemLabel","onAddItem","placeholderText","getCategory","getOrder","extras","isInitialRender","useInitialRender","intermediateItems","setIntermediateItems","newIndex","setNewIndex","timeout","setTimeout","duration","standard","clearTimeout","uniqBy","c2","x","render","Collapse","appear","ListEditorField","sorted","sortBy","List","subheader","ListSubheader","disableSticky","gutterBottom","mt","out","forEach","isNewCategory","push","some","pl","pb","pt","ml","mb","disableElevation","Add","arr","editor","setState","Editor","handleChange","k","filter","b","Dot","fontSize","transform","my","model","resolve","useLoading","LoadingProvider","setLoading","task","loading","useConnectionResolver","entry","statusColor","connected","connecting","error","connection","useConnection","status","useConnectionStatus","Flex","py","Title","entries","setSettings","ListEditor","ServerEditor","debounce","ResetIcon","formatLabel","tab","setTab","TabContext","TabList","Tab","Divider","TabPanel","renderHeading","renderLabel","Slider","mr","marks","baseRate","min","valueLabelFormat","valueLabelDisplay","defaultValue","onChangeCommitted","defaultChecked","ServerListEditor","IconButtonWithTooltip","SettingsIcon","SettingsEditor","bgcolor","whiteSpace","fontWeight","FormControlLabel","control","MuiSwitch","comparators","apply","a","intrinsicProperties","eventTypes","properties","flexItem","orientation","mx","textOverflow","last","component","property","condition","reference","inputProps","inputMode","pattern","active","propertyPaths","uniq","flat","paths","nodeStructure","get","BreakpointEditor","DELAY","AutoSize","CircularProgress","language","minimap","filename","download","monotonicF","monotonicG","BreakpointListEditor","save","ScriptEditor","BugIcon","DebugOptionsEditor","divider","useAcrylic","top","left","zIndex","Input","Playback","Utility","Settings","justifyContent","DisabledIcon","getDefaults","memo","o","floor","parseMap","makeMapParser","wall","lines","h","w","grid","d","to","y","from","size","nodes","walls","row","tile","variables","x1","y1","between","getNode","point","node","range","fn","script","Function","tint","parseInt","colorsHex","teal","destination","pink","expanding","deepOrange","generating","yellow","closing","blueGrey","colors","mapValues","hex","orange","getStep","take","findLastIndex","event","byPoint","scale","draw","Graphics","g","WEIGHT","Grid","makeGraphic","alpha","clear","lineStyle","moveTo","lineTo","coerce","obj","radius","beginFill","drawCircle","endFill","square","drawRect","box","line","x2","y2","weight","Node","Square","Line","defaultCondition","memoize","NodeList","isUndefined","isNull","path","keyBy","defined","pId","getColor","events","prop","PixiViewportBase","register","global","input","equals","world","toWorld","viewport","app","stopPropagation","passiveWheel","drag","pinch","wheel","friction","clampZoom","maxScale","minScale","zoomPercent","equal","Component","PixiComponent","applyProps","RasterRenderer","ViewportProps","StageProps","BoxProps","Stage","backgroundColor","autoDensity","clearBeforeRender","resolution","antialias","Viewport","animateScale","animateAlpha","t","useTween","hover","highlight","Selected","isNode","identity","onSelect","selection","setRef","setActive","setHover","handleClick","getBoundingClientRect","info","handleMouseEvent","resolveHover","throttle","delay","cursor","onMouseDown","onMouseOver","Nodes","LazyNodes","Path","Selection","Guides","bgNodeColor","BaseRasterRenderer","Overlay","vert","log","sqrt","dist","mag","log10","minAt","minBy","maxAt","maxBy","verts","minX","minY","maxX","maxY","startsWith","edges","bounds","vertOptions","edgeColor","vertColor","renderers","GridRenderer","getGridDefaults","json","xy","NetworkRenderer","getNetworkDefaults","DefaultRenderer","pointerEvents","Stack","direction","renderItem","listOptions","totalCount","itemContent","hidden","Overline","getColorHex","HiddenIcon","opacity","flexWrap","Property","cardStyles","CardActionArea","EventLabel","PropertyList","scrollToIndex","align","behavior","offset","EventInspector","StepsIcon","EventListInspector","secondary","anchorReference","anchorPosition","ListItem","ListItemText","StartIcon","DestinationIcon","Label","ListItemIcon","renderer","getRenderer","setSelection","LinearProgress","createElement","InfoPanel","right","SelectionMenu","Controls","SpecimenInspector","App","reportWebVitals","onPerfEntry","import","then","getCLS","getFID","getFCP","getLCP","getTTFB","ms","timed","now","result","any","wait","delta","setConnections","usingLoadingState","useLoadingState","aborted","cs","tp","getTransport","ping","bind","isType","match","lower","cancelled","requestAnimationFrame","useRaf","useBreakpoints","cancellable","trimEnd","withSource","setFeatures","signal","features","getMap","usingWorker","usingWorkerTask","inp","onmessage","hashAsync","HashWorker","solve","hash","encodeURIComponent","setSpecimen","useMapContent","defaults","solution","instances","slices","services","ConnectionsService","PlaybackService","SpecimenService","FeaturesService","StrictMode","CssBaseline","ThemeProvider","SnackbarProvider","EnvironmentProvider","document","getElementById"],"mappings":"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","file":"static/js/main.b71d7fc8.chunk.js","sourcesContent":["import { Box, BoxProps } from \"@material-ui/core\";\r\n\r\nexport type FlexProps = {\r\n  vertical?: boolean;\r\n} & BoxProps;\r\n\r\nexport function Flex({ vertical, ...props }: FlexProps) {\r\n  return (\r\n    <Box\r\n      position=\"relative\"\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      display=\"flex\"\r\n      flexDirection={vertical ? \"column\" : \"row\"}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n","export type Reducer<T, U = T> = (prev: T, next: U) => T;\n\nexport const replace = (_: any, next: any) => next;\n\nexport const merge = (prev: any, next: any) => ({ ...prev, ...next });\n","import { noop } from \"lodash\";\r\nimport {\r\n  createContext,\r\n  ReactNode,\r\n  useContext,\r\n  useMemo,\r\n  useReducer,\r\n} from \"react\";\r\nimport { useAsync } from \"react-use\";\r\nimport { Reducer, merge } from \"./reducers\";\r\n\r\ntype Slice<T, U = T> = [T, (next: U) => void];\r\n\r\ntype Options<T, U> = {\r\n  init?: () => Promise<U | undefined>;\r\n  effect?: (state: { prev: T; next: T }) => void;\r\n  reduce?: Reducer<T, U>;\r\n};\r\n\r\nexport function createSlice<T, U = T>(\r\n  initialState: T,\r\n  { init, effect, reduce = merge }: Options<T, U> = {}\r\n) {\r\n  const Store = createContext<Slice<T, U>>([initialState, noop]);\r\n  return [\r\n    // Hook\r\n    () => useContext(Store),\r\n    // Context\r\n    ({ children }: { children?: ReactNode }) => {\r\n      const [value, set] = useReducer((p: T, n: U) => {\r\n        const next = reduce(p, n);\r\n        effect?.({ prev: p, next });\r\n        return next;\r\n      }, initialState);\r\n      const slice = useMemo<Slice<T, U>>(() => [value, set], [value, set]);\r\n      useAsync(async () => {\r\n        const r = await init?.();\r\n        if (r) set(r);\r\n      });\r\n      return <Store.Provider value={slice}>{children}</Store.Provider>;\r\n    },\r\n  ] as const;\r\n}\r\n\r\nexport function withLocalStorage<T>(key: string) {\r\n  return {\r\n    init: () => {\r\n      const cache = localStorage.getItem(key);\r\n      if (cache) return JSON.parse(cache);\r\n    },\r\n    effect: ({ next }) => localStorage.setItem(key, JSON.stringify(next)),\r\n  } as Options<T, T>;\r\n}\r\n","import { createSlice, withLocalStorage } from \"./createSlice\";\r\n\r\nexport type Remote = {\r\n  url: string;\r\n  transport: string;\r\n  key: string;\r\n  disabled?: boolean;\r\n};\r\n\r\ntype Settings = {\r\n  remote?: Remote[];\r\n  playbackRate?: number;\r\n  acrylic?: boolean;\r\n};\r\n\r\nconst DEV_PORT = 8001;\r\n\r\nexport const defaultRemotes = [\r\n  {\r\n    url: `internal://trace/`,\r\n    transport: \"native\",\r\n    key: \"trace-provider\",\r\n  },\r\n  {\r\n    url: `http://localhost:${DEV_PORT}/`,\r\n    transport: \"socketio\",\r\n    key: \"default-development-server\",\r\n  },\r\n  {\r\n    url: `https://rachmaninoff.duckdns.org/`,\r\n    transport: \"socketio\",\r\n    key: \"legacy-production-server\",\r\n  },\r\n];\r\n\r\nexport const defaultPlaybackRate = 4;\r\n\r\nexport const [useSettings, SettingsProvider] = createSlice<Settings>(\r\n  {\r\n    remote: defaultRemotes,\r\n    playbackRate: defaultPlaybackRate,\r\n  },\r\n  withLocalStorage(\"settings\")\r\n);\r\n","import { colors, createTheme } from \"@material-ui/core\";\r\nimport { alpha, SxProps, Theme } from \"@material-ui/system\";\r\nimport { constant, times } from \"lodash\";\r\nimport { useSettings } from \"slices/settings\";\r\n\r\nconst shadow = `\r\n    0px 8px 18px -1px rgb(0 0 0 / 8%), \r\n    0px 10px 48px 0px rgb(0 0 0 / 1%), \r\n    0px 20px 96px 0px rgb(0 0 0 / 0.5%)\r\n`;\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    primary: colors[\"blueGrey\"],\r\n  },\r\n  shadows: [\"\", ...times(24, constant(shadow))] as any,\r\n});\r\n\r\nexport function useAcrylic(): SxProps<Theme> {\r\n  const [{ acrylic }] = useSettings();\r\n  return acrylic\r\n    ? {\r\n        backdropFilter: \"blur(5px)\",\r\n        background: ({ palette }) => alpha(palette.background.paper, 0.84),\r\n      }\r\n    : {\r\n        backdropFilter: \"blur(0px)\",\r\n        background: ({ palette }) => palette.background.paper,\r\n      };\r\n}\r\n","import { IconButton, Snackbar } from \"@material-ui/core\";\r\nimport { CloseOutlined as CloseIcon } from \"@material-ui/icons\";\r\nimport { noop } from \"lodash\";\r\nimport {\r\n  createContext,\r\n  ReactNode,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\n\r\nconst SnackbarContext = createContext<(message?: ReactNode) => void>(noop);\r\n\r\nexport interface SnackbarMessage {\r\n  message?: ReactNode;\r\n  key: number;\r\n}\r\n\r\nexport interface State {\r\n  open: boolean;\r\n  snackPack: readonly SnackbarMessage[];\r\n  messageInfo?: SnackbarMessage;\r\n}\r\n\r\nexport function useSnackbar() {\r\n  return useContext(SnackbarContext);\r\n}\r\n\r\nexport function SnackbarProvider({ children }: { children?: ReactNode }) {\r\n  const [snackPack, setSnackPack] = useState<readonly SnackbarMessage[]>([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [current, setCurrent] = useState<SnackbarMessage | undefined>(\r\n    undefined\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (snackPack.length && !current) {\r\n      setCurrent({ ...snackPack[0] });\r\n      setSnackPack((prev) => prev.slice(1));\r\n      setOpen(true);\r\n    } else if (snackPack.length && current && open) {\r\n      setOpen(false);\r\n    }\r\n  }, [snackPack, current, open]);\r\n\r\n  const handleMessage = useCallback(\r\n    (message: ReactNode) => {\r\n      setSnackPack((prev) => [...prev, { message, key: new Date().getTime() }]);\r\n    },\r\n    [setSnackPack]\r\n  );\r\n\r\n  const handleClose = (_: any, reason?: string) => {\r\n    reason !== \"clickaway\" && setOpen(false);\r\n  };\r\n\r\n  const handleExited = () => setCurrent(undefined);\r\n\r\n  return (\r\n    <>\r\n      <SnackbarContext.Provider value={handleMessage}>\r\n        {children}\r\n      </SnackbarContext.Provider>\r\n      <Snackbar\r\n        key={current?.key}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        TransitionProps={{ onExited: handleExited }}\r\n        message={current?.message}\r\n        action={\r\n          <>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              sx={{ p: 0.5 }}\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { Box } from \"@material-ui/core\";\r\nimport { BoxProps } from \"@material-ui/system\";\r\n\r\nexport function Space(props: BoxProps) {\r\n  return <Box px={0.5} display=\"inline-block\" {...props} />;\r\n}\r\n","import { Transport } from \"client/Transport\";\r\nimport { CheckConnectionResponse } from \"protocol/CheckConnection\";\r\nimport { createSlice } from \"./createSlice\";\r\nimport { replace } from \"./reducers\";\r\n\r\nexport type Connection = CheckConnectionResponse[\"result\"] & {\r\n  call: Transport[\"call\"];\r\n  disconnect: Transport[\"disconnect\"];\r\n  url: string;\r\n  ping: number;\r\n};\r\n\r\nexport const [useConnections, ConnectionsProvider] = createSlice<Connection[]>(\r\n  [],\r\n  { reduce: replace }\r\n);\r\n","import { FeatureDescriptor } from \"protocol/FeatureQuery\";\r\nimport { createSlice } from \"./createSlice\";\r\n\r\ntype FeatureDescriptorWithSource = FeatureDescriptor & {\r\n  source: string;\r\n};\r\n\r\nexport type Features = {\r\n  algorithms: FeatureDescriptorWithSource[];\r\n  maps: (FeatureDescriptorWithSource & { type: string })[];\r\n  formats: FeatureDescriptorWithSource[];\r\n};\r\n\r\nexport const [useFeatures, FeaturesProvider] = createSlice<Features>({\r\n  algorithms: [],\r\n  maps: [],\r\n  formats: [],\r\n});\r\n","import { chunk, join, map, split } from \"lodash\";\r\nimport { FunctionTemplate } from \"./FunctionTemplate\";\r\n\r\ntype GenericFunctionTemplate = FunctionTemplate<[...any], any>;\r\n\r\nfunction makeTypeString({ returnType, params }: GenericFunctionTemplate) {\r\n  return `@type {(${join(\r\n    map(params, (p) => `${p.name}: ${p.type}`),\r\n    \", \"\r\n  )}) => ${returnType}}`;\r\n}\r\n\r\nfunction makeComment(method: GenericFunctionTemplate) {\r\n  const [open, prefix, close] = [\"/**\", \" * \", \" */\"];\r\n  const chunks = map(chunk(split(method.description, \" \"), 9), (c) =>\r\n    join(c, \" \")\r\n  );\r\n  return join(\r\n    [\r\n      open,\r\n      ...map(chunks, (c) => `${prefix}${c}`),\r\n      `${prefix}${makeTypeString(method)}`,\r\n      close,\r\n    ],\r\n    \"\\n\"\r\n  );\r\n}\r\n\r\nfunction makeBody({\r\n  name,\r\n  params,\r\n  defaultReturnValue,\r\n}: GenericFunctionTemplate) {\r\n  return join(\r\n    [\r\n      `function ${name}(${join(map(params, \"name\"), \", \")}) {`,\r\n      `    return ${JSON.stringify(defaultReturnValue)};`,\r\n      `}`,\r\n    ],\r\n    \"\\n\"\r\n  );\r\n}\r\n\r\nexport function makeTemplate(methods?: GenericFunctionTemplate[]) {\r\n  return join(\r\n    map(methods, (m) => join([makeComment(m), makeBody(m)], \"\\n\")),\r\n    \"\\n\\n\"\r\n  );\r\n}\r\n","import { TraceEvent } from \"protocol/Trace\";\r\nimport { FunctionTemplate } from \"./FunctionTemplate\";\r\n\r\nexport type ShouldBreak = FunctionTemplate<\r\n  [number, TraceEvent, TraceEvent[]],\r\n  boolean\r\n>;\r\n\r\nexport const shouldBreak: ShouldBreak = {\r\n  name: \"shouldBreak\",\r\n  description:\r\n    \"Define in what situations the debugger should break, in addition to the conditions defined in the standard options.\",\r\n  params: [\r\n    { name: \"step\", type: \"number\" },\r\n    { name: \"event\", type: \"any\" },\r\n    { name: \"events\", type: \"any\" },\r\n  ],\r\n  defaultReturnValue: false,\r\n  returnType: \"boolean\",\r\n};\r\n\r\nexport type ShouldRender = FunctionTemplate<\r\n  [number, TraceEvent, TraceEvent[]],\r\n  boolean\r\n>;\r\n\r\nexport const shouldRender: ShouldRender = {\r\n  name: \"shouldRender\",\r\n  description: \"Define which objects the renderer should display.\",\r\n  params: [\r\n    { name: \"step\", type: \"number\" },\r\n    { name: \"event\", type: \"any\" },\r\n    { name: \"events\", type: \"any\" },\r\n  ],\r\n  defaultReturnValue: true,\r\n  returnType: \"boolean\",\r\n};\r\n\r\nexport const templates = {\r\n  shouldRender,\r\n  shouldBreak,\r\n};\r\n","import { makeTemplate } from \"components/script-editor/makeTemplate\";\r\nimport { templates } from \"components/script-editor/templates\";\r\nimport { values } from \"lodash\";\r\nimport { Feature } from \"protocol/FeatureQuery\";\r\nimport { TraceEventType } from \"protocol/Trace\";\r\nimport { createSlice } from \"./createSlice\";\r\n\r\nexport type PlaybackStateType = \"playing\" | \"paused\" | undefined;\r\n\r\ntype PlaybackState = { playback?: PlaybackStateType; step?: number };\r\n\r\nexport type Map = Partial<\r\n  Feature & {\r\n    format: string;\r\n    source?: string;\r\n  }\r\n>;\r\n\r\ntype InputState = {\r\n  algorithm?: string;\r\n  map?: Map;\r\n};\r\n\r\nexport type Comparator = {\r\n  key: string;\r\n  apply: (value: number, reference: number) => boolean;\r\n};\r\n\r\nexport type Breakpoint = {\r\n  key: string;\r\n  property?: string;\r\n  reference?: number;\r\n  condition?: Comparator;\r\n  active?: boolean;\r\n  type?: TraceEventType;\r\n};\r\n\r\ntype DebugOptionsState = {\r\n  code?: string;\r\n  monotonicF?: boolean;\r\n  monotonicG?: boolean;\r\n  breakpoints?: Breakpoint[];\r\n};\r\n\r\ntype SpecimenState = {\r\n  start?: number;\r\n  end?: number;\r\n};\r\n\r\nexport type UIState = InputState &\r\n  PlaybackState &\r\n  DebugOptionsState &\r\n  SpecimenState;\r\n\r\nexport const [useUIState, UIStateProvider] = createSlice<\r\n  UIState,\r\n  Partial<UIState>\r\n>({\r\n  code: makeTemplate(values(templates)),\r\n});\r\n","import { useMediaQuery, useTheme } from \"@material-ui/core\";\r\n\r\nexport function useSmallDisplay() {\r\n  const theme = useTheme();\r\n  return useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n}\r\n","import {\r\n  Menu,\r\n  MenuItem,\r\n  TextField,\r\n  TextFieldProps,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { useSmallDisplay } from \"hooks/useSmallDisplay\";\r\nimport { findIndex, map, max } from \"lodash\";\r\nimport State, { bindMenu, bindTrigger } from \"material-ui-popup-state\";\r\nimport { ReactElement, ReactNode } from \"react\";\r\n\r\ntype Key = string | number;\r\n\r\nexport type SelectProps<T extends Key> = {\r\n  trigger?: (props: ReturnType<typeof bindTrigger>) => ReactElement;\r\n  items?: { value: T; label?: ReactNode }[];\r\n  value?: T;\r\n  onChange?: (value: T) => void;\r\n  placeholder?: string;\r\n};\r\n\r\nconst itemHeight = (sm: boolean) => (sm ? 48 : 36);\r\nconst padding = 8;\r\n\r\nexport function Select<T extends string>({\r\n  trigger,\r\n  items,\r\n  value,\r\n  onChange,\r\n  placeholder = \"Select Option\",\r\n}: SelectProps<T>) {\r\n  const sm = useSmallDisplay();\r\n  const index = max([findIndex(items, { value: value as any }), 0]) ?? 0;\r\n  return (\r\n    <State variant=\"popover\">\r\n      {(state) => (\r\n        <>\r\n          <Tooltip title={placeholder}>\r\n            <span>{trigger?.(bindTrigger(state))}</span>\r\n          </Tooltip>\r\n          <Menu\r\n            {...bindMenu(state)}\r\n            anchorOrigin={{\r\n              horizontal: \"center\",\r\n              vertical: -itemHeight(sm) * index - padding,\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            {map(items, ({ value: v, label }) => (\r\n              <MenuItem\r\n                key={v}\r\n                value={v}\r\n                selected={v === value}\r\n                onClick={() => {\r\n                  state.close();\r\n                  onChange?.(v);\r\n                }}\r\n              >\r\n                {label}\r\n              </MenuItem>\r\n            ))}\r\n          </Menu>\r\n        </>\r\n      )}\r\n    </State>\r\n  );\r\n}\r\n\r\nexport type SelectFieldProps<T extends string> = Pick<\r\n  SelectProps<T>,\r\n  \"items\" | \"onChange\"\r\n> &\r\n  Omit<TextFieldProps, \"onChange\">;\r\n\r\nexport function SelectField<T extends string>(props: SelectFieldProps<T>) {\r\n  const { placeholder, value, items = [], onChange } = props;\r\n  return (\r\n    <TextField\r\n      sx={{ minWidth: 120 }}\r\n      select\r\n      label={placeholder}\r\n      value={value}\r\n      variant=\"filled\"\r\n      {...props}\r\n      onChange={(e) => onChange?.(e.target.value as T)}\r\n    >\r\n      {map(items, (item) => (\r\n        <MenuItem key={item.value} value={item.value}>\r\n          {item.label}\r\n        </MenuItem>\r\n      ))}\r\n    </TextField>\r\n  );\r\n}\r\n","import { Button, Typography as Type } from \"@material-ui/core\";\r\nimport { Select } from \"components/generic/Select\";\r\nimport { Space } from \"components/generic/Space\";\r\nimport { find, map, startCase } from \"lodash\";\r\nimport { FeatureDescriptor } from \"protocol/FeatureQuery\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype Props = {\r\n  label?: string;\r\n  value?: string;\r\n  onChange?: (key: string) => void;\r\n  items?: FeatureDescriptor[];\r\n  icon?: ReactNode;\r\n};\r\n\r\nexport function FeaturePicker({ label, value, onChange, items, icon }: Props) {\r\n  const selected = find(items, { id: value });\r\n  return (\r\n    <Select\r\n      placeholder={startCase(label)}\r\n      trigger={(props) => (\r\n        <Button {...props} disabled={!items?.length} startIcon={icon}>\r\n          {selected?.name ?? label}\r\n        </Button>\r\n      )}\r\n      items={map(items, ({ id, name, description }) => ({\r\n        value: id,\r\n        label: (\r\n          <>\r\n            <Type>{name}</Type>\r\n            <Space />\r\n            <Type variant=\"body2\" color=\"textSecondary\">\r\n              {description}\r\n            </Type>\r\n          </>\r\n        ),\r\n      }))}\r\n      value={selected?.id}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n}\r\n","import { fileDialog as file } from \"file-select-dialog\";\nimport { find, startCase } from \"lodash\";\nimport { Feature, FeatureDescriptor } from \"protocol/FeatureQuery\";\n\nfunction ext(s: string) {\n  return s.split(\".\").pop();\n}\nfunction name(s: string) {\n  return s.split(\".\").shift();\n}\n\nconst customMapId = \"internal/custom\";\n\nexport const custom = (map?: Partial<Feature>) => ({\n  name: map?.id === customMapId ? `Custom - ${map?.name}` : \"Custom\",\n  description: \"Import Map\",\n  id: customMapId,\n});\n\nexport async function upload(accept: FeatureDescriptor[]) {\n  const f = await file({\n    accept: accept.map(({ id }) => `.${id}`),\n    strict: true,\n  });\n  if (f) {\n    if (find(accept, { id: ext(f.name) })) {\n      return {\n        ...custom(),\n        format: ext(f.name),\n        content: await f.text(),\n        name: startCase(name(f.name)),\n      } as Feature;\n    } else {\n      throw new Error(`The format (${ext(f.name)}) is unsupported.`);\n    }\n  }\n}\n","import { Code as CodeIcon, MapTwoTone as MapIcon } from \"@material-ui/icons\";\r\nimport { useSnackbar } from \"components/generic/Snackbar\";\r\nimport { Space } from \"components/generic/Space\";\r\nimport { find } from \"lodash\";\r\nimport { useConnections } from \"slices/connections\";\r\nimport { useFeatures } from \"slices/features\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { FeaturePicker } from \"./FeaturePicker\";\r\nimport { custom, upload } from \"./upload\";\r\n\r\nexport const mapDefaults = { start: undefined, end: undefined };\r\n\r\nexport function Input() {\r\n  const notify = useSnackbar();\r\n  const [connections] = useConnections();\r\n  const [{ algorithms, maps, formats }] = useFeatures();\r\n  const [{ algorithm, map }, setUIState] = useUIState();\r\n\r\n  return (\r\n    <>\r\n      <FeaturePicker\r\n        icon={<MapIcon />}\r\n        label=\"map\"\r\n        value={map?.id}\r\n        items={[\r\n          custom(map),\r\n          ...maps.map((c) => ({\r\n            ...c,\r\n            description: find(connections, { url: c.source })?.name,\r\n          })),\r\n        ]}\r\n        onChange={async (v) => {\r\n          switch (v) {\r\n            case custom().id:\r\n              try {\r\n                const f = await upload(formats);\r\n                if (f) setUIState({ ...mapDefaults, map: f });\r\n              } catch (e) {\r\n                notify(`${e}`);\r\n              }\r\n              break;\r\n            default:\r\n              setUIState({ ...mapDefaults, map: find(maps, { id: v }) });\r\n              break;\r\n          }\r\n        }}\r\n      />\r\n      <Space />\r\n      <FeaturePicker\r\n        icon={<CodeIcon />}\r\n        label=\"algorithm\"\r\n        value={algorithm}\r\n        items={algorithms.map((c) => ({\r\n          ...c,\r\n          description: find(connections, { url: c.source })?.name,\r\n        }))}\r\n        onChange={(v) => setUIState({ algorithm: v })}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { IconButton, IconButtonProps, Tooltip } from \"@material-ui/core\";\r\nimport { startCase } from \"lodash\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype IconButtonWithTooltipProps = {\r\n  label: string;\r\n  icon: ReactNode;\r\n} & IconButtonProps;\r\n\r\nexport function IconButtonWithTooltip({\r\n  label,\r\n  icon,\r\n  ...rest\r\n}: IconButtonWithTooltipProps) {\r\n  return (\r\n    <Tooltip title={startCase(label)} key={label}>\r\n      <span>\r\n        <IconButton {...rest}>{icon}</IconButton>\r\n      </span>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import { createSlice } from \"./createSlice\";\r\nimport { Trace } from \"protocol/Trace\";\r\nimport { PathfindingTask } from \"protocol/SolveTask\";\r\nimport { ParamsOf } from \"protocol/Message\";\r\n\r\ntype Specimen = {\r\n  specimen?: Trace;\r\n  map?: string;\r\n} & Partial<ParamsOf<PathfindingTask>>;\r\n\r\nexport const [useSpecimen, SpecimenProvider] = createSlice<Specimen>({});\r\n","import { clamp } from \"lodash\";\r\nimport { useMemo } from \"react\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\n\r\nexport function usePlaybackState() {\r\n  const [{ specimen }] = useSpecimen();\r\n  const [{ playback, step = 0 }, setUIState] = useUIState();\r\n\r\n  const ready = !!specimen;\r\n  const playing = playback === \"playing\";\r\n  const [start, end] = [0, (specimen?.eventList?.length ?? 1) - 1];\r\n\r\n  return useMemo(() => {\r\n    const state = {\r\n      start,\r\n      end,\r\n      step,\r\n      canPlay: ready && !playing && step < end,\r\n      canPause: ready && playing,\r\n      canStop: ready,\r\n      canStepForward: ready && !playing && step < end,\r\n      canStepBackward: ready && !playing && step > 0,\r\n    };\r\n\r\n    const stepBy = (n: number) => clamp(step + n, start, end);\r\n\r\n    const callbacks = {\r\n      play: () => setUIState({ playback: \"playing\", step: stepBy(1) }),\r\n      pause: (n = 0) => setUIState({ playback: \"paused\", step: stepBy(n) }),\r\n      stop: () => setUIState({ step: start, playback: \"paused\" }),\r\n      stepForward: () => setUIState({ step: stepBy(1) }),\r\n      stepBackward: () => setUIState({ step: stepBy(-1) }),\r\n      tick: (n = 1) => setUIState({ playback: \"playing\", step: stepBy(n) }),\r\n    };\r\n\r\n    return {\r\n      playing: playback === \"playing\",\r\n      ...state,\r\n      ...callbacks,\r\n    };\r\n  }, [end, playback, playing, ready, setUIState, start, step]);\r\n}\r\n","import {\r\n  PauseOutlined as PauseIcon,\r\n  PlayArrowOutlined as PlayIcon,\r\n  SkipNextOutlined as ForwardIcon,\r\n  SkipPreviousOutlined as PreviousIcon,\r\n  StopOutlined as StopIcon,\r\n} from \"@material-ui/icons\";\r\nimport { IconButtonWithTooltip as Button } from \"components/generic/IconButtonWithTooltip\";\r\nimport { usePlaybackState } from \"hooks/usePlaybackState\";\r\n\r\nexport function Playback() {\r\n  const {\r\n    playing,\r\n    canPause,\r\n    canPlay,\r\n    canStepBackward,\r\n    canStepForward,\r\n    canStop,\r\n    pause,\r\n    play,\r\n    stepBackward,\r\n    stepForward,\r\n    stop,\r\n  } = usePlaybackState();\r\n  return (\r\n    <>\r\n      <Button\r\n        label=\"step-backward\"\r\n        icon={<PreviousIcon />}\r\n        onClick={stepBackward}\r\n        disabled={!canStepBackward}\r\n      />\r\n      <Button\r\n        {...(playing\r\n          ? {\r\n              label: \"pause\",\r\n              icon: <PauseIcon />,\r\n              onClick: () => pause(),\r\n              disabled: !canPause,\r\n            }\r\n          : {\r\n              label: \"play\",\r\n              icon: <PlayIcon />,\r\n              onClick: () => play(),\r\n              disabled: !canPlay,\r\n              color: \"primary\",\r\n            })}\r\n      />\r\n      <Button\r\n        label=\"step-forward\"\r\n        icon={<ForwardIcon />}\r\n        onClick={stepForward}\r\n        disabled={!canStepForward}\r\n      />\r\n      <Button\r\n        label=\"stop\"\r\n        icon={<StopIcon />}\r\n        onClick={stop}\r\n        disabled={!canStop}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport function useScrollState(threshold: number = 128) {\r\n  const [showControls, setShowControls] = useState(true);\r\n  const [isAbsoluteTop, setIsAbsoluteTop] = useState(true);\r\n  const [isTop, setIsTop] = useState(true);\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n  const lastTop = useRef(0);\r\n  useEffect(() => {\r\n    if (target) {\r\n      const listener = () => {\r\n        {\r\n          const newIsTop = target.scrollTop <= threshold;\r\n          if (newIsTop !== isTop) {\r\n            setIsTop(newIsTop);\r\n          }\r\n        }\r\n        {\r\n          const newIsTop = target.scrollTop <= 1;\r\n          if (newIsTop !== isAbsoluteTop) {\r\n            setIsAbsoluteTop(newIsTop);\r\n          }\r\n        }\r\n        if (lastTop.current - target.scrollTop) {\r\n          if (\r\n            Math.abs(lastTop.current - target.scrollTop) > 2 &&\r\n            lastTop.current >= 0\r\n          ) {\r\n            setShowControls(lastTop.current > target.scrollTop);\r\n          }\r\n          lastTop.current = target.scrollTop;\r\n        }\r\n      };\r\n      target.addEventListener(\"scroll\", listener, { passive: true });\r\n      return () => {\r\n        target.removeEventListener(\"scroll\", listener);\r\n      };\r\n    }\r\n  }, [target, isTop, isAbsoluteTop, lastTop, threshold]);\r\n  return [\r\n    showControls || isTop,\r\n    isTop,\r\n    isAbsoluteTop,\r\n    target,\r\n    setTarget,\r\n  ] as const;\r\n}\r\n","import {\r\n  ComponentProps,\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\n\r\ntype ScrollPanelProps = {\r\n  onTarget?: (e: HTMLDivElement | null) => void;\r\n} & ComponentProps<\"div\">;\r\n\r\nexport function ScrollPanel({\r\n  onTarget,\r\n  onScroll,\r\n  ...props\r\n}: ScrollPanelProps) {\r\n  const [target, setTarget] = useState<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (target && onScroll) {\r\n      target.addEventListener(\"scroll\", onScroll as any, { passive: true });\r\n      return () => target.removeEventListener(\"scroll\", onScroll as any);\r\n    }\r\n  }, [target, onScroll]);\r\n\r\n  return (\r\n    <div\r\n      {...props}\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        overflow: \"hidden scroll\",\r\n        ...props.style,\r\n      }}\r\n      ref={(e) => {\r\n        setTarget(e);\r\n        onTarget?.(e);\r\n      }}\r\n    >\r\n      <PanelContext.Provider value={target}>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          {props.children}\r\n        </div>\r\n      </PanelContext.Provider>\r\n    </div>\r\n  );\r\n}\r\nconst PanelContext = createContext<HTMLDivElement | null>(null);\r\n\r\nexport function usePanel() {\r\n  return useContext(PanelContext);\r\n}\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Dialog,\r\n  Fade,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { ArrowBack } from \"@material-ui/icons\";\r\nimport { ResizeSensor } from \"css-element-queries\";\r\nimport PopupState from \"material-ui-popup-state\";\r\nimport {\r\n  cloneElement,\r\n  ComponentProps,\r\n  CSSProperties,\r\n  ReactElement,\r\n  ReactNode,\r\n  SyntheticEvent,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { useScrollState } from \"hooks/useScrollState\";\r\nimport { useSmallDisplay } from \"hooks/useSmallDisplay\";\r\nimport { ScrollPanel, usePanel } from \"./ScrollPanel\";\r\n\r\nexport function AppBarTitle({ children }: { children?: ReactNode }) {\r\n  return <Typography variant=\"h6\">{children}</Typography>;\r\n}\r\n\r\nexport type Props = {\r\n  children?: ReactNode;\r\n  actions?: ReactNode;\r\n  width?: number;\r\n  height?: string | number;\r\n  onTarget?: (target: HTMLDivElement | null) => void;\r\n  variant?: \"default\" | \"submodal\";\r\n  scrollable?: boolean;\r\n};\r\n\r\ntype ModalAppBarProps = {\r\n  onClose?: () => void;\r\n  style?: CSSProperties;\r\n  elevatedStyle?: CSSProperties;\r\n  transitionProperties?: string[];\r\n  children?: ReactNode;\r\n  elevatedChildren?: ReactNode;\r\n  simple?: boolean;\r\n  position?: \"fixed\" | \"absolute\" | \"sticky\" | \"static\";\r\n};\r\n\r\nexport function ModalAppBar({\r\n  onClose = () => {},\r\n  style,\r\n  elevatedStyle,\r\n  children,\r\n  transitionProperties = [\"box-shadow\", \"background\", \"border-bottom\"],\r\n  elevatedChildren,\r\n  simple,\r\n  position = \"sticky\",\r\n}: ModalAppBarProps) {\r\n  const panel = usePanel();\r\n  const theme = useTheme();\r\n  const [, , isAbsoluteTop, , setTarget] = useScrollState();\r\n  useEffect(() => {\r\n    setTarget(panel);\r\n  }, [panel, setTarget]);\r\n\r\n  const styles = isAbsoluteTop\r\n    ? {\r\n        background: theme.palette.background.paper,\r\n        ...(!simple && {\r\n          boxShadow: theme.shadows[0],\r\n        }),\r\n        ...style,\r\n      }\r\n    : {\r\n        background: theme.palette.background.paper,\r\n        ...(!simple && {\r\n          boxShadow: theme.shadows[4],\r\n        }),\r\n        ...elevatedStyle,\r\n      };\r\n\r\n  return (\r\n    <AppBar\r\n      elevation={0}\r\n      position={position}\r\n      style={{\r\n        color: theme.palette.text.primary,\r\n        transition: theme.transitions.create(transitionProperties),\r\n        ...styles,\r\n      }}\r\n    >\r\n      <Toolbar>\r\n        <IconButton\r\n          style={{\r\n            marginRight: theme.spacing(1),\r\n          }}\r\n          aria-label=\"open drawer\"\r\n          edge=\"start\"\r\n          onClick={() => onClose()}\r\n        >\r\n          <ArrowBack />\r\n        </IconButton>\r\n\r\n        {children && (\r\n          <div\r\n            style={{\r\n              gridColumn: 1,\r\n              gridRow: 1,\r\n              flex: 1,\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <Fade\r\n              in={!!(!elevatedChildren || isAbsoluteTop)}\r\n              mountOnEnter\r\n              unmountOnExit\r\n            >\r\n              <Box style={{ width: \"100%\" }}>{children}</Box>\r\n            </Fade>\r\n          </div>\r\n        )}\r\n        {elevatedChildren && (\r\n          <div\r\n            style={{\r\n              gridColumn: 1,\r\n              gridRow: 1,\r\n              flex: 1,\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <Fade\r\n              in={!!(elevatedChildren && !isAbsoluteTop)}\r\n              mountOnEnter\r\n              unmountOnExit\r\n            >\r\n              <Box style={{ width: \"100%\" }}>{elevatedChildren}</Box>\r\n            </Fade>\r\n          </div>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default function Modal({\r\n  children,\r\n  actions,\r\n  width = 480,\r\n  height,\r\n  onTarget,\r\n  variant = \"default\",\r\n  scrollable = true,\r\n  ...props\r\n}: Props & ComponentProps<typeof Dialog>) {\r\n  const [content, setContent] = useState<ReactNode | undefined>(undefined);\r\n  useEffect(() => {\r\n    if (children) setContent(children);\r\n  }, [children]);\r\n  const theme = useTheme();\r\n  const sm = useSmallDisplay();\r\n\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n  const [contentRef, setContentRef] = useState<HTMLElement | null>(null);\r\n  const [hasOverflowingChildren, setHasOverflowingChildren] = useState(false);\r\n  const [childHeight, setChildHeight] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (target && contentRef && !sm && !height) {\r\n      const callback = () => {\r\n        const doesOverflow = window.innerHeight - 64 < contentRef.offsetHeight;\r\n        setHasOverflowingChildren(doesOverflow);\r\n        setChildHeight(\r\n          contentRef.offsetHeight <= 1 ? 0 : Math.ceil(contentRef.offsetHeight)\r\n        );\r\n      };\r\n      window.addEventListener(\"resize\", callback);\r\n      const ob = new ResizeSensor(contentRef, callback);\r\n      callback();\r\n      return () => {\r\n        window.removeEventListener(\"resize\", callback);\r\n        ob.detach();\r\n      };\r\n    }\r\n  }, [target, contentRef, sm, height]);\r\n\r\n  const useVariant = variant === \"submodal\" && sm;\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen={sm}\r\n      {...props}\r\n      style={{\r\n        ...(useVariant && {\r\n          paddingTop: theme.spacing(8),\r\n        }),\r\n        ...props.style,\r\n      }}\r\n      PaperProps={{\r\n        ref: (e: HTMLElement | null) => setTarget(e),\r\n        style: {\r\n          ...(useVariant && {\r\n            borderRadius: `${theme.shape.borderRadius}px ${theme.shape.borderRadius}px 0 0`,\r\n          }),\r\n          background: theme.palette.background.default,\r\n          overflow: \"hidden\",\r\n          height:\r\n            height && !sm\r\n              ? height\r\n              : hasOverflowingChildren || sm\r\n              ? \"100%\"\r\n              : childHeight || \"fit-content\",\r\n          position: \"relative\",\r\n          maxWidth: \"none\",\r\n          ...props.PaperProps?.style,\r\n        },\r\n        ...props.PaperProps,\r\n      }}\r\n    >\r\n      <ScrollPanel\r\n        style={{\r\n          height: \"100%\",\r\n          width: sm ? undefined : width,\r\n          maxWidth: \"100%\",\r\n          overflow: scrollable ? undefined : \"hidden\",\r\n        }}\r\n        onTarget={onTarget}\r\n      >\r\n        <div\r\n          ref={(e) => setContentRef(e)}\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n        >\r\n          {content}\r\n        </div>\r\n      </ScrollPanel>\r\n      {actions}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport function ManagedModal({\r\n  options: ModalProps,\r\n  appBar: ModalAppBarProps,\r\n  trigger = () => <></>,\r\n  children,\r\n}: {\r\n  options?: Props;\r\n  trigger?: (onClick: (e: SyntheticEvent<any, Event>) => void) => ReactElement;\r\n  appBar?: ModalAppBarProps;\r\n  children?: ReactNode;\r\n}) {\r\n  return (\r\n    <PopupState variant=\"popover\">\r\n      {({ open, close, isOpen }) => {\r\n        return (\r\n          <>\r\n            {cloneElement(trigger(open))}\r\n            <Modal open={isOpen} onClose={close} {...ModalProps}>\r\n              <ModalAppBar onClose={close} {...ModalAppBarProps} />\r\n              {children ?? ModalProps?.children}\r\n            </Modal>\r\n          </>\r\n        );\r\n      }}\r\n    </PopupState>\r\n  );\r\n}\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/hash.worker.ac18d53b.worker.js\");\n}\n","import { JSONRPCClient, JSONRPCResponse as Response } from \"json-rpc-2.0\";\nimport { NameMethodMap } from \"protocol\";\nimport { Request, RequestOf, ResponseOf } from \"protocol/Message\";\nimport { IPCWorker } from \"workers\";\nimport { Transport, TransportOptions } from \"./Transport\";\n\nexport class IPCTransport implements Transport {\n  worker: IPCWorker;\n  rpc: JSONRPCClient;\n\n  constructor(readonly options: TransportOptions) {\n    this.worker = new IPCWorker();\n    this.rpc = new JSONRPCClient(async (request: Request) => {\n      const listener = ({ data }: MessageEvent<Response>) => {\n        if (data.id === request.id) {\n          this.worker.removeEventListener(\"message\", listener);\n          this.rpc.receive(data);\n        }\n      };\n      this.worker.postMessage(request);\n      this.worker.addEventListener(\"message\", listener);\n    });\n  }\n\n  connect() {\n    this.worker.postMessage(this.options.url);\n    return new Promise<void>((res) => {\n      const listener = () => {\n        res();\n        this.worker.removeEventListener(\"message\", listener);\n      };\n      this.worker.addEventListener(\"message\", listener);\n    });\n  }\n\n  async disconnect() {\n    this.worker.terminate();\n  }\n\n  async call<T extends keyof NameMethodMap>(\n    name: T,\n    params?: RequestOf<NameMethodMap[T]>[\"params\"]\n  ): Promise<ResponseOf<NameMethodMap[T]>[\"result\"]> {\n    return await this.rpc.request(name, params);\n  }\n}\n","import { PathfindingTask, Scheme } from \"protocol/SolveTask\";\nimport { Transport } from \"./Transport\";\nimport url from \"url-parse\";\nimport { Dictionary } from \"lodash\";\n\nexport function parseURI(uri: string) {\n  const { protocol, pathname } = url(uri);\n  return {\n    scheme: protocol as Scheme,\n    content: decodeURIComponent(pathname),\n  };\n}\n\nexport const internal: Dictionary<Transport[\"call\"]> = {\n  trace: async (name, params) => {\n    switch (name) {\n      case \"about\":\n        return {\n          name: \"Search Trace\",\n          description: \"Provides JSON Search Trace Support\",\n          version: \"1.0.2\",\n        };\n      case \"features/formats\":\n        return [\n          {\n            id: \"json\",\n            name: \"Search Trace\",\n          },\n        ];\n      case \"solve/pathfinding\":\n        const { mapURI } = (params as PathfindingTask[\"params\"])!;\n        const { scheme, content } = parseURI(mapURI);\n        if ([\"map:\", \"trace:\"].includes(scheme)) return JSON.parse(content);\n    }\n  },\n};\n","import { NameMethodMap } from \"protocol\";\nimport { RequestOf, ResponseOf } from \"protocol/Message\";\nimport { Transport, TransportOptions } from \"./Transport\";\nimport url from \"url-parse\";\nimport { internal } from \"./internal\";\n\nexport class NativeTransport implements Transport {\n  handler: Transport[\"call\"];\n  constructor(readonly options: TransportOptions) {\n    const { hostname } = url(options.url);\n    this.handler = internal[hostname];\n  }\n\n  async connect() {}\n\n  async disconnect() {}\n\n  async call<T extends keyof NameMethodMap>(\n    name: T,\n    params?: RequestOf<NameMethodMap[T]>[\"params\"]\n  ): Promise<ResponseOf<NameMethodMap[T]>[\"result\"]> {\n    return await this.handler(name, params);\n  }\n}\n","import { JSONRPCClient, JSONRPCResponse as Response } from \"json-rpc-2.0\";\r\nimport { NameMethodMap } from \"protocol\";\r\nimport { Request, RequestOf, ResponseOf } from \"protocol/Message\";\r\nimport { io, Socket } from \"socket.io-client\";\r\nimport { Transport, TransportOptions } from \"./Transport\";\r\n\r\nexport class SocketIOTransport implements Transport {\r\n  rpc: JSONRPCClient;\r\n  socket: Socket;\r\n\r\n  constructor(readonly options: TransportOptions) {\r\n    this.socket = io(options.url);\r\n    this.rpc = new JSONRPCClient(async (request: Request) => {\r\n      const listener = (response: Response) => {\r\n        if (response.id === request.id) {\r\n          this.socket.off(\"response\", listener);\r\n          this.rpc.receive(response);\r\n        }\r\n      };\r\n      this.socket.emit(\"request\", request);\r\n      this.socket.on(\"response\", listener);\r\n    });\r\n  }\r\n\r\n  async connect() {\r\n    this.socket.connect();\r\n  }\r\n\r\n  async disconnect() {\r\n    this.socket.disconnect();\r\n  }\r\n\r\n  async call<T extends keyof NameMethodMap>(\r\n    name: T,\r\n    params?: RequestOf<NameMethodMap[T]>[\"params\"]\r\n  ): Promise<ResponseOf<NameMethodMap[T]>[\"result\"]> {\r\n    return await this.rpc.request(name, params);\r\n  }\r\n}\r\n","import { Dictionary, first, keys } from \"lodash\";\nimport { IPCTransport } from \"./IPCTransport\";\nimport { NativeTransport } from \"./NativeTransport\";\nimport { SocketIOTransport } from \"./SocketIOTransport\";\nimport { TransportConstructor } from \"./Transport\";\n\ntype TransportEntry = {\n  name: string;\n  constructor: TransportConstructor;\n};\n\nexport const transports: Dictionary<TransportEntry> = {\n  socketio: { name: \"socket.io\", constructor: SocketIOTransport },\n  ipc: { name: \"Web Worker\", constructor: IPCTransport },\n  native: { name: \"Internal\", constructor: NativeTransport },\n};\n\nexport function getTransport(key: string) {\n  return transports[key].constructor;\n}\n\nexport const defaultTransport = first(keys(transports))!;\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Collapse,\r\n  IconButton,\r\n  InputBase,\r\n  List,\r\n  ListSubheader,\r\n  Switch,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Add,\r\n  DeleteOutlined as DeleteIcon,\r\n  EditOutlined as EditIcon,\r\n  LabelOutlined as LabelIcon,\r\n} from \"@material-ui/icons\";\r\nimport { filter, map, sortBy, uniqBy } from \"lodash\";\r\nimport { nanoid as id } from \"nanoid\";\r\nimport {\r\n  cloneElement,\r\n  ComponentProps,\r\n  CSSProperties,\r\n  forwardRef,\r\n  ReactElement,\r\n  ReactNode,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\nexport const DefaultListEditorInput = forwardRef(function StyledInputBase(\r\n  props: ComponentProps<typeof InputBase>,\r\n  ref\r\n) {\r\n  return (\r\n    <InputBase\r\n      fullWidth\r\n      {...props}\r\n      placeholder=\"Untitled item\"\r\n      inputRef={ref}\r\n    />\r\n  );\r\n});\r\n\r\ntype Key = string | number;\r\n\r\ntype Item<T = any> = {\r\n  element?: ReactElement;\r\n  enabled?: boolean;\r\n  value?: T;\r\n  id: Key;\r\n};\r\n\r\ntype Props<T = any> = {\r\n  extras?: ReactNode;\r\n  addItemLabel?: ReactNode;\r\n  label?: ReactNode;\r\n  text?: ReactNode;\r\n  items?: Item<T>[];\r\n  useSwitch?: boolean;\r\n  useDelete?: boolean;\r\n  onChangeItem?: (key: Key, value: T, enabled: boolean) => void;\r\n  onAddItem?: () => void;\r\n  onDeleteItem?: (key: Key) => void;\r\n  icon?: ReactElement | null;\r\n  useEdit?: boolean;\r\n  variant?: \"outlined\" | \"default\";\r\n  extrasPlacement?: \"flex-start\" | \"center\" | \"flex-end\";\r\n  placeholderText?: ReactNode;\r\n  cardStyle?: CSSProperties;\r\n  autoFocus?: boolean;\r\n  getCategory?: (value?: T) => string;\r\n  getOrder?: (value?: T) => string | number;\r\n};\r\n\r\ntype ListEditorFieldProps = {\r\n  isPlaceholder?: boolean;\r\n  i?: number;\r\n};\r\n\r\nfunction useInitialRender() {\r\n  const ref = useRef(false);\r\n  const current = ref.current;\r\n  ref.current = true;\r\n  return !current;\r\n}\r\n\r\nexport function ListEditorField({\r\n  icon = <LabelIcon />,\r\n  useSwitch,\r\n  useDelete,\r\n  useEdit: useEditButton = true,\r\n  onChangeItem = () => {},\r\n  onDeleteItem = () => {},\r\n  enabled = false,\r\n  element = <DefaultListEditorInput />,\r\n  value,\r\n  id,\r\n  i = 0,\r\n  variant = \"default\",\r\n  extrasPlacement = \"center\",\r\n  autoFocus,\r\n  cardStyle: style,\r\n}: Props & ListEditorFieldProps & Item) {\r\n  const [field, setField] = useState<HTMLElement | null>(null);\r\n  const theme = useTheme();\r\n  const content = (\r\n    <Box display=\"flex\" alignItems={extrasPlacement}>\r\n      {icon !== null &&\r\n        cloneElement(icon, {\r\n          style: {\r\n            marginRight: theme.spacing(1),\r\n            marginTop: theme.spacing(0.5),\r\n            marginBottom: theme.spacing(0.5),\r\n          },\r\n          color: \"action\",\r\n        })}\r\n      <Box\r\n        flexGrow={1}\r\n        style={{\r\n          marginLeft: -theme.spacing(icon === null ? 2 : 0),\r\n        }}\r\n      >\r\n        {cloneElement(element, {\r\n          onDelete: () => onDeleteItem(id ?? i),\r\n          autoFocus,\r\n          value,\r\n          key: id ?? i,\r\n          onValueChange: (e: any) => onChangeItem(id ?? i, e, enabled),\r\n          onChange: (e: any) => onChangeItem(id ?? i, e.target.value, enabled),\r\n          ref: (e: HTMLElement | null) => setField(e),\r\n        })}\r\n      </Box>\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        {useSwitch && (\r\n          <Switch\r\n            color=\"primary\"\r\n            edge=\"end\"\r\n            onChange={(_, v) => onChangeItem(id ?? i, value, v)}\r\n            checked={enabled}\r\n          />\r\n        )}\r\n        {useEditButton && (\r\n          <IconButton\r\n            edge=\"end\"\r\n            onClick={() => {\r\n              if (field?.focus) {\r\n                field.focus();\r\n              }\r\n            }}\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n        )}\r\n        {useDelete && (\r\n          <IconButton onClick={() => onDeleteItem(id ?? i)}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n  return (\r\n    <Box\r\n      style={{\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n      }}\r\n    >\r\n      {variant === \"outlined\" ? (\r\n        <Card\r\n          variant=\"outlined\"\r\n          style={{\r\n            borderColor: \"transparent\",\r\n            paddingRight: theme.spacing(2),\r\n            transition: theme.transitions.create([\r\n              \"box-shadow\",\r\n              \"border-color\",\r\n            ]),\r\n            ...style,\r\n          }}\r\n        >\r\n          {content}\r\n        </Card>\r\n      ) : (\r\n        content\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function Editor<T>(props: Props<T>) {\r\n  const {\r\n    addItemLabel = \"Add Item\",\r\n    label,\r\n    text,\r\n    onAddItem = () => {},\r\n    onDeleteItem = () => {},\r\n    items = [],\r\n    placeholderText,\r\n    autoFocus,\r\n    getCategory,\r\n    getOrder,\r\n    extras,\r\n  } = props;\r\n  const isInitialRender = useInitialRender();\r\n  const theme = useTheme();\r\n  const [intermediateItems, setIntermediateItems] = useState(items);\r\n  const [newIndex, setNewIndex] = useState(-1);\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setIntermediateItems(items);\r\n    }, theme.transitions.duration.standard);\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [items, setIntermediateItems, theme.transitions.duration.standard]);\r\n  const children = uniqBy([...intermediateItems, ...items], (c) => c.id)\r\n    .map((c) => items.find((c2) => c.id === c2.id) ?? c)\r\n    .map((x, i) => {\r\n      const { enabled, element, value, id } = x ?? {};\r\n      return {\r\n        value,\r\n        render: (p?: ComponentProps<typeof ListEditorField>) => (\r\n          <Collapse\r\n            in={!!items.find((p) => p.id === x.id)}\r\n            unmountOnExit\r\n            appear={!isInitialRender}\r\n            mountOnEnter\r\n          >\r\n            <ListEditorField\r\n              {...props}\r\n              onDeleteItem={(e) => {\r\n                onDeleteItem(e);\r\n                setNewIndex(-1);\r\n              }}\r\n              enabled={enabled}\r\n              element={element}\r\n              value={value}\r\n              id={id}\r\n              i={i}\r\n              autoFocus={autoFocus || i === newIndex}\r\n              {...p}\r\n            />\r\n          </Collapse>\r\n        ),\r\n        key: id,\r\n        in: !!items.find((p) => p.id === x.id),\r\n      };\r\n    });\r\n  const sorted = sortBy(\r\n    children,\r\n    (c) => getCategory?.(c.value),\r\n    (c) => getOrder?.(c.value)\r\n  ).map((c) => ({\r\n    ...c,\r\n    render: (p?: ComponentProps<typeof ListEditorField>) => (\r\n      <Box key={c.key}>{c.render(p)}</Box>\r\n    ),\r\n  }));\r\n  return (\r\n    <List\r\n      subheader={\r\n        label || text ? (\r\n          <>\r\n            <ListSubheader disableSticky>\r\n              {label && (\r\n                <Typography variant=\"body1\" gutterBottom color=\"textPrimary\">\r\n                  {label}\r\n                </Typography>\r\n              )}\r\n              {text && (\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                  style={{ marginBottom: theme.spacing(3) }}\r\n                >\r\n                  {text}\r\n                </Typography>\r\n              )}\r\n            </ListSubheader>\r\n          </>\r\n        ) : undefined\r\n      }\r\n    >\r\n      <Box mt={getCategory ? -1 : 0}>\r\n        {(() => {\r\n          const out: ReactNode[] = [];\r\n          sorted.forEach((c, i) => {\r\n            if (getCategory && isNewCategory(sorted, i, c)) {\r\n              out.push(\r\n                <Collapse\r\n                  in={items.some(\r\n                    (c2) => getCategory(c2.value) === getCategory(c.value)\r\n                  )}\r\n                  appear\r\n                  key={getCategory(c.value)}\r\n                >\r\n                  <Box pl={2} pb={2} pt={1}>\r\n                    <Typography variant=\"overline\" color=\"textSecondary\">\r\n                      {getCategory(c.value)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Collapse>\r\n              );\r\n            }\r\n            out.push(c.render());\r\n          });\r\n          return out;\r\n        })()}\r\n      </Box>\r\n      <Collapse in={!items?.length}>\r\n        <Box ml={2} mb={1} pt={getCategory ? 1 : 0}>\r\n          <Typography color=\"textSecondary\">\r\n            {placeholderText ?? \"No items\"}\r\n          </Typography>\r\n        </Box>\r\n      </Collapse>\r\n      <Box p={2} mb={-3}>\r\n        <Button\r\n          disableElevation\r\n          variant=\"contained\"\r\n          startIcon={<Add />}\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            onAddItem();\r\n            setNewIndex(items.length);\r\n          }}\r\n        >\r\n          {addItemLabel}\r\n        </Button>\r\n        {extras}\r\n      </Box>\r\n    </List>\r\n  );\r\n\r\n  function isNewCategory(\r\n    arr: {\r\n      value: T | undefined;\r\n      render: (\r\n        p?: (Props<any> & ListEditorFieldProps & Item<any>) | undefined\r\n      ) => JSX.Element;\r\n      key: Key;\r\n    }[],\r\n    i: number,\r\n    c: {\r\n      value: T | undefined;\r\n      render: (\r\n        p?: (Props<any> & ListEditorFieldProps & Item<any>) | undefined\r\n      ) => JSX.Element;\r\n      key: Key;\r\n    }\r\n  ) {\r\n    return !!(\r\n      getCategory &&\r\n      (arr[i - 1] === undefined ||\r\n        getCategory(arr[i - 1].value) !== getCategory(c.value))\r\n    );\r\n  }\r\n}\r\n\r\nexport function ListEditor<T extends { key: string }>({\r\n  onChange,\r\n  value = [],\r\n  editor,\r\n  create,\r\n  ...props\r\n}: Omit<Props<T>, \"items\"> & {\r\n  items?: T[];\r\n  onChange?: (value: T[]) => void;\r\n  value?: T[];\r\n  editor?: (item: T) => ReactElement;\r\n  create?: () => Omit<T, \"key\">;\r\n}) {\r\n  const [state, setState] = useState(value ?? []);\r\n  function handleChange(next: T[]) {\r\n    setState(next);\r\n    onChange?.(next);\r\n  }\r\n  useEffect(() => {\r\n    setState(value);\r\n  }, [value]);\r\n  return (\r\n    <Box sx={{ ml: -2 }}>\r\n      <Editor\r\n        {...props}\r\n        items={state.map((c) => ({\r\n          id: c.key,\r\n          value: c,\r\n          element: editor?.(c),\r\n        }))}\r\n        useDelete\r\n        useEdit={false}\r\n        onAddItem={() =>\r\n          handleChange?.([...state, { key: id(), ...create?.() } as T])\r\n        }\r\n        onDeleteItem={(k) => {\r\n          return handleChange?.(filter(state, (b) => b.key !== k));\r\n        }}\r\n        onChangeItem={(k, v) =>\r\n          handleChange?.(map(state, (b) => (b.key === k ? v : b)))\r\n        }\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { Typography as Type } from \"@material-ui/core\";\r\nimport { FiberManualRecord as Dot } from \"@material-ui/icons\";\r\nimport { ComponentProps, ReactNode } from \"react\";\r\n\r\nexport function OverlineDot(props: ComponentProps<typeof Dot>) {\r\n  return (\r\n    <Dot\r\n      {...props}\r\n      sx={{\r\n        fontSize: 12,\r\n        transform: \"translateY(1.75px) translateX(-2px)\",\r\n        ...props.sx,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\ntype Props = {\r\n  children?: ReactNode;\r\n};\r\n\r\nexport function Overline({ children }: Props) {\r\n  return (\r\n    <Type variant=\"overline\" sx={{ my: -0.75, display: \"block\" }}>\r\n      {children}\r\n    </Type>\r\n  );\r\n}\r\n","import { find } from \"lodash\";\nimport { useCallback } from \"react\";\nimport { Connection, useConnections } from \"slices/connections\";\n\nexport function useConnectionResolver() {\n  const [connections] = useConnections();\n  return useCallback(\n    (model?: Partial<Connection>) => find(connections, model),\n    [connections]\n  );\n}\n\nexport function useConnection(url: string) {\n  const resolve = useConnectionResolver();\n  return resolve({ url });\n}\n","import { useCallback } from \"react\";\r\nimport { createSlice } from \"./createSlice\";\r\n\r\ntype Loading = {\r\n  specimen?: boolean;\r\n  map?: boolean;\r\n  connections?: boolean;\r\n  features?: boolean;\r\n};\r\n\r\nexport const [useLoading, LoadingProvider] = createSlice<Loading>({});\r\n\r\nexport function useLoadingState(key: keyof Loading) {\r\n  const [, setLoading] = useLoading();\r\n\r\n  return useCallback(\r\n    async <T>(task: () => Promise<T>) => {\r\n      setLoading({ [key]: true });\r\n      const out = await task();\r\n      setLoading({ [key]: false });\r\n      return out;\r\n    },\r\n    [key, setLoading]\r\n  );\r\n}\r\n","import { find } from \"lodash\";\nimport { useLoading } from \"slices/loading\";\nimport { useSettings } from \"slices/settings\";\nimport { useConnectionResolver } from \"./useConnectionResolver\";\n\nexport type ConnectionStatus =\n  | \"connected\"\n  | \"connecting\"\n  | \"error\"\n  | \"not-connected\";\n\nexport function useConnectionStatus(url?: string): ConnectionStatus {\n  const [{ connections: loading }] = useLoading();\n  const resolve = useConnectionResolver();\n  const [{ remote }] = useSettings();\n  const entry = find(remote, { url });\n\n  return entry && !entry?.disabled\n    ? resolve({ url })\n      ? \"connected\"\n      : loading\n      ? \"connecting\"\n      : url\n      ? \"error\"\n      : \"not-connected\"\n    : \"not-connected\";\n}\n","import {\n  Switch,\n  TextField,\n  Tooltip,\n  Typography as Type,\n} from \"@material-ui/core\";\nimport { EditTwoTone as EditIcon } from \"@material-ui/icons\";\nimport { Box } from \"@material-ui/system\";\nimport { Flex } from \"components/generic/Flex\";\nimport { IconButtonWithTooltip as IconButton } from \"components/generic/IconButtonWithTooltip\";\nimport {\n  AppBarTitle as Title,\n  ManagedModal as Dialog,\n} from \"components/generic/Modal\";\nimport { OverlineDot as Dot } from \"components/generic/Overline\";\nimport { Space } from \"components/generic/Space\";\nimport { useConnection } from \"hooks/useConnectionResolver\";\nimport { useConnectionStatus } from \"hooks/useConnectionStatus\";\nimport { entries, startCase } from \"lodash\";\nimport { merge } from \"slices/reducers\";\nimport { Remote } from \"slices/settings\";\nimport { SelectField as Select } from \"components/generic/Select\";\nimport { transports } from \"client\";\n\nconst statusColor = {\n  connected: \"success.light\",\n  connecting: \"warning.light\",\n  error: \"error.light\",\n  \"not-connected\": \"text.disabled\",\n};\n\ntype ServerEditorProps = {\n  value: Remote;\n  onValueChange?: (e: Remote) => void;\n};\n\nexport function ServerEditor({ value, onValueChange }: ServerEditorProps) {\n  const connection = useConnection(value.url);\n  const status = useConnectionStatus(value.url);\n\n  function handleChange(next: Partial<Remote>) {\n    onValueChange?.(merge(value, next));\n  }\n\n  return (\n    <>\n      <Flex alignItems=\"center\" py={0.5}>\n        <Dot sx={{ color: statusColor[status] }} />\n        <Space />\n        <Box flex={1}>\n          <Type>\n            {connection\n              ? `${connection.name} ${connection.version}`\n              : startCase(status)}\n          </Type>\n          <Type variant=\"body2\" color=\"text.secondary\">\n            {connection?.description ?? (value?.url || \"No URL\")}\n          </Type>\n        </Box>\n        <Tooltip title={`${value.disabled ? \"Enable\" : \"Disable\"} Connection`}>\n          <Box>\n            <Switch\n              checked={!value.disabled}\n              onChange={(_, v) => handleChange({ disabled: !v })}\n            />\n          </Box>\n        </Tooltip>\n        <Dialog\n          trigger={(onClick) => (\n            <IconButton\n              icon={<EditIcon />}\n              label=\"Edit Connection\"\n              {...{ onClick }}\n            />\n          )}\n          appBar={{ children: <Title>Edit Connection</Title> }}\n        >\n          <Box p={2.5}>\n            <TextField\n              value={value.url}\n              onChange={(e) => handleChange({ url: e.target.value })}\n              fullWidth\n              variant=\"filled\"\n              label=\"URL\"\n              sx={{ mb: 2 }}\n            />\n            <Select\n              placeholder=\"Connection Type\"\n              items={entries(transports).map(([k, { name }]) => ({\n                value: k,\n                label: name,\n              }))}\n              fullWidth\n              value={value.transport}\n              onChange={(v) => handleChange({ transport: v })}\n            />\n          </Box>\n        </Dialog>\n      </Flex>\n    </>\n  );\n}\n","import { Button } from \"@material-ui/core\";\nimport { ReplayOutlined as ResetIcon } from \"@material-ui/icons\";\nimport { defaultTransport } from \"client\";\nimport { ListEditor } from \"components/generic/ListEditor\";\nimport { debounce } from \"lodash\";\nimport { defaultRemotes, Remote, useSettings } from \"slices/settings\";\nimport { ServerEditor } from \"./ServerEditor\";\n\nexport function ServerListEditor() {\n  const [{ remote }, setSettings] = useSettings();\n  return (\n    <>\n      <ListEditor<Remote>\n        editor={(v) => <ServerEditor value={v} />}\n        icon={null}\n        value={remote}\n        onChange={debounce((v) => setSettings({ remote: v }), 300)}\n        addItemLabel=\"Add Solver\"\n        create={() => ({\n          transport: defaultTransport,\n          url: \"\",\n          disabled: true,\n        })}\n        extras={\n          <Button\n            startIcon={<ResetIcon />}\n            sx={{ ml: 2 }}\n            onClick={() => setSettings({ remote: defaultRemotes })}\n          >\n            Reset to Defaults\n          </Button>\n        }\n      />\n    </>\n  );\n}\n","import {\n  Box,\n  Divider,\n  Slider,\n  Switch,\n  Tab,\n  Typography as Type,\n} from \"@material-ui/core\";\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\nimport { Flex } from \"components/generic/Flex\";\nimport { Space } from \"components/generic/Space\";\nimport { ReactNode, useState } from \"react\";\nimport { defaultPlaybackRate as baseRate, useSettings } from \"slices/settings\";\nimport { ServerListEditor } from \"./ServerListEditor\";\n\nconst formatLabel = (v: number) => `${v}x`;\n\nexport function SettingsEditor() {\n  const [{ playbackRate = 1, acrylic }, setSettings] = useSettings();\n  const [tab, setTab] = useState(\"general\");\n  function renderHeading(label: ReactNode) {\n    return (\n      <Type variant=\"overline\" color=\"textSecondary\">\n        {label}\n      </Type>\n    );\n  }\n  function renderLabel(label: ReactNode) {\n    return <Type variant=\"body1\">{label}</Type>;\n  }\n  return (\n    <TabContext value={tab}>\n      <TabList onChange={(_, v) => setTab(v)}>\n        <Tab label=\"General\" value=\"general\" />\n        <Tab label=\"Connections\" value=\"connections\" />\n      </TabList>\n      <Divider />\n      <TabPanel value=\"general\">\n        <Box>\n          {renderHeading(\"Playback\")}\n          <Flex alignItems=\"center\">\n            {renderLabel(\"Playback Rate\")}\n            <Space flex={1} />\n            <Slider\n              sx={{ maxWidth: 320, mr: 2 }}\n              marks={[0.25, 1, 5].map((v) => ({\n                value: v * baseRate,\n                label: formatLabel(v),\n              }))}\n              step={0.25 * baseRate}\n              min={0.25 * baseRate}\n              max={5 * baseRate}\n              valueLabelFormat={(v) => formatLabel(v / baseRate)}\n              valueLabelDisplay=\"auto\"\n              defaultValue={playbackRate}\n              onChangeCommitted={(_, v) =>\n                setSettings({ playbackRate: v as number })\n              }\n            />\n          </Flex>\n          {renderHeading(\"UI\")}\n          <Flex alignItems=\"center\">\n            {renderLabel(\"Use Acrylic (Impacts Performance)\")}\n            <Space flex={1} />\n            <Switch\n              defaultChecked={!!acrylic}\n              onChange={(_, v) => setSettings({ acrylic: v })}\n            />\n          </Flex>\n        </Box>\n      </TabPanel>\n      <TabPanel value=\"connections\">\n        <Box>\n          {renderHeading(\"Solvers\")}\n          <ServerListEditor />\n        </Box>\n      </TabPanel>\n    </TabContext>\n  );\n}\n","import { SettingsTwoTone as SettingsIcon } from \"@material-ui/icons\";\nimport { IconButtonWithTooltip } from \"components/generic/IconButtonWithTooltip\";\nimport {\n  AppBarTitle as Title,\n  ManagedModal as Dialog,\n} from \"components/generic/Modal\";\nimport { SettingsEditor } from \"components/settings-editor/SettingsEditor\";\n\nexport function Settings() {\n  return (\n    <>\n      <Dialog\n        trigger={(onClick) => (\n          <IconButtonWithTooltip\n            {...{ onClick }}\n            icon={<SettingsIcon fontSize=\"small\" color=\"primary\" />}\n            label=\"Settings\"\n          />\n        )}\n        options={{ width: 960, scrollable: false }}\n        appBar={{ children: <Title>Settings</Title> }}\n      >\n        <SettingsEditor />\n      </Dialog>\n    </>\n  );\n}\n","import { Typography as Type, BoxProps, Box } from \"@material-ui/core\";\r\n\r\nexport function Title(props: BoxProps) {\r\n  return (\r\n    <Box bgcolor=\"primary.main\" p={2} {...props}>\r\n      <Type\r\n        variant=\"body1\"\r\n        color=\"text.secondary\"\r\n        sx={{\r\n          color: \"primary.contrastText\",\r\n          whiteSpace: \"nowrap\",\r\n          fontWeight: 500,\r\n        }}\r\n      >\r\n        PFAlgoViz\r\n      </Type>\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  FormControlLabel,\r\n  Switch as MuiSwitch,\r\n  SwitchProps as MuiSwitchProps,\r\n} from \"@material-ui/core\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype SwitchProps = { label?: ReactNode } & MuiSwitchProps;\r\n\r\nexport function Switch({ label = <></>, ...props }: SwitchProps) {\r\n  return (\r\n    <FormControlLabel\r\n      control={<MuiSwitch defaultChecked {...props} />}\r\n      {...{ label }}\r\n    />\r\n  );\r\n}\r\n","import { Comparator } from \"slices/UIState\";\r\n\r\nexport const comparators: Comparator[] = [\r\n  {\r\n    key: \"equal\",\r\n    apply: (a, b) => a === b,\r\n  },\r\n  {\r\n    key: \"less-than\",\r\n    apply: (a, b) => a < b,\r\n  },\r\n  {\r\n    key: \"greater-than\",\r\n    apply: (a, b) => a > b,\r\n  },\r\n];\r\n","export const intrinsicProperties = [\"f\", \"g\"];\r\n","import { TraceEventType } from \"protocol/Trace\";\r\n\r\nexport const eventTypes: (TraceEventType | \"any\")[] = [\r\n  \"any\",\r\n  \"source\",\r\n  \"destination\",\r\n  \"expanding\",\r\n  \"generating\",\r\n  \"closing\",\r\n];\r\n","import { Divider, TextField, Typography as Type } from \"@material-ui/core\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { SelectField as Select } from \"components/generic/Select\";\r\nimport { Space } from \"components/generic/Space\";\r\nimport { Switch } from \"components/generic/Switch\";\r\nimport { find, last, map, startCase } from \"lodash\";\r\nimport { Breakpoint } from \"slices/UIState\";\r\nimport { comparators } from \"./comparators\";\r\nimport { eventTypes } from \"./eventTypes\";\r\n\r\ntype BreakpointEditorProps = {\r\n  value: Breakpoint;\r\n  onValueChange?: (v: Breakpoint) => void;\r\n  properties?: string[];\r\n};\r\n\r\nexport function BreakpointEditor({\r\n  value,\r\n  onValueChange: onChange,\r\n  properties,\r\n}: BreakpointEditorProps) {\r\n  function handleChange(next: Partial<Breakpoint>) {\r\n    onChange?.({ ...value, ...next });\r\n  }\r\n  return (\r\n    <Flex>\r\n      <Select\r\n        placeholder=\"Event\"\r\n        sx={{ minWidth: 160 }}\r\n        items={map(eventTypes, (c) => ({ value: c, label: startCase(c) }))}\r\n        onChange={(v) => handleChange({ type: v === \"any\" ? undefined : v })}\r\n        value={value.type ?? \"any\"}\r\n      />\r\n      <Divider flexItem orientation=\"vertical\" sx={{ mx: 2 }} />\r\n      <Select\r\n        placeholder=\"Property\"\r\n        sx={{\r\n          minWidth: 140,\r\n          textOverflow: \"ellipsis\",\r\n          whiteSpace: \"nowrap\",\r\n        }}\r\n        items={map(properties, (c) => ({\r\n          value: c,\r\n          label: (\r\n            <>\r\n              {last(c.split(\".\"))}\r\n              <Space />\r\n              <Type\r\n                color=\"textSecondary\"\r\n                variant=\"body2\"\r\n                component=\"span\"\r\n              >{`event.${c}`}</Type>\r\n            </>\r\n          ),\r\n        }))}\r\n        onChange={(v) => handleChange({ property: v })}\r\n        value={value.property}\r\n      />\r\n      <Space />\r\n      <Select\r\n        placeholder=\"Condition\"\r\n        items={comparators.map((c) => ({\r\n          value: c.key,\r\n          label: startCase(c.key),\r\n        }))}\r\n        value={value?.condition?.key ?? comparators?.[0]?.key}\r\n        onChange={(v) =>\r\n          handleChange({ condition: find(comparators, { key: v }) })\r\n        }\r\n      />\r\n      <Space />\r\n      <TextField\r\n        label=\"Reference\"\r\n        fullWidth\r\n        value={`${value.reference ?? 0}`}\r\n        variant=\"filled\"\r\n        inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\r\n        onChange={(v) => handleChange({ reference: +v.target.value })}\r\n        type=\"number\"\r\n      />\r\n      <Space sx={{ px: 2 }} />\r\n      <Switch\r\n        checked={!!value.active}\r\n        onChange={(_, v) => handleChange({ active: v })}\r\n      />\r\n    </Flex>\r\n  );\r\n}\r\n","export const propertyPaths = [\"variables\"];\r\n","import { ListEditor } from \"components/generic/ListEditor\";\r\nimport { debounce, flatMap as flat, get, keys, map, uniq } from \"lodash\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { Breakpoint, useUIState } from \"slices/UIState\";\r\nimport { comparators } from \"./comparators\";\r\nimport { intrinsicProperties } from \"./intrinsicProperties\";\r\nimport { BreakpointEditor } from \"./BreakpointEditor\";\r\nimport { Box } from \"@material-ui/system\";\r\nimport { propertyPaths as paths } from \"./propertyPaths\";\r\n\r\nexport function BreakpointListEditor() {\r\n  const [{ breakpoints = [] }, setUIState] = useUIState();\r\n  const [{ specimen }] = useSpecimen();\r\n\r\n  const properties = uniq([\r\n    ...intrinsicProperties,\r\n    ...flat(paths, (p) =>\r\n      flat(specimen?.nodeStructure, (v) =>\r\n        map(keys(get(v, p)), (k) => `${p}.${k}`)\r\n      )\r\n    ),\r\n  ]);\r\n\r\n  return (\r\n    <Box sx={{ overflow: \"auto hidden\", width: \"100%\" }}>\r\n      <Box sx={{ minWidth: 720, mb: 2 }}>\r\n        <ListEditor<Breakpoint>\r\n          icon={null}\r\n          value={breakpoints}\r\n          useDelete\r\n          useEdit={false}\r\n          editor={(v) => <BreakpointEditor value={v} properties={properties} />}\r\n          create={() => ({\r\n            active: true,\r\n            property: properties?.[0],\r\n            condition: comparators?.[0],\r\n            type: undefined,\r\n            reference: 0,\r\n          })}\r\n          onChange={debounce((v) => setUIState({ breakpoints: v }), 1000)}\r\n          addItemLabel=\"Breakpoint\"\r\n          placeholderText=\"Click the button below to add a breakpoint.\"\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { debounce } from \"lodash\";\r\nimport AutoSize from \"react-virtualized-auto-sizer\";\r\nimport { useUIState } from \"slices/UIState\";\r\n\r\nconst DELAY = 2500;\r\n\r\nexport function ScriptEditor() {\r\n  const [{ code }, setUIState] = useUIState();\r\n  return (\r\n    <Flex height=\"70vh\" overflow=\"hidden\">\r\n      <AutoSize>\r\n        {({ width, height }) => (\r\n          <Editor\r\n            width={width}\r\n            loading={<CircularProgress variant=\"indeterminate\" />}\r\n            height={height}\r\n            language=\"javascript\"\r\n            defaultValue={code}\r\n            onChange={debounce((v) => setUIState({ code: v }), DELAY)}\r\n            options={{\r\n              minimap: {\r\n                enabled: false,\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n      </AutoSize>\r\n    </Flex>\r\n  );\r\n}\r\n","import download from \"downloadjs\";\nimport stringify from \"json-beautify\";\nimport { Trace } from \"protocol/Trace\";\n\nexport function saveJSON(filename: string, specimen?: Trace) {\n  download(\n    stringify(specimen, null as any, 2),\n    `${filename}.json`,\n    \"application/json\"\n  );\n}\n","import {\r\n  Box,\r\n  Divider,\r\n  Tab,\r\n  Typography as Type,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { Space } from \"components/generic/Space\";\r\nimport { Switch } from \"components/generic/Switch\";\r\nimport { ReactNode, useState } from \"react\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { BreakpointListEditor } from \"../breakpoint-editor/BreakpointListEditor\";\r\nimport { ScriptEditor } from \"components/script-editor/ScriptEditor\";\r\nimport { saveJSON as save } from \"./saveJSON\";\r\n\r\nexport function DebugOptionsEditor() {\r\n  const [{ specimen, format, algorithm }] = useSpecimen();\r\n  const [{ monotonicF, monotonicG }, setUIState] = useUIState();\r\n  const [tab, setTab] = useState(\"standard\");\r\n  function renderHeading(label: ReactNode) {\r\n    return (\r\n      <Type variant=\"overline\" color=\"textSecondary\">\r\n        {label}\r\n      </Type>\r\n    );\r\n  }\r\n  return (\r\n    <TabContext value={tab}>\r\n      <TabList onChange={(_, v) => setTab(v)}>\r\n        <Tab label=\"Standard\" value=\"standard\" />\r\n        <Tab label=\"Advanced\" value=\"advanced\" />\r\n      </TabList>\r\n      <Divider />\r\n      <TabPanel value=\"standard\">\r\n        <Box>\r\n          {renderHeading(\"General\")}\r\n          <Flex>\r\n            <Switch\r\n              label=\"Monotonic f value\"\r\n              checked={!!monotonicF}\r\n              onChange={(_, v) => setUIState({ monotonicF: v })}\r\n            />\r\n            <Space />\r\n            <Switch\r\n              label=\"Monotonic g value\"\r\n              checked={!!monotonicG}\r\n              onChange={(_, v) => setUIState({ monotonicG: v })}\r\n            />\r\n          </Flex>\r\n        </Box>\r\n        <Space />\r\n        <Box>\r\n          {renderHeading(\"Breakpoints\")}\r\n          <BreakpointListEditor />\r\n        </Box>\r\n        <Box>\r\n          {renderHeading(\"Export\")}\r\n          <Flex mt={1}>\r\n            <Button\r\n              variant=\"contained\"\r\n              disableElevation\r\n              disabled={!specimen}\r\n              onClick={() => save(`${format} - ${algorithm}`, specimen)}\r\n            >\r\n              Save Trace as JSON\r\n            </Button>\r\n          </Flex>\r\n        </Box>\r\n      </TabPanel>\r\n      <TabPanel value=\"advanced\" sx={{ p: 0 }}>\r\n        <ScriptEditor />\r\n      </TabPanel>\r\n    </TabContext>\r\n  );\r\n}\r\n","import { Button, Tooltip } from \"@material-ui/core\";\r\nimport { BugReportTwoTone as BugIcon } from \"@material-ui/icons\";\r\nimport { DebugOptionsEditor } from \"components/debug-options-editor/DebugOptionsEditor\";\r\nimport {\r\n  AppBarTitle as Title,\r\n  ManagedModal as Dialog,\r\n} from \"components/generic/Modal\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\n\r\nexport function Utility() {\r\n  const [{ specimen }] = useSpecimen();\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        trigger={(onClick) => (\r\n          <Tooltip title=\"Debug Options\">\r\n            <Button\r\n              {...{ onClick }}\r\n              disabled={!specimen}\r\n              startIcon={<BugIcon />}\r\n            >\r\n              Debug\r\n            </Button>\r\n          </Tooltip>\r\n        )}\r\n        options={{ width: 960, scrollable: false }}\r\n        appBar={{ children: <Title>Debug Options</Title> }}\r\n      >\r\n        <DebugOptionsEditor />\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import { Box, Card, Divider } from \"@material-ui/core\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { useAcrylic } from \"theme\";\r\nimport { Input } from \"./Input\";\r\nimport { Playback } from \"./Playback\";\r\nimport { Settings } from \"./Settings\";\r\nimport { Title } from \"./Title\";\r\nimport { Utility } from \"./Utility\";\r\n\r\nconst divider = <Divider orientation=\"vertical\" flexItem sx={{ m: 1 }} />;\r\n\r\nexport function Controls() {\r\n  const acrylic = useAcrylic();\r\n  return (\r\n    <Card\r\n      sx={{\r\n        m: 3,\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: \"appBar\",\r\n        ...acrylic,\r\n      }}\r\n    >\r\n      <Box display=\"flex\">\r\n        <Title mr={1} />\r\n        <Flex p={1} alignItems=\"center\">\r\n          <Input />\r\n          {divider}\r\n          <Playback />\r\n          {divider}\r\n          <Utility />\r\n          {divider}\r\n          <Settings />\r\n        </Flex>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","import { BlurOffOutlined as DisabledIcon } from \"@material-ui/icons\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { RendererProps } from \"components/specimen-renderer/Renderer\";\r\n\r\nexport function DefaultRenderer({ width, height }: RendererProps) {\r\n  return (\r\n    <Flex\r\n      {...{ width, height }}\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      color=\"text.secondary\"\r\n      vertical\r\n    >\r\n      <DisabledIcon sx={{ mb: 2 }} fontSize=\"large\" />\r\n      No renderer is installed for the current map style.\r\n    </Flex>\r\n  );\r\n}\r\n","export const getDefaults = () => ({\r\n  start: 0,\r\n  end: 0,\r\n});\r\n","import memo from \"memoizee\";\nimport { TraceEvent } from \"protocol/Trace\";\nimport { Point } from \"./Renderer\";\n\nexport type MapHandler<M extends string = string> = {\n  size: Point;\n  nodes: {\n    [K in M]: TraceEvent[];\n  };\n  resolve: (point: Point) => Point | undefined;\n  getNode: (point: Point) => number | undefined;\n  to: (point: Point) => Point;\n  from: (point: Point) => Point;\n};\n\nexport type MapParser<T extends {}, M extends string> = (\n  map: string,\n  options: Partial<T>\n) => MapHandler<M>;\n\nexport function makeMapParser<T, M extends string>(p: MapParser<T, M>) {\n  return memo((m: string = \"\", o: Partial<T> = {}) => p(m, o), { length: 2 });\n}\n","import { filter, flatMap as flat, last, map } from \"lodash\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\nimport { makeMapParser } from \"../MapParser\";\r\nimport { Point } from \"../Renderer\";\r\n\r\nconst { floor } = Math;\r\n\r\nfunction between(v: number, min: number, max: number) {\r\n  return v >= min && v < max;\r\n}\r\n\r\ntype Options = {\r\n  wall?: string;\r\n};\r\n\r\nexport const parseMap = makeMapParser((m, { wall = \"@\" }: Options) => {\r\n  const lines = m.split(\"\\n\");\r\n  const [, h, w, , ...grid] = lines;\r\n  const [width, height] = [w, h].map((d) => +last(d.split(\" \"))!);\r\n\r\n  const to = ({ x, y }: Point) => ({ x: x + 0.5, y: y + 0.5 });\r\n  const from = ({ x, y }: Point) => ({ x: x - 0.5, y: y - 0.5 });\r\n\r\n  return {\r\n    size: { x: width, y: height },\r\n    nodes: {\r\n      walls: filter(\r\n        flat(grid, (row, y) =>\r\n          map(row, (tile, x) =>\r\n            tile === wall ? { variables: { x, y } } : undefined\r\n          )\r\n        )\r\n      ) as TraceEvent[],\r\n    },\r\n    resolve: ({ x: x1, y: y1 }) => {\r\n      const [x, y] = [floor(x1), floor(y1)];\r\n      if (\r\n        between(x, 0, width) &&\r\n        between(y, 0, height) &&\r\n        grid[y]?.[x] !== wall\r\n      )\r\n        return to({ x, y });\r\n    },\r\n    getNode: (point) => {\r\n      const { x, y } = from(point);\r\n      return y * width + x;\r\n    },\r\n    to,\r\n    from,\r\n  };\r\n});\r\n","import { find, floor, range } from \"lodash\";\r\nimport { parseMap } from \"./parseMap\";\r\n\r\nexport function getDefaults(m: string = \"\", wall: string = \"@\") {\r\n  const {\r\n    size: { x: w, y: h },\r\n    getNode,\r\n  } = parseMap(m, { wall });\r\n  const node =\r\n    find(range(w * h), (i) => !!getNode({ x: i % w, y: floor(i / w) })) ?? 0;\r\n  return {\r\n    start: node,\r\n    end: node,\r\n  };\r\n}\r\n","import memo from \"memoizee\";\r\nimport { FunctionTemplate } from \"./FunctionTemplate\";\r\nimport { templates } from \"./templates\";\r\n\r\ntype TemplateMap = typeof templates;\r\n\r\ntype Key = keyof TemplateMap;\r\n\r\ntype ReturnTypeOf<T extends Key> = TemplateMap[T] extends FunctionTemplate<\r\n  [...any],\r\n  infer R\r\n>\r\n  ? R\r\n  : never;\r\n\r\ntype ParamsOf<T extends Key> = TemplateMap[T] extends FunctionTemplate<\r\n  infer R,\r\n  any\r\n>\r\n  ? R\r\n  : [];\r\n\r\nconst fn = memo(\r\n  (script: string, method: string) =>\r\n    // eslint-disable-next-line no-new-func\r\n    new Function(\r\n      \"params\",\r\n      `${script}; return ${method}.apply(null, params);`\r\n    ) as (params: any[]) => any\r\n);\r\n\r\nexport function call<T extends Key>(\r\n  script: string,\r\n  method: T,\r\n  params: ParamsOf<T>\r\n): ReturnTypeOf<T> {\r\n  try {\r\n    return fn(script, method)(params);\r\n  } catch {\r\n    return templates[method].defaultReturnValue as ReturnTypeOf<T>;\r\n  }\r\n}\r\n","import {\r\n  blueGrey,\r\n  deepOrange,\r\n  orange,\r\n  pink,\r\n  teal,\r\n  yellow,\r\n} from \"@material-ui/core/colors\";\r\nimport { mapValues } from \"lodash\";\r\nimport { TraceEventType } from \"protocol/Trace\";\r\n\r\nconst tint = \"500\";\r\n\r\nexport function hex(h: string) {\r\n  return parseInt(h.replace(\"#\", \"0x\"));\r\n}\r\n\r\nexport const colorsHex = {\r\n  source: teal[\"A400\"],\r\n  destination: pink[\"A400\"],\r\n  expanding: deepOrange[tint],\r\n  generating: yellow[tint],\r\n  closing: blueGrey[\"200\"],\r\n  end: pink[\"A400\"],\r\n};\r\n\r\nexport const colors: { [K in TraceEventType]: number } = mapValues(\r\n  colorsHex,\r\n  hex\r\n);\r\n\r\nexport function getColor(key?: TraceEventType) {\r\n  return (key && colors[key]) || hex(orange[tint]);\r\n}\r\n\r\nexport function getColorHex(key?: TraceEventType) {\r\n  return (key && colorsHex[key]) ?? orange[tint];\r\n}\r\n","import { SelectionInfo } from \"components/specimen-renderer/Renderer\";\r\nimport { findIndex, findLastIndex, take } from \"lodash\";\r\nimport { Trace, TraceEvent } from \"protocol/Trace\";\r\n\r\nexport function info(\r\n  { eventList }: Trace = {},\r\n  playback: number = 0,\r\n  key: number | undefined = undefined,\r\n  getStep: (s: TraceEvent) => boolean\r\n) {\r\n  const nodes = take(eventList, playback + 1);\r\n  const step = findLastIndex(nodes, getStep);\r\n  const entry = findIndex(\r\n    eventList,\r\n    (s) => s.type === \"expanding\" && getStep(s)\r\n  );\r\n  return {\r\n    current: step !== -1 ? { index: step, event: nodes[step] } : undefined,\r\n    entry: entry !== -1 ? { index: entry, event: nodes[entry] } : undefined,\r\n    node: key !== undefined ? { key } : undefined,\r\n  } as SelectionInfo;\r\n}\r\n","import { TraceEvent } from \"protocol/Trace\";\nimport { Point } from \"./Renderer\";\n\nexport type NodePredicate<T extends string = string> = (\n  s: TraceEvent<T>,\n  point: Point\n) => boolean;\n\nexport const byPoint: NodePredicate<keyof Point> = ({ variables }, { x, y }) =>\n  variables?.x === x && variables?.y === y;\n","export const scale = 25;\r\nexport const size = 1200;\r\n","import { Graphics } from \"@inlet/react-pixi\";\r\nimport { ComponentProps } from \"react\";\r\nimport { Graphics as PIXIGraphics } from \"@pixi/graphics\";\r\n\r\nexport function makeGraphic<T = any>(\r\n  draw: (g: PIXIGraphics, props: ComponentProps<typeof Graphics> & T) => void\r\n) {\r\n  return (props: ComponentProps<typeof Graphics> & T) => {\r\n    return <Graphics {...props} draw={(g) => draw(g, props)} />;\r\n  };\r\n}\r\n","import { ceil, forEach, range } from \"lodash\";\r\nimport { ComponentProps } from \"react\";\r\nimport { scale } from \"./config\";\r\nimport { makeGraphic } from \"./makeGraphic\";\r\n\r\nconst WEIGHT = 1 / scale;\r\n\r\nconst Grid = makeGraphic<{ alpha?: number; grid?: number }>(\r\n  (g, { width = 0, height = 0, alpha = 1, grid = 5 }) => {\r\n    g.clear();\r\n    g.lineStyle(WEIGHT, 0x000000, alpha);\r\n    forEach(range(grid, height, grid), (i) =>\r\n      g.moveTo(0, i + WEIGHT / 2).lineTo(width, i + WEIGHT / 2)\r\n    );\r\n    forEach(range(grid, width, grid), (i) =>\r\n      g.moveTo(i + WEIGHT / 2, 0).lineTo(i + WEIGHT / 2, height)\r\n    );\r\n  }\r\n);\r\n\r\ntype Props = ComponentProps<typeof Grid>;\r\n\r\nexport function Guides({\r\n  width = 0,\r\n  height = 0,\r\n  x = 0,\r\n  y = 0,\r\n  grid = 5,\r\n  ...params\r\n}: Props) {\r\n  return (\r\n    <Grid\r\n      width={ceil((width + 2) / grid) * grid}\r\n      height={ceil((height + 2) / grid) * grid}\r\n      grid={grid}\r\n      {...params}\r\n    />\r\n  );\r\n}\r\n","export type Graphic = {\n  color?: number;\n  radius?: number;\n};\n\nexport type Line = {\n  weight?: number;\n  x1?: number;\n  y1?: number;\n  x2?: number;\n  y2?: number;\n};\n\nexport type Node = Graphic & Line;\n\nexport const coerce = (obj: any) => ({\n  x1: obj?.x,\n  y1: obj?.y,\n  ...obj,\n});\n","import { Graphics } from \"@pixi/graphics\";\r\nimport { map } from \"lodash\";\r\nimport { scale } from \"./config\";\r\nimport { Node as NodeProps } from \"../Node\";\r\nimport { makeGraphic } from \"./makeGraphic\";\r\n\r\nexport type Draw = (g: Graphics, p: Node) => Graphics;\r\n\r\nexport const node = (\r\n  g: Graphics,\r\n  { color, x1 = 0, y1 = 0, radius = 0.25 }: NodeProps\r\n) =>\r\n  g\r\n    .beginFill(color ?? 0x000000)\r\n    .drawCircle(x1, y1, radius)\r\n    .endFill();\r\n\r\nexport const square = (\r\n  g: Graphics,\r\n  { color, x1 = 0, y1 = 0, radius = 0.5 }: NodeProps\r\n) =>\r\n  g\r\n    .beginFill(color ?? 0x000000)\r\n    .drawRect(-radius / 2 + x1, -radius / 2 + y1, radius, radius)\r\n    .endFill();\r\n\r\nexport const box = (g: Graphics, { color, x1 = 0, y1 = 0 }: NodeProps) =>\r\n  g\r\n    .beginFill(color ?? 0x000000)\r\n    .drawRect(x1, y1, 1, 1)\r\n    .endFill();\r\n\r\nexport const line = (\r\n  g: Graphics,\r\n  { color, x1 = 0, y1 = 0, x2 = 0, y2 = 0, weight = 1 / scale }: NodeProps\r\n) => g.moveTo(x1, y1).lineStyle(weight, color, 1).lineTo(x2, y2);\r\n\r\nexport const [Node, Box, Square, Line] = map([node, box, square, line], (f) =>\r\n  makeGraphic<NodeProps>((g, p) => {\r\n    g.clear();\r\n    f(g, p);\r\n  })\r\n);\r\n","import { Graphics } from \"@inlet/react-pixi\";\r\nimport { constant, filter, floor, memoize, slice } from \"lodash\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport { Trace, TraceEventType } from \"protocol/Trace\";\r\nimport { useCallback, useMemo } from \"react\";\r\nimport { coerce, Node } from \"../Node\";\r\nimport { box } from \"./Draw\";\r\n\r\ntype Props = {\r\n  nodes: Trace[\"eventList\"];\r\n  color?: (type?: TraceEventType) => number;\r\n  variant?: (g: PIXI.Graphics, options: Node) => PIXI.Graphics;\r\n  condition?: (step: number) => boolean;\r\n  options?: Node;\r\n};\r\n\r\nconst defaultCondition = constant(true);\r\n\r\nexport function NodeList({\r\n  nodes,\r\n  color,\r\n  variant = box,\r\n  condition = defaultCondition,\r\n  options,\r\n}: Props) {\r\n  const memo = useMemo(\r\n    () => filter(nodes, (_, i) => condition(i)),\r\n    [nodes, condition]\r\n  );\r\n  const draw = useCallback(\r\n    (g: PIXI.Graphics) => {\r\n      g.clear();\r\n      for (const { variables: v, type } of memo) {\r\n        variant(g, {\r\n          ...coerce(v),\r\n          color: color?.(type) ?? 0xf1f1f1,\r\n          radius: 0.25,\r\n          ...options,\r\n        });\r\n      }\r\n      return g;\r\n    },\r\n    [memo, color, variant, options]\r\n  );\r\n  return <Graphics draw={draw} />;\r\n}\r\n\r\nconst down = (n: number, a: number = 1) => floor(n / a) * a;\r\n\r\nexport function LazyNodeList({\r\n  nodes,\r\n  step = 0,\r\n  size = 2500,\r\n  condition,\r\n  ...props\r\n}: {\r\n  step?: number;\r\n  size?: number;\r\n} & Props) {\r\n  const threshold = down(step, size);\r\n\r\n  const chunk = useMemo(\r\n    () => memoize((n: number) => slice(nodes, 0, n)),\r\n    [nodes]\r\n  );\r\n\r\n  const c = useCallback(\r\n    (n: number) => condition?.(n + threshold) ?? true,\r\n    [condition, threshold]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <NodeList {...props} nodes={chunk(threshold)} condition={condition} />\r\n      <NodeList\r\n        {...props}\r\n        nodes={slice(nodes, threshold, step + 1)}\r\n        condition={c}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { Graphics } from \"@inlet/react-pixi\";\r\nimport { Graphics as PixiGraphics } from \"@pixi/graphics\";\r\nimport { isNull, isUndefined, keyBy } from \"lodash\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\nimport { useMemo } from \"react\";\r\nimport { getColor } from \"../colors\";\r\nimport { scale } from \"./config\";\r\nimport { Square } from \"./Draw\";\r\n\r\nconst WEIGHT = 3 / scale;\r\n\r\nfunction defined<T>(obj: T): obj is Exclude<T, undefined | null> {\r\n  return !isUndefined(obj) && !isNull(obj);\r\n}\r\n\r\ntype PathProps = {\r\n  nodes?: TraceEvent[];\r\n  step?: number;\r\n};\r\n\r\nexport function Path({ nodes = [], step = 0 }: PathProps) {\r\n  const path = useMemo(() => {\r\n    const memo = keyBy(nodes, \"id\");\r\n    return (s: number) => {\r\n      const out = [];\r\n      let next: TraceEvent | undefined = nodes[s];\r\n      while (next) {\r\n        out.push(next);\r\n        next = defined(next.pId) ? memo[`${next.pId}`] : undefined;\r\n      }\r\n      return out;\r\n    };\r\n  }, [nodes]);\r\n\r\n  const draw = useMemo(() => {\r\n    const p = path(step);\r\n    return (g: PixiGraphics) => {\r\n      g.clear();\r\n      for (const [i, node] of p.entries()) {\r\n        const { x = 0, y = 0 } = node?.variables ?? {};\r\n        g.lineTo(x + 0.5, y + 0.5);\r\n        if (!i) g.lineStyle(WEIGHT, getColor(\"source\"));\r\n      }\r\n    };\r\n  }, [path, step]);\r\n\r\n  return (\r\n    <>\r\n      <Graphics draw={draw} />\r\n      <Square\r\n        x={0.5 + (nodes?.[step]?.variables?.x ?? 0)}\r\n        y={0.5 + (nodes?.[step]?.variables?.y ?? 0)}\r\n        color={getColor(\"source\")}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { find } from \"lodash\";\r\nimport { Viewport as PixiViewportBase } from \"pixi-viewport\";\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport type ViewportEvent = {\r\n  global: PIXI.Point;\r\n  world: PIXI.Point;\r\n  event: PointerEvent;\r\n};\r\n\r\nexport type ViewportEventHandler = (e: ViewportEvent) => void;\r\n\r\nexport type PointerEvent = \"onMouseOver\" | \"onClick\" | \"onMouseDown\";\r\n\r\nexport type PropEventPair = {\r\n  prop: PointerEvent;\r\n  event: string;\r\n  filter?: boolean;\r\n};\r\n\r\nexport const events = [\r\n  { prop: \"onClick\", event: \"pointerup\", filter: true },\r\n  { prop: \"onMouseOver\", event: \"mousemove\" },\r\n  { prop: \"onMouseDown\", event: \"pointerdown\", filter: true },\r\n] as PropEventPair[];\r\n\r\nexport class PixiViewport extends PixiViewportBase {\r\n  events: {\r\n    [K in string]?: () => void;\r\n  } = {};\r\n  register(prop: PointerEvent, handler?: ViewportEventHandler) {\r\n    const { event, filter } = find(events, (c) => c.prop === prop)!;\r\n    this.events?.[event]?.();\r\n    if (handler) {\r\n      const f = (e: PIXI.InteractionEvent) => {\r\n        const { global } = e.data;\r\n        if (!filter || this.input.last?.equals(global)) {\r\n          handler?.({\r\n            global,\r\n            world: this.toWorld(global),\r\n            event: prop,\r\n          });\r\n        }\r\n      };\r\n      this.on(event, f);\r\n      this.events[event] = () => this.off(event, f);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Adapted from https://codesandbox.io/s/react-pixi-viewport-9ngfd\r\n * @author roxgarage\r\n */\r\n\r\nimport { PixiComponent, useApp } from \"@inlet/react-pixi\";\r\nimport { map } from \"lodash\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport React from \"react\";\r\nimport { scale } from \"./config\";\r\nimport {\r\n  PointerEvent,\r\n  PixiViewport,\r\n  events,\r\n  ViewportEventHandler,\r\n} from \"./PixiViewport\";\r\n\r\nexport type ViewportProps = {\r\n  width?: number;\r\n  height?: number;\r\n  children?: React.ReactNode;\r\n  event?: PIXI.InteractionEvent;\r\n} & { [K in PointerEvent]?: ViewportEventHandler };\r\n\r\nexport type Props = {\r\n  app: PIXI.Application;\r\n} & ViewportProps;\r\n\r\nfunction create(props: Props) {\r\n  const viewport = new PixiViewport({\r\n    interaction: props.app.renderer.plugins.interaction,\r\n    ticker: props.app.ticker,\r\n    stopPropagation: true,\r\n    passiveWheel: false,\r\n  })\r\n    .drag()\r\n    .pinch()\r\n    .wheel()\r\n    .decelerate({ friction: 0.98 })\r\n    .clampZoom({ maxScale: 10 * scale, minScale: 0.02 * scale })\r\n    .zoomPercent(scale);\r\n  return viewport as PixiViewport;\r\n}\r\n\r\nfunction applyProps(\r\n  v: PixiViewport,\r\n  prev: Props,\r\n  { width, height, ...next }: Props\r\n) {\r\n  for (const { equal, apply } of [\r\n    ...map(events, ({ prop }) => ({\r\n      equal: prev[prop] === next[prop],\r\n      apply: () => v.register(prop, next[prop]),\r\n    })),\r\n    {\r\n      prop: prev.width === width && prev.height === height,\r\n      apply: () => v.resize(width, height, (width ?? 0) * 2, (height ?? 0) * 2),\r\n    },\r\n  ]) {\r\n    !equal && apply();\r\n  }\r\n}\r\n\r\nconst Component = PixiComponent<Props, PixiViewport>(\"Viewport\", {\r\n  create: (props) => {\r\n    const viewport = create(props);\r\n    applyProps(viewport, props, props);\r\n    return viewport;\r\n  },\r\n  applyProps,\r\n});\r\n\r\nexport const Viewport = (props: ViewportProps) => {\r\n  const app = useApp();\r\n  return <Component app={app} {...props} />;\r\n};\r\n","import { Stage } from \"@inlet/react-pixi\";\nimport { Box, BoxProps } from \"@material-ui/core\";\nimport { ComponentProps, forwardRef, ReactNode } from \"react\";\nimport { Viewport } from \"../raster-renderer/Viewport\";\nimport { RendererProps } from \"../Renderer\";\n\ntype RasterRendererProps = RendererProps & {\n  children?: ReactNode;\n  StageProps?: ComponentProps<typeof Stage>;\n  ViewportProps?: ComponentProps<typeof Viewport>;\n  BoxProps?: BoxProps;\n};\n\nexport const RasterRenderer = forwardRef<unknown, RasterRendererProps>(\n  ({ children, width, height, ViewportProps, StageProps, BoxProps }, ref) => (\n    <Box {...BoxProps} ref={ref}>\n      <Stage\n        options={{\n          backgroundColor: 0xffffff,\n          autoDensity: true,\n          clearBeforeRender: false,\n          resolution: 1,\n          antialias: true,\n        }}\n        {...StageProps}\n      >\n        <Viewport width={width} height={height} {...ViewportProps}>\n          {children}\n        </Viewport>\n      </Stage>\n    </Box>\n  )\n);\n","import { useTween } from \"react-use\";\nimport { Node } from \"./Draw\";\nimport { ComponentProps as PropsOf } from \"react\";\n\nexport type SelectedProps = {\n  animateScale?: boolean;\n  animateAlpha?: boolean;\n} & PropsOf<typeof Node>;\n\nexport function Selected({\n  x = 0,\n  y = 0,\n  alpha = 0,\n  animateScale,\n  animateAlpha,\n  ...props\n}: SelectedProps) {\n  const t = useTween(\"outCirc\", 300);\n  return (\n    <Node\n      {...props}\n      scale={animateScale ? t : 1}\n      x={x}\n      y={y}\n      radius={1}\n      alpha={(animateAlpha ? t : 1) * alpha}\n    />\n  );\n}\n","import { Point } from \"components/specimen-renderer/Renderer\";\r\nimport { map } from \"lodash\";\r\nimport { Selected } from \"./Selected\";\r\n\r\ntype Props = {\r\n  hover?: Point;\r\n  highlight?: Point;\r\n};\r\n\r\nexport function Selection({ hover, highlight }: Props) {\r\n  return (\r\n    <>\r\n      {map(\r\n        [\r\n          { point: hover, alpha: 0.04, animateAlpha: true },\r\n          { point: highlight, alpha: 0.08, animateScale: true },\r\n        ],\r\n        ({ point, ...props }, i) =>\r\n          point && (\r\n            <Selected\r\n              key={`${i}::${point.x}::${point.y}`}\r\n              x={point.x}\r\n              y={point.y}\r\n              color={0x000000}\r\n              {...props}\r\n            />\r\n          )\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { Stage } from \"@inlet/react-pixi\";\nimport { call } from \"components/script-editor/call\";\nimport { Point, RendererProps } from \"components/specimen-renderer/Renderer\";\nimport { constant, delay, identity, memoize, throttle } from \"lodash\";\nimport { ComponentProps, useCallback, useMemo, useState } from \"react\";\nimport { useSpecimen } from \"slices/specimen\";\nimport { useUIState } from \"slices/UIState\";\nimport { getColor } from \"../colors\";\nimport { info } from \"../info\";\nimport { byPoint, NodePredicate } from \"../isNode\";\nimport { MapHandler } from \"../MapParser\";\nimport { Guides } from \"../raster-renderer/Guides\";\nimport {\n  LazyNodeList as LazyNodes,\n  NodeList as Nodes,\n} from \"../raster-renderer/NodeList\";\nimport { Path } from \"../raster-renderer/Path\";\nimport { ViewportEvent } from \"../raster-renderer/PixiViewport\";\nimport { RasterRenderer } from \"../raster-renderer/RasterRenderer\";\nimport { Selection } from \"../raster-renderer/Selection\";\n\nexport type BaseRasterRendererProps = {\n  isNode?: NodePredicate;\n} & Partial<MapHandler> &\n  RendererProps &\n  Omit<ComponentProps<typeof Stage>, \"onSelect\">;\n\nexport function BaseRasterRenderer({\n  size,\n  resolve,\n  getNode,\n  isNode = byPoint,\n  from = identity,\n  onSelect,\n  selection,\n  children,\n  ...props\n}: BaseRasterRendererProps) {\n  const [ref, setRef] = useState<HTMLDivElement | null>(null);\n  const [{ specimen }] = useSpecimen();\n  const [{ step = 0, code }] = useUIState();\n\n  const [active, setActive] = useState<Point | undefined>(undefined);\n  const [hover, setHover] = useState<Point | undefined>(undefined);\n\n  const handleClick = useCallback(\n    ({ global, world }: ViewportEvent, step: number = 0) => {\n      if (ref && specimen) {\n        const { top, left } = ref.getBoundingClientRect();\n        const point = resolve?.(world);\n        if (point) {\n          onSelect?.({\n            global: { x: left + global.x, y: top + global.y },\n            world: point,\n            info: {\n              ...info(specimen, step, getNode?.(point), (s) =>\n                isNode(s, from(point))\n              ),\n              point: from(point),\n            },\n          });\n        }\n      }\n    },\n    [ref, onSelect, specimen, getNode, resolve, from, isNode]\n  );\n\n  const handleMouseEvent = useMemo(() => {\n    let timeout = 0;\n    const resolveHover = throttle((p) => setHover(resolve?.(p)), 100);\n    return ({ world, event }: ViewportEvent) => {\n      switch (event) {\n        case \"onMouseOver\":\n          resolveHover(world);\n          setActive(undefined);\n          clearTimeout(timeout);\n          break;\n        case \"onMouseDown\":\n          timeout = delay(() => setActive(resolve?.(world)), 100);\n          break;\n      }\n    };\n  }, [resolve, setHover]);\n\n  const condition = useMemo(() => {\n    if (code && specimen?.eventList) {\n      return memoize((n: number) =>\n        code && specimen?.eventList\n          ? call(code ?? \"\", \"shouldRender\", [\n              n,\n              specimen.eventList[n],\n              specimen.eventList,\n            ])\n          : true\n      );\n    } else return constant(true);\n  }, [code, specimen?.eventList]);\n\n  return (\n    <RasterRenderer\n      ref={setRef}\n      StageProps={props}\n      BoxProps={{ sx: { cursor: hover ? \"pointer\" : \"auto\" } }}\n      ViewportProps={{\n        onClick: (e) => handleClick(e, step),\n        onMouseDown: handleMouseEvent,\n        onMouseOver: handleMouseEvent,\n      }}\n    >\n      <Nodes nodes={specimen?.eventList} />\n      <LazyNodes\n        nodes={specimen?.eventList}\n        step={step}\n        color={getColor}\n        condition={condition}\n      />\n      {children}\n      <Path nodes={specimen?.eventList} step={step} />\n      <Selection hover={hover} highlight={selection || active} />\n      <Guides width={size?.x} height={size?.y} alpha={0.24} grid={1} />\n    </RasterRenderer>\n  );\n}\n","import { Point } from \"components/specimen-renderer/Renderer\";\r\nimport { floor, map } from \"lodash\";\r\nimport { getColor } from \"../colors\";\r\nimport { Square } from \"./Draw\";\r\n\r\ntype OverlayProps = {\r\n  start?: number;\r\n  end?: number;\r\n  size?: Point;\r\n};\r\nexport function Overlay({\r\n  start = 0,\r\n  end = 0,\r\n  size = { x: 0, y: 0 },\r\n}: OverlayProps) {\r\n  return (\r\n    <>\r\n      {map(\r\n        [\r\n          { color: getColor(\"destination\"), node: end },\r\n          { color: getColor(\"source\"), node: start },\r\n        ],\r\n        ({ color, node }, i) => (\r\n          <Square\r\n            key={i}\r\n            x={0.5 + (node % size.x)}\r\n            y={0.5 + floor(node / size.x)}\r\n            color={color}\r\n          />\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { blueGrey } from \"@material-ui/core/colors\";\r\nimport { constant, merge } from \"lodash\";\r\nimport { useMemo } from \"react\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport {\r\n  BaseRasterRenderer,\r\n  BaseRasterRendererProps,\r\n} from \"../base-raster-renderer/BaseRasterRenderer\";\r\nimport { hex } from \"../colors\";\r\nimport { NodeList as Nodes } from \"../raster-renderer/NodeList\";\r\nimport { Overlay } from \"../raster-renderer/Overlay\";\r\nimport { getDefaults } from \"./getDefaults\";\r\nimport { parseMap } from \"./parseMap\";\r\n\r\nexport type GridRendererProps = BaseRasterRendererProps;\r\n\r\nexport function GridRenderer(props: GridRendererProps) {\r\n  const [{ map: m }] = useSpecimen();\r\n  const [{ code, ...state }] = useUIState();\r\n\r\n  const [map, bgNodeColor, { start, end }] = useMemo(\r\n    () =>\r\n      [\r\n        parseMap(m),\r\n        constant(hex(blueGrey[\"500\"])),\r\n        merge(getDefaults(m), { start: state.start, end: state.end }),\r\n      ] as const,\r\n    [m, state.start, state.end]\r\n  );\r\n\r\n  const {\r\n    size,\r\n    nodes: { walls },\r\n  } = map;\r\n\r\n  return (\r\n    <BaseRasterRenderer {...props} {...map}>\r\n      <Nodes nodes={walls} color={bgNodeColor} />\r\n      <Overlay start={start} end={end} size={size} />\r\n    </BaseRasterRenderer>\r\n  );\r\n}\r\n","export function getDefaults(\r\n  m: string = \"\",\r\n  vert: string = \"v\",\r\n  edge: string = \"e\"\r\n) {\r\n  return {\r\n    start: 0,\r\n    end: 0,\r\n  };\r\n}\r\n","import { Dictionary, maxBy, minBy } from \"lodash\";\r\nimport { makeMapParser } from \"../MapParser\";\r\nimport { Point } from \"../Renderer\";\r\n\r\nconst { log, max, sqrt } = Math;\r\n\r\nconst dist = ({ x: x1, y: y1 }: Point, { x: x2, y: y2 }: Point) =>\r\n  sqrt((y2 - y1) ** 2 + (x2 - x1) ** 2);\r\n\r\nconst mag = (n: number) => 10 ** Math.log10(n);\r\n\r\nconst minAt = (c: Dictionary<number>[], index: string) =>\r\n  minBy(c, index)?.[index];\r\n\r\nconst maxAt = (c: Dictionary<number>[], index: string) =>\r\n  maxBy(c, index)?.[index];\r\n\r\nfunction bounds(verts: Point[]) {\r\n  const [[minX, minY], [maxX, maxY]] = [minAt, maxAt].map((f) =>\r\n    [\"x\", \"y\"].map((i) => f(verts, i) ?? 0)\r\n  );\r\n  const [width, height] = [maxX - minX, maxY - minY];\r\n  return { width, height, minX, minY, maxX, maxY };\r\n}\r\n\r\nfunction parse(m: string, vert: string, edge: string) {\r\n  const lines = m.split(\"\\n\");\r\n  // Parse vertices\r\n  const verts = lines\r\n    .filter((c) => c.startsWith(vert))\r\n    .map((c: string) => {\r\n      const [, , x, y] = c.split(\" \");\r\n      return { x: +x, y: +y };\r\n    });\r\n  // Parse edges\r\n  const edges = lines\r\n    .filter((c) => c.startsWith(edge))\r\n    .map((c: string) => {\r\n      const [, a, b] = c.split(\" \");\r\n      return { a: +a, b: +b };\r\n    });\r\n  return { verts, edges };\r\n}\r\n\r\ntype Options = {\r\n  vert?: string;\r\n  edge?: string;\r\n};\r\n\r\nexport const parseMap = makeMapParser(\r\n  (m, { vert = \"v\", edge = \"e\" }: Options) => {\r\n    const { verts, edges } = parse(m, vert, edge);\r\n    const { width, height, minX, minY } = bounds(verts);\r\n    const scale = (20 * log(edges.length + 1)) / mag(max(width, height));\r\n\r\n    const to = ({ x, y }: Point) => ({\r\n      x: (x - minX) * scale,\r\n      y: (y - minY) * scale,\r\n    });\r\n    const from = ({ x, y }: Point) => ({\r\n      x: x / scale + minX,\r\n      y: y / scale + minY,\r\n    });\r\n\r\n    return {\r\n      size: { x: width * scale, y: height * scale },\r\n      nodes: {\r\n        verts: verts.map((point) => ({\r\n          variables: to(point),\r\n        })),\r\n        edges: edges.map(({ a, b }) => {\r\n          const { x: x1, y: y1 } = to(verts[a]);\r\n          const { x: x2, y: y2 } = to(verts[b]);\r\n          return { variables: { x1, y1, x2, y2 } };\r\n        }),\r\n      },\r\n      resolve: (point) => {\r\n        const a = from(point);\r\n        const vert = minBy(verts, (b) => dist(a, b));\r\n        if (vert && dist(vert, a) < 2 / scale) return to(vert);\r\n      },\r\n      getNode: () => undefined,\r\n      to,\r\n      from,\r\n    };\r\n  }\r\n);\r\n","import { blueGrey } from \"@material-ui/core/colors\";\r\nimport { constant, merge } from \"lodash\";\r\nimport { useMemo } from \"react\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport {\r\n  BaseRasterRenderer,\r\n  BaseRasterRendererProps,\r\n} from \"../base-raster-renderer/BaseRasterRenderer\";\r\nimport { hex } from \"../colors\";\r\nimport { scale } from \"../raster-renderer/config\";\r\nimport { line, square } from \"../raster-renderer/Draw\";\r\nimport { NodeList as Nodes } from \"../raster-renderer/NodeList\";\r\nimport { Overlay } from \"../raster-renderer/Overlay\";\r\nimport { getDefaults } from \"./getDefaults\";\r\nimport { parseMap } from \"./parseMap\";\r\n\r\ntype NetworkRendererProps = BaseRasterRendererProps;\r\n\r\nconst vertOptions = { radius: 2 / scale };\r\n\r\nexport function NetworkRenderer(props: NetworkRendererProps) {\r\n  const [{ map: m }] = useSpecimen();\r\n  const [{ code, ...state }] = useUIState();\r\n\r\n  const [map, edgeColor, vertColor, { start, end }] = useMemo(\r\n    () =>\r\n      [\r\n        parseMap(m),\r\n        constant(hex(blueGrey[\"100\"])),\r\n        constant(hex(blueGrey[\"500\"])),\r\n        merge(getDefaults(m), { start: state.start, end: state.end }),\r\n      ] as const,\r\n    [m, state.start, state.end]\r\n  );\r\n\r\n  const {\r\n    size,\r\n    nodes: { edges, verts },\r\n  } = map;\r\n\r\n  return (\r\n    <BaseRasterRenderer {...props} {...map}>\r\n      <Nodes nodes={edges} color={edgeColor} variant={line} />\r\n      <Nodes\r\n        nodes={verts}\r\n        color={vertColor}\r\n        variant={square}\r\n        options={vertOptions}\r\n      />\r\n      <Overlay start={start} end={end} size={size} />\r\n    </BaseRasterRenderer>\r\n  );\r\n}\r\n","import { get } from \"lodash\";\r\nimport { DefaultRenderer } from \"./default-renderer/DefaultRenderer\";\r\nimport { getDefaults } from \"./default-renderer/getDefaults\";\r\nimport { getDefaults as getGridDefaults } from \"./grid-renderer/getDefaults\";\r\nimport { GridRenderer } from \"./grid-renderer/GridRenderer\";\r\nimport { getDefaults as getNetworkDefaults } from \"./network-renderer/getDefaults\";\r\nimport { NetworkRenderer } from \"./network-renderer/NetworkRenderer\";\r\nimport { RendererEntry, RendererMap } from \"./Renderer\";\r\n\r\nconst renderers: RendererMap = {\r\n  grid: [GridRenderer, getGridDefaults],\r\n  json: [GridRenderer, getGridDefaults],\r\n  xy: [NetworkRenderer, getNetworkDefaults],\r\n};\r\n\r\nexport function getRenderer(key = \"\") {\r\n  return get(renderers, key, [DefaultRenderer, getDefaults] as RendererEntry);\r\n}\r\n","import { Card, Stack } from \"@material-ui/core\";\nimport { ReactNode } from \"react\";\nimport { useAcrylic } from \"theme\";\n\nexport function Toolbar({ children }: { children?: ReactNode }) {\n  const acrylic = useAcrylic();\n  return (\n    <Card\n      sx={{\n        m: 3,\n        px: 1.25,\n        height: 56,\n        display: \"flex\",\n        alignItems: \"center\",\n        pointerEvents: \"all\",\n        ...acrylic,\n      }}\n    >\n      <Stack spacing={1.25} direction=\"row\">\n        {children}\n      </Stack>\n    </Card>\n  );\n}\n","import { Box, BoxProps } from \"@material-ui/core\";\r\nimport { ReactElement } from \"react\";\r\nimport {\r\n  Virtuoso as List,\r\n  VirtuosoHandle as Handle,\r\n  VirtuosoProps as ListProps,\r\n} from \"react-virtuoso\";\r\n\r\nexport type LazyListHandle = Handle;\r\n\r\nexport type LazyListProps<T> = {\r\n  items?: T[];\r\n  renderItem?: (item: T, index: number) => ReactElement;\r\n  listOptions?: Partial<ListProps<T>>;\r\n} & BoxProps;\r\n\r\nexport function LazyList<T>({\r\n  items = [],\r\n  renderItem,\r\n  listOptions: options,\r\n  ...props\r\n}: LazyListProps<T>) {\r\n  return (\r\n    <Box {...props}>\r\n      <List\r\n        totalCount={items.length}\r\n        itemContent={(i) => renderItem?.(items[i], i)}\r\n        {...options}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { HideSourceOutlined as HiddenIcon } from \"@material-ui/icons\";\nimport { Overline, OverlineDot as Dot } from \"components/generic/Overline\";\nimport { getColorHex } from \"components/specimen-renderer/colors\";\nimport { TraceEvent } from \"protocol/Trace\";\n\nexport function EventLabel({\n  event,\n  hidden,\n}: {\n  event?: TraceEvent;\n  hidden?: boolean;\n}) {\n  return (\n    <Overline>\n      <Dot\n        sx={{\n          color: getColorHex(event?.type),\n          mr: 1,\n        }}\n      />\n      {`${event?.type ?? \"unsupported\"} #${event?.id ?? \"-\"}`}{\" \"}\n      {hidden && (\n        <HiddenIcon\n          sx={{\n            opacity: 0.56,\n            fontSize: 12,\n            ml: 1,\n            transform: \"translateY(1.75px)\",\n          }}\n        />\n      )}\n    </Overline>\n  );\n}\n","import { Flex } from \"./Flex\";\r\nimport {\r\n  Typography as Type,\r\n  TypographyProps as TypeProps,\r\n} from \"@material-ui/core\";\r\nimport { Space } from \"./Space\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype Props = {\r\n  label?: ReactNode;\r\n  value?: ReactNode;\r\n  type?: TypeProps;\r\n};\r\n\r\nexport function Property({ label, value, type }: Props) {\r\n  return (\r\n    <Flex width=\"auto\" mr={3} mt={0.5} key={`${label}::${value}`}>\r\n      <Type sx={{ opacity: 0.54 }} {...type}>\r\n        {label}\r\n      </Type>\r\n      <Space />\r\n      <Type {...type}>{value}</Type>\r\n    </Flex>\r\n  );\r\n}\r\n","import { TypographyVariant } from \"@material-ui/core\";\nimport { Flex, FlexProps } from \"components/generic/Flex\";\nimport { Property } from \"components/generic/Property\";\nimport { entries, filter, map } from \"lodash\";\nimport { TraceEvent } from \"protocol/Trace\";\n\nexport function PropertyList({\n  event,\n  variant = \"body2\",\n  ...props\n}: {\n  event?: TraceEvent<string>;\n  variant?: TypographyVariant;\n} & FlexProps) {\n  return (\n    <Flex flexWrap=\"wrap\" {...props}>\n      {map(\n        filter(\n          [\n            [\"f\", event?.f],\n            [\"g\", event?.g],\n            ...entries(event?.variables),\n            [\"pId\", event?.pId],\n            [\"info\", event?.info],\n          ],\n          ([, v]) => v !== undefined\n        ),\n        ([k, v]) => (\n          <Property label={k} value={v} type={{ variant }} />\n        )\n      )}\n    </Flex>\n  );\n}\n","import {\r\n  Box,\r\n  Card,\r\n  CardActionArea,\r\n  CardProps,\r\n  Divider,\r\n  Typography as Type,\r\n} from \"@material-ui/core\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { call } from \"components/script-editor/call\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { useAcrylic } from \"theme\";\r\nimport { EventLabel } from \"./EventLabel\";\r\nimport { PropertyList } from \"./PropertyList\";\r\n\r\ntype EventInspectorProps = {\r\n  event?: TraceEvent;\r\n  index?: number;\r\n  selected?: boolean;\r\n} & CardProps;\r\n\r\nexport function EventInspector({\r\n  event,\r\n  index,\r\n  selected,\r\n  ...props\r\n}: EventInspectorProps) {\r\n  const acrylic = useAcrylic();\r\n  const [{ specimen }] = useSpecimen();\r\n  const [{ code }, setUIState] = useUIState();\r\n\r\n  const cardStyles = selected\r\n    ? {\r\n        color: \"primary.contrastText\",\r\n        bgcolor: \"primary.main\",\r\n      }\r\n    : acrylic;\r\n\r\n  const hidden = event\r\n    ? !call(code ?? \"\", \"shouldRender\", [\r\n        index ?? 0,\r\n        event,\r\n        specimen?.eventList ?? [],\r\n      ])\r\n    : false;\r\n\r\n  return (\r\n    <Card\r\n      {...props}\r\n      sx={{\r\n        ...cardStyles,\r\n        ...props.sx,\r\n      }}\r\n    >\r\n      <CardActionArea\r\n        sx={{ p: 2, height: \"100%\" }}\r\n        onClick={() => setUIState({ step: index })}\r\n      >\r\n        <Flex alignItems=\"center\">\r\n          <Type>{index}</Type>\r\n          <Divider sx={{ mx: 2 }} flexItem orientation=\"vertical\" />\r\n          <Box>\r\n            <EventLabel event={event} hidden={hidden} />\r\n            <PropertyList event={event} />\r\n          </Box>\r\n        </Flex>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n","import { Flex } from \"components/generic/Flex\";\r\nimport {\r\n  LazyList as List,\r\n  LazyListHandle as ListHandle,\r\n  LazyListProps as ListProps,\r\n} from \"components/generic/LazyList\";\r\nimport { delay } from \"lodash\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { EventInspector } from \"./EventInspector\";\r\n\r\nexport function EventListInspector(props: ListProps<TraceEvent>) {\r\n  const [{ step = 0, playback }] = useUIState();\r\n  const [{ specimen }] = useSpecimen();\r\n  const ref = useRef<ListHandle | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (playback === \"paused\") {\r\n      delay(\r\n        () =>\r\n          ref?.current?.scrollToIndex?.({\r\n            index: step,\r\n            align: \"start\",\r\n            behavior: \"smooth\",\r\n            offset: -16,\r\n          }),\r\n        150\r\n      );\r\n    }\r\n  }, [step, playback]);\r\n\r\n  return (\r\n    <Flex>\r\n      <List\r\n        {...props}\r\n        items={specimen?.eventList}\r\n        listOptions={{ ref }}\r\n        renderItem={(item, i) => (\r\n          <Flex p={2} pt={i ? 0 : 2}>\r\n            <EventInspector\r\n              sx={{ flex: 1 }}\r\n              event={item}\r\n              index={i}\r\n              selected={i === step}\r\n            />\r\n          </Flex>\r\n        )}\r\n      />\r\n    </Flex>\r\n  );\r\n}\r\n","import { BoxProps, Button, Card, Fade, Tooltip } from \"@material-ui/core\";\nimport { SortTwoTone as StepsIcon } from \"@material-ui/icons\";\nimport { TabContext, TabPanel } from \"@material-ui/lab\";\nimport { Box } from \"@material-ui/system\";\nimport { Flex } from \"components/generic/Flex\";\nimport { Toolbar } from \"components/generic/Toolbar\";\nimport { startCase } from \"lodash\";\nimport { useState } from \"react\";\nimport { useUIState } from \"slices/UIState\";\nimport { EventListInspector } from \"./EventListInspector\";\n\nexport function InfoPanel(props: BoxProps) {\n  const [{ playback }] = useUIState();\n  const [tab, setTab] = useState(\"steps\");\n  return (\n    <TabContext value={tab}>\n      <Flex\n        vertical\n        sx={{ pointerEvents: \"none\" }}\n        alignItems=\"center\"\n        {...props}\n      >\n        <Toolbar>\n          {[\n            { icon: <StepsIcon />, key: \"steps\" },\n            { key: \"info\" },\n            { key: \"parameters\" },\n          ].map(({ key, icon }) => (\n            <Tooltip title={startCase(key)}>\n              <Button\n                onClick={() => setTab(key === tab ? \"\" : key)}\n                color=\"primary\"\n                variant={key === tab ? \"contained\" : \"text\"}\n                startIcon={icon}\n              >\n                {startCase(key)}\n              </Button>\n            </Tooltip>\n          ))}\n        </Toolbar>\n        {[\n          {\n            key: \"steps\",\n            content: (\n              <Fade unmountOnExit mountOnEnter in={playback === \"paused\"}>\n                <Box height=\"100%\" width=\"100%\" pl={1}>\n                  <EventListInspector height=\"100%\" width=\"100%\" />\n                </Box>\n              </Fade>\n            ),\n          },\n          {\n            key: \"info\",\n            content: <Card sx={{ m: 2, p: 2 }}>-</Card>,\n          },\n          {\n            key: \"parameters\",\n            content: <Card sx={{ m: 2, p: 2 }}>-</Card>,\n          },\n        ].map(({ content, key }) => (\n          <TabPanel\n            value={key}\n            sx={{ pointerEvents: \"all\", flex: 1, p: 0, width: \"100%\" }}\n          >\n            {content}\n          </TabPanel>\n        ))}\n      </Flex>\n    </TabContext>\n  );\n}\n","import { Box } from \"@material-ui/core\";\nimport { ReactNode } from \"react\";\nimport { Flex } from \"./Flex\";\nimport { Space } from \"./Space\";\n\ntype LabelProps = {\n  primary?: ReactNode;\n  secondary?: ReactNode;\n};\n\nexport function Label({ primary, secondary }: LabelProps) {\n  return (\n    <Flex>\n      <Box>{primary}</Box>\n      <Space />\n      <Box sx={{ opacity: 0.56 }}>{secondary}</Box>\n    </Flex>\n  );\n}\n","import {\r\n  Box,\r\n  Divider,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  PlaceOutlined as DestinationIcon,\r\n  TripOriginOutlined as StartIcon,\r\n} from \"@material-ui/icons\";\r\nimport { Label } from \"components/generic/Label\";\r\nimport { Overline } from \"components/generic/Overline\";\r\nimport { Property } from \"components/generic/Property\";\r\nimport { useSnackbar } from \"components/generic/Snackbar\";\r\nimport { SelectEvent as RendererSelectEvent } from \"components/specimen-renderer/Renderer\";\r\nimport { map } from \"lodash\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { EventLabel } from \"./EventLabel\";\r\nimport { PropertyList } from \"./PropertyList\";\r\n\r\ntype Props = {\r\n  selection?: RendererSelectEvent;\r\n  onClose?: () => void;\r\n};\r\n\r\nexport function SelectionMenu({ selection, onClose }: Props) {\r\n  const notify = useSnackbar();\r\n  const [, setUIState] = useUIState();\r\n  const { global, info } = selection ?? {};\r\n  const { current, entry, node } = info ?? {};\r\n\r\n  return (\r\n    <Menu\r\n      open={!!selection}\r\n      anchorReference=\"anchorPosition\"\r\n      anchorPosition={{\r\n        top: global?.y ?? 0,\r\n        left: global?.x ?? 0,\r\n      }}\r\n      onClose={onClose}\r\n    >\r\n      <ListItem>\r\n        <ListItemText>\r\n          <Box>\r\n            <Overline>Point</Overline>\r\n            <Property label=\"x\" value={info?.point?.x ?? \"-\"} />\r\n            <Property label=\"y\" value={info?.point?.y ?? \"-\"} />\r\n          </Box>\r\n          {current?.event && (\r\n            <Box mt={2}>\r\n              <EventLabel event={current?.event} />\r\n              <PropertyList event={current?.event} variant=\"body1\" vertical />\r\n            </Box>\r\n          )}\r\n        </ListItemText>\r\n      </ListItem>\r\n      <Divider sx={{ my: 1 }} />\r\n      {map(\r\n        [\r\n          {\r\n            label: \"Set Origin\",\r\n            icon: <StartIcon sx={{ transform: \"scale(0.5)\" }} />,\r\n            action: () => {\r\n              notify(\"Origin set.\");\r\n              setUIState({ start: node?.key });\r\n            },\r\n            disabled: !node,\r\n          },\r\n          {\r\n            label: \"Set Destination\",\r\n            icon: <DestinationIcon />,\r\n            action: () => {\r\n              notify(\"Destination set.\");\r\n              setUIState({ end: node?.key });\r\n            },\r\n            disabled: !node,\r\n          },\r\n          {\r\n            label: (\r\n              <Label primary=\"Go to Expansion Step\" secondary={entry?.index} />\r\n            ),\r\n            action: () =>\r\n              setUIState({ step: entry?.index ?? 0, playback: \"paused\" }),\r\n            disabled: !entry,\r\n          },\r\n          {\r\n            label: (\r\n              <Label primary=\"Rewind to This Step\" secondary={current?.index} />\r\n            ),\r\n            action: () =>\r\n              setUIState({ step: current?.index ?? 0, playback: \"paused\" }),\r\n            disabled: !current,\r\n          },\r\n        ],\r\n        ({ label, icon, action, disabled }) => (\r\n          <MenuItem\r\n            disabled={disabled}\r\n            onClick={() => {\r\n              action();\r\n              onClose?.();\r\n            }}\r\n          >\r\n            <ListItemIcon>{icon}</ListItemIcon>\r\n            <ListItemText>{label}</ListItemText>\r\n          </MenuItem>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n}\r\n","import { Fade, LinearProgress } from \"@material-ui/core\";\r\nimport { BlurOnTwoTone as DisabledIcon } from \"@material-ui/icons\";\r\nimport { Flex, FlexProps } from \"components/generic/Flex\";\r\nimport { getRenderer } from \"components/specimen-renderer\";\r\nimport { SelectEvent as RendererSelectEvent } from \"components/specimen-renderer/Renderer\";\r\nimport { some, values } from \"lodash\";\r\nimport { createElement, useState } from \"react\";\r\nimport AutoSize from \"react-virtualized-auto-sizer\";\r\nimport { useLoading } from \"slices/loading\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { InfoPanel } from \"./InfoPanel\";\r\nimport { SelectionMenu } from \"./SelectionMenu\";\r\n\r\ntype SpecimenInspectorProps = {} & FlexProps;\r\n\r\nexport function SpecimenInspector(props: SpecimenInspectorProps) {\r\n  const [loading] = useLoading();\r\n  const [{ specimen, format, map }] = useSpecimen();\r\n  const [renderer] = getRenderer(format);\r\n  const [selection, setSelection] = useState<RendererSelectEvent | undefined>(\r\n    undefined\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Fade in={some(values(loading))}>\r\n        <LinearProgress variant=\"indeterminate\" sx={{ mb: -0.5, zIndex: 1 }} />\r\n      </Fade>\r\n      <Flex {...props}>\r\n        {specimen ? (\r\n          <Flex>\r\n            <AutoSize>\r\n              {(size) =>\r\n                createElement(renderer, {\r\n                  ...size,\r\n                  key: map,\r\n                  onSelect: setSelection,\r\n                  selection: selection?.world,\r\n                })\r\n              }\r\n            </AutoSize>\r\n            <InfoPanel\r\n              position=\"absolute\"\r\n              right={0}\r\n              height=\"100%\"\r\n              width=\"25vw\"\r\n              minWidth={480}\r\n            />\r\n          </Flex>\r\n        ) : (\r\n          <Flex\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            color=\"text.secondary\"\r\n            vertical\r\n          >\r\n            <DisabledIcon sx={{ mb: 2 }} fontSize=\"large\" />\r\n            Select a map to get started.\r\n          </Flex>\r\n        )}\r\n      </Flex>\r\n      <SelectionMenu\r\n        selection={selection}\r\n        onClose={() => setSelection(undefined)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { Controls } from \"components/app-bar/Controls\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { SpecimenInspector } from \"components/specimen-inspector/SpecimenInspector\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Flex vertical sx={{ bgcolor: \"background.default\" }}>\r\n      <Controls />\r\n      <SpecimenInspector flex={1} />\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { getTransport } from \"client\";\r\nimport { useSnackbar } from \"components/generic/Snackbar\";\r\nimport { delay, now } from \"lodash\";\r\nimport { useEffect } from \"react\";\r\nimport { Connection, useConnections } from \"slices/connections\";\r\nimport { useLoadingState } from \"slices/loading\";\r\nimport { useSettings } from \"slices/settings\";\r\n\r\nfunction wait(ms: number) {\r\n  return new Promise((res) => delay(res, ms));\r\n}\r\n\r\nasync function timed<T>(task: () => Promise<T>, ms: number = 5000) {\r\n  const from = now();\r\n  const result = (await Promise.any([task(), wait(ms)])) as T | undefined;\r\n  return { result, delta: now() - from };\r\n}\r\n\r\nexport function ConnectionsService() {\r\n  const notify = useSnackbar();\r\n  const [{ remote }] = useSettings();\r\n  const [, setConnections] = useConnections();\r\n  const usingLoadingState = useLoadingState(\"connections\");\r\n\r\n  useEffect(() => {\r\n    let aborted = false;\r\n    let cs: Connection[] = [];\r\n    usingLoadingState(async () => {\r\n      notify(\"Connecting...\");\r\n      for (const { transport: t, url, disabled } of remote ?? []) {\r\n        if (!disabled) {\r\n          const tp = new (getTransport(t))({ url });\r\n          await tp.connect();\r\n          const { result, delta } = await timed(() => tp.call(\"about\"));\r\n          if (result) {\r\n            cs = [\r\n              ...cs,\r\n              {\r\n                ...result,\r\n                url,\r\n                ping: delta,\r\n                call: tp.call.bind(tp),\r\n                disconnect: tp.disconnect.bind(tp),\r\n              },\r\n            ];\r\n          } else await tp.disconnect();\r\n        }\r\n        if (!aborted) setConnections(cs);\r\n      }\r\n      if (!aborted)\r\n        notify(`Connected to ${cs.length} of ${remote?.length} solvers.`);\r\n    });\r\n    return () => {\r\n      aborted = true;\r\n      cs.map((c) => c.disconnect());\r\n    };\r\n  }, [remote, setConnections, notify, usingLoadingState]);\r\n\r\n  return <></>;\r\n}\r\n","import { call } from \"components/script-editor/call\";\r\nimport { get, keyBy, lowerCase as lower, memoize, startCase } from \"lodash\";\r\nimport { useMemo } from \"react\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\n\r\nexport function useBreakpoints() {\r\n  const [{ specimen }] = useSpecimen();\r\n  const [{ code, breakpoints = [], monotonicF, monotonicG }] = useUIState();\r\n\r\n  return useMemo(() => {\r\n    const memo = keyBy(specimen?.eventList, \"id\");\r\n    return memoize((step: number) => {\r\n      const event = specimen?.eventList?.[step];\r\n      if (event) {\r\n        try {\r\n          // Check monotonic f or g values\r\n          if (step) {\r\n            for (const p of [monotonicF && \"f\", monotonicG && \"g\"]) {\r\n              if (p && get(memo[`${event.pId}`], p) > get(event, p)) {\r\n                return { result: `Monotonicity violation on ${p}` };\r\n              }\r\n            }\r\n          }\r\n          // Check breakpoints in the breakpoints section\r\n          for (const {\r\n            active,\r\n            condition,\r\n            type,\r\n            property = \"\",\r\n            reference = 0,\r\n          } of breakpoints) {\r\n            const isType = !type || type === event.type;\r\n            const match = condition?.apply?.(get(event, property), reference);\r\n            if (active && isType && match) {\r\n              return {\r\n                result: `${property} ${lower(\r\n                  startCase(condition?.key)\r\n                )} ${reference}`,\r\n              };\r\n            }\r\n          }\r\n          // Check breakpoints in the script editor section\r\n          if (\r\n            call(code ?? \"\", \"shouldBreak\", [\r\n              step,\r\n              event,\r\n              specimen?.eventList ?? [],\r\n            ])\r\n          ) {\r\n            return { result: \"Script editor\" };\r\n          }\r\n        } catch (e) {\r\n          return { error: `${e}` };\r\n        }\r\n      }\r\n      return { result: \"\" };\r\n    });\r\n  }, [code, specimen, breakpoints, monotonicF, monotonicG]);\r\n}\r\n","import { useSnackbar } from \"components/generic/Snackbar\";\r\nimport { Label } from \"components/generic/Label\";\r\nimport { usePlaybackState } from \"hooks/usePlaybackState\";\r\nimport { range, trimEnd } from \"lodash\";\r\nimport { ReactNode, useCallback, useEffect } from \"react\";\r\nimport { useRaf } from \"react-use\";\r\nimport { useBreakpoints } from \"../hooks/useBreakpoints\";\r\nimport { useSettings } from \"slices/settings\";\r\n\r\nfunction cancellable<T = void>(f: () => Promise<T>, g: (result: T) => void) {\r\n  let cancelled = false;\r\n  requestAnimationFrame(async () => {\r\n    const result = await f();\r\n    if (!cancelled) g(result);\r\n  });\r\n  return () => {\r\n    cancelled = true;\r\n  };\r\n}\r\n\r\nexport function PlaybackService() {\r\n  useRaf();\r\n\r\n  const notify = useSnackbar();\r\n  const [{ playbackRate = 1 }] = useSettings();\r\n  const { playing, end, step, pause, tick } = usePlaybackState();\r\n  const shouldBreak = useBreakpoints();\r\n\r\n  const renderLabel = useCallback(\r\n    (label: ReactNode, offset: number) => (\r\n      <Label primary={label} secondary={`Step ${step + offset}`} />\r\n    ),\r\n    [step]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (playing) {\r\n      return step < end\r\n        ? cancellable(\r\n            async () => {\r\n              for (const i of range(playbackRate)) {\r\n                const r = shouldBreak(step + i);\r\n                if (r.result || r.error) return { ...r, offset: i };\r\n              }\r\n              return { result: \"\", offset: 0 };\r\n            },\r\n            ({ result, offset, error }) => {\r\n              if (!error) {\r\n                if (result) {\r\n                  notify(renderLabel(`Breakpoint hit: ${result}.`, offset));\r\n                  pause(offset);\r\n                } else tick(playbackRate);\r\n              } else {\r\n                notify(renderLabel(`${trimEnd(error, \".\")}.`, offset));\r\n                pause();\r\n              }\r\n            }\r\n          )\r\n        : pause();\r\n    }\r\n  }, [\r\n    renderLabel,\r\n    playing,\r\n    end,\r\n    step,\r\n    pause,\r\n    tick,\r\n    notify,\r\n    shouldBreak,\r\n    playbackRate,\r\n  ]);\r\n\r\n  return <></>;\r\n}\r\n","import { map, uniqBy } from \"lodash\";\nimport { useAsyncAbortable as useAsync } from \"react-async-hook\";\nimport { useConnections } from \"slices/connections\";\nimport { Features, useFeatures } from \"slices/features\";\nimport { useLoadingState } from \"slices/loading\";\n\nconst withSource = (source: string) => (v: any) => ({ ...v, source });\n\nexport function FeaturesService() {\n  const [connections] = useConnections();\n  const [, setFeatures] = useFeatures();\n  const usingLoadingState = useLoadingState(\"features\");\n\n  useAsync(\n    (signal) =>\n      usingLoadingState(async () => {\n        const features: Features = { algorithms: [], formats: [], maps: [] };\n        for (const { call, url } of connections) {\n          for (const prop of [\"algorithms\", \"formats\", \"maps\"] as const) {\n            features[prop] = uniqBy(\n              [\n                ...features[prop],\n                ...map(await call(`features/${prop}`), withSource(url)),\n              ],\n              \"id\"\n            );\n          }\n        }\n        if (!signal.aborted) setFeatures(features);\n      }),\n    [connections, setFeatures]\n  );\n\n  return <></>;\n}\n","import { memoize as memo } from \"lodash\";\nimport { useMemo } from \"react\";\nimport { useAsync } from \"react-async-hook\";\nimport { useLoadingState } from \"slices/loading\";\nimport { Map, useUIState } from \"slices/UIState\";\nimport { useConnectionResolver } from \"./useConnectionResolver\";\n\nexport function useMapContent() {\n  const usingLoadingState = useLoadingState(\"map\");\n  const resolve = useConnectionResolver();\n  const [{ map }] = useUIState();\n\n  const getMap = useMemo(\n    () =>\n      memo(async ({ source, id }: Map = {}) => {\n        if (source && id) {\n          const connection = resolve({ url: source });\n          if (connection) {\n            const result = await connection.call(\"features/map\", { id });\n            return result?.content;\n          }\n        }\n      }, JSON.stringify),\n    [resolve]\n  );\n\n  return useAsync(\n    () =>\n      usingLoadingState(async () => {\n        if (map && map.id)\n          return {\n            ...map,\n            content: map.content ? map.content : await getMap(map),\n          };\n      }),\n    [getMap, map, usingLoadingState]\n  );\n}\n","type WorkerConstructor = new () => Worker;\n\nexport const usingWorker =\n  <R>(w: WorkerConstructor) =>\n  async (task: (w: Worker) => Promise<R>) => {\n    const worker = new w();\n    const out = await task(worker);\n    worker.terminate();\n    return out;\n  };\n\nexport const usingWorkerTask =\n  <T, R>(w: WorkerConstructor) =>\n  (inp: T) =>\n    usingWorker<R>(w)((worker) => {\n      worker.postMessage(inp);\n      return new Promise<R>((res) => {\n        worker.onmessage = (out) => {\n          res(out.data as R);\n        };\n      });\n    });\n","import { memoize as memo } from \"lodash\";\nimport { HashWorker } from \".\";\nimport { usingWorkerTask } from \"./usingWorker\";\n\nexport const hashAsync = memo(usingWorkerTask<string, string>(HashWorker));\n","import { Transport } from \"client/Transport\";\r\nimport { Label } from \"components/generic/Label\";\r\nimport { useSnackbar } from \"components/generic/Snackbar\";\r\nimport { getRenderer } from \"components/specimen-renderer\";\r\nimport { useConnectionResolver } from \"hooks/useConnectionResolver\";\r\nimport { useMapContent } from \"hooks/useMapContent\";\r\nimport { find } from \"lodash\";\r\nimport { ParamsOf } from \"protocol/Message\";\r\nimport { PathfindingTask } from \"protocol/SolveTask\";\r\nimport { useAsyncAbortable as useAsync } from \"react-async-hook\";\r\nimport { useFeatures } from \"slices/features\";\r\nimport { useLoadingState } from \"slices/loading\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { hashAsync as hash } from \"workers/async\";\r\n\r\nasync function solve(\r\n  map: string,\r\n  params: Omit<ParamsOf<PathfindingTask>, \"mapURI\">,\r\n  call: Transport[\"call\"]\r\n) {\r\n  if (map) {\r\n    for (const mapURI of [\r\n      `hash:${await hash(map)}`,\r\n      `map:${encodeURIComponent(map)}`,\r\n    ] as const) {\r\n      const p = { ...params, mapURI };\r\n      const specimen = await call(\"solve/pathfinding\", p);\r\n      if (specimen) return { ...p, specimen, map };\r\n    }\r\n  }\r\n}\r\n\r\nexport function SpecimenService() {\r\n  const usingLoadingState = useLoadingState(\"specimen\");\r\n  const notify = useSnackbar();\r\n  const [{ formats: format }] = useFeatures();\r\n  const [{ algorithm, start, end }, setUIState] = useUIState();\r\n  const resolve = useConnectionResolver();\r\n  const [, setSpecimen] = useSpecimen();\r\n\r\n  const { result: map } = useMapContent();\r\n\r\n  useAsync(\r\n    (signal) =>\r\n      usingLoadingState(async () => {\r\n        if (map?.format && map?.content) {\r\n          const [, defaults] = getRenderer(map.format);\r\n          const entry = find(format, { id: map.format });\r\n          if (entry) {\r\n            const connection = resolve({ url: entry.source });\r\n            if (connection) {\r\n              try {\r\n                const solution = await solve(\r\n                  map.content,\r\n                  {\r\n                    algorithm,\r\n                    format: map.format,\r\n                    instances: [\r\n                      {\r\n                        end: end ?? defaults(map.content)?.end,\r\n                        start: start ?? defaults(map.content)?.start,\r\n                      },\r\n                    ],\r\n                  },\r\n                  connection.call\r\n                );\r\n                if (solution && !signal.aborted) {\r\n                  setSpecimen(solution);\r\n                  setUIState({ step: 0, playback: \"paused\", breakpoints: [] });\r\n                  notify(\r\n                    <Label\r\n                      primary=\"Solution generated.\"\r\n                      secondary={`${solution.specimen.eventList?.length} steps`}\r\n                    />\r\n                  );\r\n                }\r\n              } catch (e: any) {\r\n                notify(\r\n                  <Label primary={`${e.message}`} secondary={connection.name} />\r\n                );\r\n              }\r\n            } else\r\n              notify(\r\n                `No solver is available for the map format (${map.format}).`\r\n              );\r\n          }\r\n        }\r\n      }),\r\n    [\r\n      algorithm,\r\n      start,\r\n      end,\r\n      map,\r\n      notify,\r\n      usingLoadingState,\r\n      format,\r\n      resolve,\r\n      setSpecimen,\r\n    ]\r\n  );\r\n\r\n  return <></>;\r\n}\r\n","import { map, reduce } from \"lodash\";\r\nimport {\r\n  cloneElement,\r\n  createElement,\r\n  FunctionComponent,\r\n  ReactNode,\r\n} from \"react\";\r\n\r\ntype SliceProviderProps = {\r\n  slices?: FunctionComponent[];\r\n  services?: FunctionComponent[];\r\n  children?: ReactNode;\r\n};\r\n\r\nexport function SliceProvider({\r\n  slices,\r\n  children,\r\n  services,\r\n}: SliceProviderProps) {\r\n  return (\r\n    <>\r\n      {reduce(\r\n        map(slices, (s) => createElement(s)),\r\n        (prev, next) => cloneElement(next, {}, prev),\r\n        <>\r\n          {children}\r\n          {map(services, (s, i) => createElement(s, { key: i }))}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { CssBaseline, ThemeProvider } from \"@material-ui/core\";\r\nimport App from \"App\";\r\nimport { SnackbarProvider } from \"components/generic/Snackbar\";\r\nimport \"index.css\";\r\nimport { StrictMode } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport reportWebVitals from \"reportWebVitals\";\r\nimport { ConnectionsService } from \"services/ConnectionsService\";\r\nimport { PlaybackService } from \"services/PlaybackService\";\r\nimport { FeaturesService } from \"services/FeaturesService\";\r\nimport { SpecimenService } from \"services/SpecimenService\";\r\nimport { ConnectionsProvider } from \"slices/connections\";\r\nimport { FeaturesProvider } from \"slices/features\";\r\nimport { LoadingProvider } from \"slices/loading\";\r\nimport { SettingsProvider } from \"slices/settings\";\r\nimport { SliceProvider as EnvironmentProvider } from \"slices/SliceProvider\";\r\nimport { SpecimenProvider } from \"slices/specimen\";\r\nimport { UIStateProvider } from \"slices/UIState\";\r\nimport { theme } from \"theme\";\r\n\r\nconst slices = [\r\n  SettingsProvider,\r\n  ConnectionsProvider,\r\n  FeaturesProvider,\r\n  UIStateProvider,\r\n  SpecimenProvider,\r\n  LoadingProvider,\r\n];\r\n\r\nconst services = [\r\n  ConnectionsService,\r\n  PlaybackService,\r\n  SpecimenService,\r\n  FeaturesService,\r\n];\r\n\r\nrender(\r\n  <StrictMode>\r\n    <CssBaseline>\r\n      <ThemeProvider theme={theme}>\r\n        <SnackbarProvider>\r\n          <EnvironmentProvider slices={slices} services={services}>\r\n            <App />\r\n          </EnvironmentProvider>\r\n        </SnackbarProvider>\r\n      </ThemeProvider>\r\n    </CssBaseline>\r\n  </StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
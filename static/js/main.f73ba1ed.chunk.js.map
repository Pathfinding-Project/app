{"version":3,"sources":["client/theme.tsx","components/generic/Flex.tsx","components/generic/Space.tsx","components/generic/Snackbar.tsx","slices/createSlice.tsx","client/RPCClient.ts","client/getClient.ts","slices/info.tsx","services/ConnectionStateService.tsx","slices/specimen.tsx","components/script-editor/makeTemplate.tsx","components/script-editor/templates.tsx","slices/UIState.tsx","hooks/usePlaybackState.tsx","components/script-editor/call.tsx","hooks/useBreakpoints.tsx","services/PlaybackService.tsx","components/specimen-renderer/default-renderer/DefaultRenderer.tsx","components/specimen-renderer/default-renderer/getDefaults.tsx","components/specimen-renderer/grid-renderer/parseMap.tsx","components/specimen-renderer/grid-renderer/getDefaults.tsx","components/specimen-renderer/colors.tsx","components/specimen-renderer/raster-renderer/config.tsx","components/specimen-renderer/raster-renderer/makeGraphic.tsx","components/specimen-renderer/raster-renderer/Guides.tsx","components/specimen-renderer/raster-renderer/Node.tsx","components/specimen-renderer/raster-renderer/NodeList.tsx","components/specimen-renderer/raster-renderer/Overlay.tsx","components/specimen-renderer/raster-renderer/Path.tsx","components/specimen-renderer/raster-renderer/PixiViewport.tsx","components/specimen-renderer/raster-renderer/Viewport.tsx","components/specimen-renderer/grid-renderer/Selection.tsx","components/specimen-renderer/grid-renderer/selectionInfo.tsx","components/specimen-renderer/grid-renderer/GridRenderer.tsx","components/specimen-renderer/getRenderer.tsx","slices/loading.tsx","services/SpecimenService.tsx","slices/features.tsx","slices/SliceProvider.tsx","components/control-bar/upload.tsx","hooks/useSmallDisplay.tsx","components/generic/Select.tsx","components/control-bar/FeaturePicker.tsx","components/control-bar/InputControls.tsx","components/generic/IconButtonWithTooltip.tsx","components/control-bar/PlaybackControls.tsx","components/generic/Switch.tsx","components/generic/ListEditor.tsx","components/breakpoint-editor/comparators.tsx","components/breakpoint-editor/intrinsicProperties.tsx","components/breakpoint-editor/eventTypes.tsx","components/breakpoint-editor/BreakpointEditor.tsx","components/breakpoint-editor/propertyPaths.tsx","components/breakpoint-editor/BreakpointListEditor.tsx","components/script-editor/ScriptEditor.tsx","components/DebugOptionsEditor.tsx","hooks/useScrollState.tsx","components/generic/ScrollPanel.tsx","components/generic/Modal.tsx","components/control-bar/UtilityControls.tsx","components/control-bar/Controls.tsx","components/generic/LazyList.tsx","components/generic/Overline.tsx","components/generic/Property.tsx","components/specimen-inspector/EventInspector.tsx","components/specimen-inspector/EventListInspector.tsx","components/specimen-inspector/SelectionMenu.tsx","components/specimen-inspector/SpecimenInspector.tsx","components/Title.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["shadow","vertical","props","Box","position","height","width","display","flexDirection","px","SnackbarContext","createContext","noop","useContext","children","snackPack","setSnackPack","useState","open","setOpen","current","setCurrent","undefined","useEffect","length","prev","slice","handleMessage","useCallback","message","key","Date","getTime","handleClose","_","reason","handleExited","Provider","value","Snackbar","autoHideDuration","onClose","TransitionProps","onExited","action","IconButton","aria-label","color","sx","p","onClick","CloseIcon","primary","secondary","Flex","Space","opacity","defaultReducer","next","initialState","initializer","reducer","Store","dispatch","useReducer","useMemo","useAsync","connect","socket","disconnect","call","name","params","rpc","request","io","options","url","JSONRPCClient","listener","response","id","off","receive","emit","on","DEV_PORT","hostname","protocol","window","location","isLocalHost","registry","getClient","once","RPCClient","servers","fetch","json","useInfo","InfoProvider","createSlice","client","notify","useSnackbar","info","version","useSpecimen","SpecimenProvider","returnType","join","map","type","method","prefix","close","chunks","chunk","split","description","c","makeTypeString","defaultReturnValue","JSON","stringify","methods","m","makeComment","makeBody","templates","shouldRender","shouldBreak","useUIState","UIStateProvider","code","makeTemplate","values","specimen","playback","step","setUIState","ready","playing","start","end","eventList","state","canPlay","canPause","canStop","canStepForward","canStepBackward","stepBy","n","clamp","play","pause","stop","stepForward","stepBackward","tick","fn","memo","script","Function","breakpoints","monotonicF","monotonicG","keyBy","memoize","event","get","pId","result","active","condition","property","reference","isType","match","apply","lower","startCase","e","error","RATE","f","g","cancelled","requestAnimationFrame","useRaf","usePlaybackState","useBreakpoints","renderLabel","label","offset","Label","cancellable","i","range","r","trimEnd","justifyContent","alignItems","DisabledIcon","mb","fontSize","getDefaults","wall","h","w","d","last","grid","x","y","filter","flat","row","tile","variables","valid","parseMap","find","node","floor","tint","hex","parseInt","replace","colorsHex","source","teal","destination","pink","expanding","deepOrange","generating","yellow","closing","blueGrey","colors","mapValues","convert","orange","scale","devicePixelRatio","size","draw","Graphics","WEIGHT","Grid","makeGraphic","alpha","clear","lineStyle","forEach","moveTo","lineTo","ceil","left","top","radius","resolution","beginFill","drawCircle","endFill","square","drawRect","box","Node","Square","defaultCondition","constant","nodes","variant","v","chain","down","a","threshold","NodeList","getColor","obj","isUndefined","isNull","path","s","out","push","defined","entries","events","prop","PixiViewportBase","register","handler","global","data","input","clickedAvailable","world","toWorld","viewport","app","stopPropagation","passiveWheel","drag","pinch","wheel","friction","clampZoom","maxScale","minScale","equal","Component","PixiComponent","applyProps","animateScale","animateAlpha","t","useTween","hover","highlight","point","Selected","min","max","take","findLastIndex","entry","findIndex","index","between","onSelect","selection","ref","setRef","setActive","setHover","bgNodes","bgNodeColor","merge","handleClick","selectionInfo","getBoundingClientRect","getPoint","handleMouseEvent","timeout","clearTimeout","delay","cursor","Stage","backgroundColor","Viewport","onMouseDown","onMouseOver","Selection","Nodes","LazyNodes","Overlay","Path","Guides","renderers","GridRenderer","getGridDefaults","DefaultRenderer","useLoading","LoadingProvider","hash","md5","getMap","content","solve","mapURI","encodeURIComponent","setLoading","setSpecimen","algorithm","signal","defaults","getRenderer","solution","mapType","aborted","useFeatures","FeaturesProvider","algorithms","maps","mapTypes","slices","services","reduce","createElement","cloneElement","pop","shift","customMapId","custom","upload","accept","file","strict","ext","text","Error","theme","useTheme","useMediaQuery","itemHeight","sm","padding","trigger","items","onChange","placeholder","useSmallDisplay","State","Tooltip","title","span","bindTrigger","Menu","bindMenu","anchorOrigin","horizontal","transformOrigin","MenuItem","selected","TextField","minWidth","select","target","item","icon","Select","Button","disabled","startIcon","Type","mapDefaults","types","FeaturePicker","MapIcon","CodeIcon","rest","PreviousIcon","PauseIcon","PlayIcon","ForwardIcon","StopIcon","FormControlLabel","control","MuiSwitch","defaultChecked","DefaultListEditorInput","forwardRef","InputBase","fullWidth","inputRef","useRef","LabelIcon","useSwitch","useDelete","useEdit","useEditButton","onChangeItem","onDeleteItem","enabled","element","extrasPlacement","autoFocus","cardStyle","style","field","setField","marginRight","spacing","marginTop","marginBottom","flexGrow","marginLeft","onDelete","onValueChange","Switch","edge","checked","focus","EditIcon","DeleteIcon","Card","borderColor","paddingRight","transition","transitions","create","addItemLabel","onAddItem","placeholderText","getCategory","getOrder","isInitialRender","useInitialRender","intermediateItems","setIntermediateItems","newIndex","setNewIndex","setTimeout","duration","standard","uniqBy","c2","render","Collapse","in","unmountOnExit","appear","mountOnEnter","ListEditorField","sorted","sortBy","List","subheader","ListSubheader","disableSticky","Typography","gutterBottom","mt","isNewCategory","some","pl","pb","pt","ml","disableElevation","Add","arr","editor","setState","Editor","handleChange","k","b","comparators","intrinsicProperties","eventTypes","properties","Divider","flexItem","orientation","mx","textOverflow","whiteSpace","component","inputProps","inputMode","pattern","propertyPaths","uniq","paths","nodeStructure","keys","overflow","ListEditor","BreakpointEditor","debounce","DELAY","AutoSize","loading","CircularProgress","language","defaultValue","minimap","tab","setTab","TabContext","TabList","Tab","TabPanel","renderHeading","BreakpointListEditor","ScriptEditor","showControls","setShowControls","isAbsoluteTop","setIsAbsoluteTop","isTop","setIsTop","setTarget","lastTop","newIsTop","scrollTop","Math","abs","addEventListener","passive","removeEventListener","onTarget","onScroll","div","PanelContext","elevatedStyle","transitionProperties","elevatedChildren","simple","panel","usePanel","useScrollState","styles","background","palette","paper","boxShadow","shadows","AppBar","elevation","Toolbar","ArrowBack","gridColumn","gridRow","flex","Fade","actions","scrollable","setContent","contentRef","setContentRef","hasOverflowingChildren","setHasOverflowingChildren","childHeight","setChildHeight","callback","doesOverflow","innerHeight","offsetHeight","ob","ResizeSensor","detach","useVariant","Dialog","fullScreen","paddingTop","PaperProps","borderRadius","shape","default","maxWidth","ScrollPanel","ModalProps","appBar","ModalAppBarProps","PopupState","isOpen","Modal","ModalAppBar","BugIcon","Title","DebugOptionsEditor","divider","InputControls","PlaybackControls","UtilityControls","renderItem","listOptions","totalCount","itemContent","Dot","transform","my","mr","cardStyles","bgcolor","hidden","CardActionArea","Overline","getColorHex","HiddenIcon","flexWrap","Property","scrollToIndex","align","behavior","EventInspector","anchorReference","anchorPosition","ListItem","ListItemText","StartIcon","DestinationIcon","ListItemIcon","renderer","setSelection","LinearProgress","zIndex","EventListInspector","right","SelectionMenu","Controls","SpecimenInspector","App","reportWebVitals","onPerfEntry","import","then","getCLS","getFID","getFCP","getLCP","getTTFB","ConnectionStateService","PlaybackService","SpecimenService","StrictMode","CssBaseline","ThemeProvider","SnackbarProvider","AppStateProvider","document","getElementById"],"mappings":"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","file":"static/js/main.f73ba1ed.chunk.js","sourcesContent":["import { colors, createTheme } from \"@material-ui/core\";\r\nimport { times } from \"lodash\";\r\n\r\nconst shadow = `\r\n    0px 8px 18px -1px rgb(0 0 0 / 8%), \r\n    0px 10px 48px 0px rgb(0 0 0 / 1%), \r\n    0px 20px 96px 0px rgb(0 0 0 / 0.5%)\r\n`;\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    primary: colors[\"blueGrey\"],\r\n  },\r\n  shadows: [\"\", ...times(24, () => shadow)] as any,\r\n});\r\n","import { Box, BoxProps } from \"@material-ui/core\";\r\n\r\nexport type FlexProps = {\r\n  vertical?: boolean;\r\n} & BoxProps;\r\n\r\nexport function Flex({ vertical, ...props }: FlexProps) {\r\n  return (\r\n    <Box\r\n      position=\"relative\"\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      display=\"flex\"\r\n      flexDirection={vertical ? \"column\" : \"row\"}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n","import { Box } from \"@material-ui/core\";\r\nimport { BoxProps } from \"@material-ui/system\";\r\n\r\nexport function Space(props: BoxProps) {\r\n  return <Box px={0.5} display=\"inline-block\" {...props} />;\r\n}\r\n","import { Box, IconButton, Snackbar } from \"@material-ui/core\";\r\nimport { CloseOutlined as CloseIcon } from \"@material-ui/icons\";\r\nimport { noop } from \"lodash\";\r\nimport {\r\n  createContext,\r\n  ReactNode,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { Flex } from \"./Flex\";\r\nimport { Space } from \"./Space\";\r\n\r\nconst SnackbarContext = createContext<(message?: ReactNode) => void>(noop);\r\n\r\nexport interface SnackbarMessage {\r\n  message?: ReactNode;\r\n  key: number;\r\n}\r\n\r\nexport interface State {\r\n  open: boolean;\r\n  snackPack: readonly SnackbarMessage[];\r\n  messageInfo?: SnackbarMessage;\r\n}\r\n\r\nexport function useSnackbar() {\r\n  return useContext(SnackbarContext);\r\n}\r\n\r\nexport function SnackbarProvider({ children }: { children?: ReactNode }) {\r\n  const [snackPack, setSnackPack] = useState<readonly SnackbarMessage[]>([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [current, setCurrent] = useState<SnackbarMessage | undefined>(\r\n    undefined\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (snackPack.length && !current) {\r\n      setCurrent({ ...snackPack[0] });\r\n      setSnackPack((prev) => prev.slice(1));\r\n      setOpen(true);\r\n    } else if (snackPack.length && current && open) {\r\n      setOpen(false);\r\n    }\r\n  }, [snackPack, current, open]);\r\n\r\n  const handleMessage = useCallback(\r\n    (message: ReactNode) => {\r\n      setSnackPack((prev) => [...prev, { message, key: new Date().getTime() }]);\r\n    },\r\n    [setSnackPack]\r\n  );\r\n\r\n  const handleClose = (_: any, reason?: string) => {\r\n    reason !== \"clickaway\" && setOpen(false);\r\n  };\r\n\r\n  const handleExited = () => setCurrent(undefined);\r\n\r\n  return (\r\n    <>\r\n      <SnackbarContext.Provider value={handleMessage}>\r\n        {children}\r\n      </SnackbarContext.Provider>\r\n      <Snackbar\r\n        key={current?.key}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        TransitionProps={{ onExited: handleExited }}\r\n        message={current?.message}\r\n        action={\r\n          <>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              sx={{ p: 0.5 }}\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\ntype SnackbarLabelProps = {\r\n  primary?: ReactNode;\r\n  secondary?: ReactNode;\r\n};\r\n\r\nexport function SnackbarLabel({ primary, secondary }: SnackbarLabelProps) {\r\n  return (\r\n    <Flex>\r\n      <Box>{primary}</Box>\r\n      <Space />\r\n      <Box sx={{ opacity: 0.56 }}>{secondary}</Box>\r\n    </Flex>\r\n  );\r\n}\r\n","import { noop } from \"lodash\";\r\nimport {\r\n  createContext,\r\n  ReactNode,\r\n  useContext,\r\n  useMemo,\r\n  useReducer,\r\n} from \"react\";\r\nimport { useAsync } from \"react-use\";\r\n\r\ntype Slice<T, U = T> = [T, (next: U) => void];\r\n\r\ntype Reducer<T, U> = (prev: T, next: U) => T;\r\n\r\nconst defaultReducer = (_: any, next: any) => next;\r\n\r\nexport function createSlice<T, U = T>(\r\n  initialState: T,\r\n  initializer?: () => Promise<U>,\r\n  reducer: Reducer<T, U> = defaultReducer\r\n) {\r\n  const Store = createContext<Slice<T, U>>([initialState, noop]);\r\n  return [\r\n    // Hook\r\n    () => useContext(Store),\r\n    // Context\r\n    ({ children }: { children?: ReactNode }) => {\r\n      const [value, dispatch] = useReducer(reducer, initialState);\r\n      const slice = useMemo<Slice<T, U>>(\r\n        () => [value, dispatch],\r\n        [value, dispatch]\r\n      );\r\n      useAsync(async () => initializer && dispatch(await initializer()));\r\n      return <Store.Provider value={slice}>{children}</Store.Provider>;\r\n    },\r\n  ] as const;\r\n}\r\n","import { JSONRPCClient, JSONRPCResponse as Response } from \"json-rpc-2.0\";\r\nimport { NameMethodMap } from \"protocol\";\r\nimport { Request, RequestOf, ResponseOf } from \"protocol/Message\";\r\nimport { io, Socket } from \"socket.io-client\";\r\n\r\nexport interface RPCClientOptions {\r\n  url: string;\r\n}\r\n\r\nexport class RPCClient {\r\n  rpc: JSONRPCClient;\r\n  socket: Socket;\r\n\r\n  constructor(readonly options: RPCClientOptions) {\r\n    this.socket = io(options.url);\r\n    this.rpc = new JSONRPCClient(async (request: Request) => {\r\n      const listener = (response: Response) => {\r\n        if (response.id === request.id) {\r\n          this.socket.off(\"response\", listener);\r\n          this.rpc.receive(response);\r\n        }\r\n      };\r\n      this.socket.emit(\"request\", request);\r\n      this.socket.on(\"response\", listener);\r\n    });\r\n  }\r\n\r\n  async connect() {\r\n    this.socket.connect();\r\n  }\r\n\r\n  async disconnect() {\r\n    this.socket.disconnect();\r\n  }\r\n\r\n  async call<T extends keyof NameMethodMap>(\r\n    name: T,\r\n    params?: RequestOf<NameMethodMap[T]>[\"params\"]\r\n  ): Promise<ResponseOf<NameMethodMap[T]>[\"result\"]> {\r\n    return await this.rpc.request(name, params);\r\n  }\r\n}\r\n","import { once } from \"lodash\";\r\nimport { RPCClient } from \"./RPCClient\";\r\n\r\nconst DEV_PORT = 8001;\r\n\r\nconst { hostname, protocol } = window.location;\r\nconst isLocalHost = hostname === \"localhost\";\r\n\r\nconst registry =\r\n  \"https://raw.githubusercontent.com/path-visualiser/registry/master/index.json\";\r\n\r\ntype Registry = string[];\r\n\r\nexport const getClient = once(async () => {\r\n  if (isLocalHost) {\r\n    return new RPCClient({\r\n      url: `${protocol}//${hostname}:${DEV_PORT}/`,\r\n    });\r\n  } else {\r\n    const response = await fetch(registry);\r\n    const servers = (await response.json()) as Registry;\r\n    return new RPCClient({\r\n      url: servers[0],\r\n    });\r\n  }\r\n});\r\n","import { createSlice } from \"./createSlice\";\r\nimport { CheckConnectionResponse } from \"protocol/CheckConnection\";\r\nimport { getClient } from \"client/getClient\";\r\n\r\ntype Info = CheckConnectionResponse[\"result\"];\r\n\r\nexport const [useInfo, InfoProvider] = createSlice<Info | undefined>(\r\n  undefined,\r\n  async () => {\r\n    const client = await getClient();\r\n    return await client.call(\"about\");\r\n  }\r\n);\r\n","import { useSnackbar } from \"components/generic/Snackbar\";\r\nimport { useEffect } from \"react\";\r\nimport { useInfo } from \"slices/info\";\r\n\r\nexport function ConnectionStateService() {\r\n  const notify = useSnackbar();\r\n  const [info] = useInfo();\r\n\r\n  useEffect(\r\n    () =>\r\n      notify(\r\n        info\r\n          ? `Connected: ${info.name} ${info.version}`\r\n          : \"Connecting to the solver...\"\r\n      ),\r\n    [notify, info]\r\n  );\r\n\r\n  return <></>;\r\n}\r\n","import { createSlice } from \"./createSlice\";\r\nimport { Trace } from \"protocol/Trace\";\r\nimport { PathfindingTask } from \"protocol/SolveTask\";\r\nimport { ParamsOf } from \"protocol/Message\";\r\n\r\ntype Specimen = {\r\n  specimen?: Trace;\r\n  map?: string;\r\n} & Partial<ParamsOf<PathfindingTask>>;\r\n\r\nexport const [useSpecimen, SpecimenProvider] = createSlice<Specimen>({});\r\n","import { chunk, join, map, split } from \"lodash\";\r\nimport { FunctionTemplate } from \"./FunctionTemplate\";\r\n\r\ntype GenericFunctionTemplate = FunctionTemplate<[...any], any>;\r\n\r\nfunction makeTypeString({ returnType, params }: GenericFunctionTemplate) {\r\n  return `@type {(${join(\r\n    map(params, (p) => `${p.name}: ${p.type}`),\r\n    \", \"\r\n  )}) => ${returnType}}`;\r\n}\r\n\r\nfunction makeComment(method: GenericFunctionTemplate) {\r\n  const [open, prefix, close] = [\"/**\", \" * \", \" */\"];\r\n  const chunks = map(chunk(split(method.description, \" \"), 9), (c) =>\r\n    join(c, \" \")\r\n  );\r\n  return join(\r\n    [\r\n      open,\r\n      ...map(chunks, (c) => `${prefix}${c}`),\r\n      `${prefix}${makeTypeString(method)}`,\r\n      close,\r\n    ],\r\n    \"\\n\"\r\n  );\r\n}\r\n\r\nfunction makeBody({\r\n  name,\r\n  params,\r\n  defaultReturnValue,\r\n}: GenericFunctionTemplate) {\r\n  return join(\r\n    [\r\n      `function ${name}(${join(map(params, \"name\"), \", \")}) {`,\r\n      `    return ${JSON.stringify(defaultReturnValue)};`,\r\n      `}`,\r\n    ],\r\n    \"\\n\"\r\n  );\r\n}\r\n\r\nexport function makeTemplate(methods?: GenericFunctionTemplate[]) {\r\n  return join(\r\n    map(methods, (m) => join([makeComment(m), makeBody(m)], \"\\n\")),\r\n    \"\\n\\n\"\r\n  );\r\n}\r\n","import { TraceEvent } from \"protocol/Trace\";\r\nimport { FunctionTemplate } from \"./FunctionTemplate\";\r\n\r\nexport type ShouldBreak = FunctionTemplate<\r\n  [number, TraceEvent, TraceEvent[]],\r\n  boolean\r\n>;\r\n\r\nexport const shouldBreak: ShouldBreak = {\r\n  name: \"shouldBreak\",\r\n  description:\r\n    \"Define in what situations the debugger should break, in addition to the conditions defined in the standard options.\",\r\n  params: [\r\n    { name: \"step\", type: \"number\" },\r\n    { name: \"event\", type: \"any\" },\r\n    { name: \"events\", type: \"any\" },\r\n  ],\r\n  defaultReturnValue: false,\r\n  returnType: \"boolean\",\r\n};\r\n\r\nexport type ShouldRender = FunctionTemplate<\r\n  [number, TraceEvent, TraceEvent[]],\r\n  boolean\r\n>;\r\n\r\nexport const shouldRender: ShouldRender = {\r\n  name: \"shouldRender\",\r\n  description: \"Define which objects the renderer should display.\",\r\n  params: [\r\n    { name: \"step\", type: \"number\" },\r\n    { name: \"event\", type: \"any\" },\r\n    { name: \"events\", type: \"any\" },\r\n  ],\r\n  defaultReturnValue: true,\r\n  returnType: \"boolean\",\r\n};\r\n\r\nexport const templates = {\r\n  shouldRender,\r\n  shouldBreak,\r\n};\r\n","import { makeTemplate } from \"components/script-editor/makeTemplate\";\r\nimport { templates } from \"components/script-editor/templates\";\r\nimport { values } from \"lodash\";\r\nimport { Feature } from \"protocol/FeatureQuery\";\r\nimport { TraceEventType } from \"protocol/Trace\";\r\nimport { createSlice } from \"./createSlice\";\r\n\r\nexport type PlaybackStateType = \"playing\" | \"paused\" | undefined;\r\n\r\ntype PlaybackState = { playback?: PlaybackStateType; step?: number };\r\n\r\ntype InputState = {\r\n  algorithm?: string;\r\n  map?: Partial<Feature & { type: string }>;\r\n};\r\n\r\nexport type Comparator = {\r\n  key: string;\r\n  apply: (value: number, reference: number) => boolean;\r\n};\r\n\r\nexport type Breakpoint = {\r\n  key: string;\r\n  property?: string;\r\n  reference?: number;\r\n  condition?: Comparator;\r\n  active?: boolean;\r\n  type?: TraceEventType;\r\n};\r\n\r\ntype DebugOptionsState = {\r\n  code?: string;\r\n  monotonicF?: boolean;\r\n  monotonicG?: boolean;\r\n  breakpoints?: Breakpoint[];\r\n};\r\n\r\ntype SpecimenState = {\r\n  start?: number;\r\n  end?: number;\r\n};\r\n\r\nexport type UIState = InputState &\r\n  PlaybackState &\r\n  DebugOptionsState &\r\n  SpecimenState;\r\n\r\nexport const [useUIState, UIStateProvider] = createSlice<\r\n  UIState,\r\n  Partial<UIState>\r\n>(\r\n  {\r\n    code: makeTemplate(values(templates)),\r\n  },\r\n  undefined,\r\n  (prev, next) => ({ ...prev, ...next })\r\n);\r\n","import { clamp } from \"lodash\";\r\nimport { useMemo } from \"react\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\n\r\nexport function usePlaybackState() {\r\n  const [{ specimen }] = useSpecimen();\r\n  const [{ playback, step = 0 }, setUIState] = useUIState();\r\n\r\n  const ready = !!specimen;\r\n  const playing = playback === \"playing\";\r\n  const [start, end] = [0, (specimen?.eventList?.length ?? 1) - 1];\r\n\r\n  return useMemo(() => {\r\n    const state = {\r\n      start,\r\n      end,\r\n      step,\r\n      canPlay: ready && !playing && step < end,\r\n      canPause: ready && playing,\r\n      canStop: ready,\r\n      canStepForward: ready && !playing && step < end,\r\n      canStepBackward: ready && !playing && step > 0,\r\n    };\r\n\r\n    const stepBy = (n: number) => clamp(step + n, start, end);\r\n\r\n    const callbacks = {\r\n      play: () => setUIState({ playback: \"playing\", step: stepBy(1) }),\r\n      pause: (n = 0) => setUIState({ playback: \"paused\", step: stepBy(n) }),\r\n      stop: () => setUIState({ step: start, playback: \"paused\" }),\r\n      stepForward: () => setUIState({ step: stepBy(1) }),\r\n      stepBackward: () => setUIState({ step: stepBy(-1) }),\r\n      tick: (n = 1) => setUIState({ playback: \"playing\", step: stepBy(n) }),\r\n    };\r\n\r\n    return {\r\n      playing: playback === \"playing\",\r\n      ...state,\r\n      ...callbacks,\r\n    };\r\n  }, [end, playback, playing, ready, setUIState, start, step]);\r\n}\r\n","import memo from \"memoizee\";\r\nimport { FunctionTemplate } from \"./FunctionTemplate\";\r\nimport { templates } from \"./templates\";\r\n\r\ntype TemplateMap = typeof templates;\r\n\r\ntype Key = keyof TemplateMap;\r\n\r\ntype ReturnTypeOf<T extends Key> = TemplateMap[T] extends FunctionTemplate<\r\n  [...any],\r\n  infer R\r\n>\r\n  ? R\r\n  : never;\r\n\r\ntype ParamsOf<T extends Key> = TemplateMap[T] extends FunctionTemplate<\r\n  infer R,\r\n  any\r\n>\r\n  ? R\r\n  : [];\r\n\r\nconst fn = memo(\r\n  (script: string, method: string) =>\r\n    // eslint-disable-next-line no-new-func\r\n    new Function(\r\n      \"params\",\r\n      `${script}; return ${method}.apply(null, params);`\r\n    ) as (params: any[]) => any\r\n);\r\n\r\nexport function call<T extends Key>(\r\n  script: string,\r\n  method: T,\r\n  params: ParamsOf<T>\r\n): ReturnTypeOf<T> {\r\n  try {\r\n    return fn(script, method)(params);\r\n  } catch {\r\n    return templates[method].defaultReturnValue as ReturnTypeOf<T>;\r\n  }\r\n}\r\n","import { call } from \"components/script-editor/call\";\r\nimport { get, keyBy, lowerCase as lower, memoize, startCase } from \"lodash\";\r\nimport { useMemo } from \"react\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\n\r\nexport function useBreakpoints() {\r\n  const [{ specimen }] = useSpecimen();\r\n  const [{ code, breakpoints = [], monotonicF, monotonicG }] = useUIState();\r\n\r\n  return useMemo(() => {\r\n    const memo = keyBy(specimen?.eventList, \"id\");\r\n    return memoize((step: number) => {\r\n      const event = specimen?.eventList?.[step];\r\n      if (event) {\r\n        try {\r\n          // Check monotonic f or g values\r\n          if (step) {\r\n            for (const p of [monotonicF && \"f\", monotonicG && \"g\"]) {\r\n              if (p && get(memo[`${event.pId}`], p) > get(event, p)) {\r\n                return { result: `Monotonicity violation on ${p}` };\r\n              }\r\n            }\r\n          }\r\n          // Check breakpoints in the breakpoints section\r\n          for (const {\r\n            active,\r\n            condition,\r\n            type,\r\n            property = \"\",\r\n            reference = 0,\r\n          } of breakpoints) {\r\n            const isType = !type || type === event.type;\r\n            const match = condition?.apply?.(get(event, property), reference);\r\n            if (active && isType && match) {\r\n              return {\r\n                result: `${property} ${lower(\r\n                  startCase(condition?.key)\r\n                )} ${reference}`,\r\n              };\r\n            }\r\n          }\r\n          // Check breakpoints in the script editor section\r\n          if (\r\n            call(code ?? \"\", \"shouldBreak\", [\r\n              step,\r\n              event,\r\n              specimen?.eventList ?? [],\r\n            ])\r\n          ) {\r\n            return { result: \"Script editor\" };\r\n          }\r\n        } catch (e) {\r\n          return { error: `${e}` };\r\n        }\r\n      }\r\n      return { result: \"\" };\r\n    });\r\n  }, [code, specimen, breakpoints, monotonicF, monotonicG]);\r\n}\r\n","import {\r\n  SnackbarLabel as Label,\r\n  useSnackbar,\r\n} from \"components/generic/Snackbar\";\r\nimport { usePlaybackState } from \"hooks/usePlaybackState\";\r\nimport { range, trimEnd } from \"lodash\";\r\nimport { ReactNode, useCallback, useEffect } from \"react\";\r\nimport { useRaf } from \"react-use\";\r\nimport { useBreakpoints } from \"../hooks/useBreakpoints\";\r\n\r\nconst RATE = 4;\r\n\r\nfunction cancellable<T = void>(f: () => Promise<T>, g: (result: T) => void) {\r\n  let cancelled = false;\r\n  requestAnimationFrame(async () => {\r\n    const result = await f();\r\n    if (!cancelled) g(result);\r\n  });\r\n  return () => {\r\n    cancelled = true;\r\n  };\r\n}\r\n\r\nexport function PlaybackService() {\r\n  useRaf();\r\n\r\n  const notify = useSnackbar();\r\n  const { playing, end, step, pause, tick } = usePlaybackState();\r\n  const shouldBreak = useBreakpoints();\r\n\r\n  const renderLabel = useCallback(\r\n    (label: ReactNode, offset: number) => (\r\n      <Label primary={label} secondary={`Step ${step + offset}`} />\r\n    ),\r\n    [step]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (playing) {\r\n      return step < end\r\n        ? cancellable(\r\n            async () => {\r\n              for (const i of range(RATE)) {\r\n                const r = shouldBreak(step + i);\r\n                if (r.result || r.error) return { ...r, offset: i };\r\n              }\r\n              return { result: \"\", offset: 0 };\r\n            },\r\n            ({ result, offset, error }) => {\r\n              if (!error) {\r\n                if (result) {\r\n                  notify(renderLabel(`Breakpoint hit: ${result}.`, offset));\r\n                  pause(offset);\r\n                } else tick(RATE);\r\n              } else {\r\n                notify(renderLabel(`${trimEnd(error, \".\")}.`, offset));\r\n                pause();\r\n              }\r\n            }\r\n          )\r\n        : pause();\r\n    }\r\n  }, [renderLabel, playing, end, step, pause, tick, notify, shouldBreak]);\r\n\r\n  return <></>;\r\n}\r\n","import { BlurOffOutlined as DisabledIcon } from \"@material-ui/icons\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { RendererProps } from \"components/specimen-renderer/Renderer\";\r\n\r\nexport function DefaultRenderer({ width, height }: RendererProps) {\r\n  return (\r\n    <Flex\r\n      {...{ width, height }}\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      color=\"text.secondary\"\r\n      vertical\r\n    >\r\n      <DisabledIcon sx={{ mb: 2 }} fontSize=\"large\" />\r\n      No renderer is installed for the current map style.\r\n    </Flex>\r\n  );\r\n}\r\n","export const getDefaults = () => ({\r\n  start: 0,\r\n  end: 0,\r\n});\r\n","import { Point } from \"components/specimen-renderer/Renderer\";\r\nimport { filter, flatMap as flat, last, map, split } from \"lodash\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\n\r\nexport function parseMap(m: string = \"\", wall: string = \"@\") {\r\n  const [, h, w] = split(m, \"\\n\");\r\n  const [width, height] = map([w, h], (d) => +last(split(d, \" \"))!);\r\n  const grid = split(m, \"\\n\").slice(4);\r\n  return [\r\n    { x: width, y: height },\r\n    filter(\r\n      flat(grid, (row, y) =>\r\n        map(row, (tile, x) =>\r\n          tile === wall ? { variables: { x, y } } : undefined\r\n        )\r\n      )\r\n    ) as TraceEvent[],\r\n    ({ x, y }: Point) => grid[y]?.[x] !== wall,\r\n  ] as const;\r\n}\r\n","import { find, floor, range } from \"lodash\";\r\nimport { parseMap } from \"./parseMap\";\r\n\r\nexport function getDefaults(m: string = \"\", wall: string = \"@\") {\r\n  const [{ x: w, y: h }, , valid] = parseMap(m, wall);\r\n  const node =\r\n    find(range(w * h), (i) => valid({ x: i % w, y: floor(i / w) })) ?? 0;\r\n  return {\r\n    start: node,\r\n    end: node,\r\n  };\r\n}\r\n","import {\r\n  blueGrey,\r\n  deepOrange,\r\n  orange,\r\n  pink,\r\n  teal,\r\n  yellow,\r\n} from \"@material-ui/core/colors\";\r\nimport { mapValues } from \"lodash\";\r\nimport { TraceEventType } from \"protocol/Trace\";\r\n\r\nconst tint = \"500\";\r\n\r\nexport function convert(hex: string) {\r\n  return parseInt(hex.replace(\"#\", \"0x\"));\r\n}\r\n\r\nexport const colorsHex = {\r\n  source: teal[\"A400\"],\r\n  destination: pink[\"A400\"],\r\n  expanding: deepOrange[tint],\r\n  generating: yellow[tint],\r\n  closing: blueGrey[\"200\"],\r\n  end: pink[\"A400\"],\r\n};\r\n\r\nexport const colors: { [K in TraceEventType]: number } = mapValues(\r\n  colorsHex,\r\n  convert\r\n);\r\n\r\nexport function getColor(key?: TraceEventType) {\r\n  return (key && colors[key]) || convert(orange[tint]);\r\n}\r\n\r\nexport function getColorHex(key?: TraceEventType) {\r\n  return (key && colorsHex[key]) ?? orange[tint];\r\n}\r\n","export const scale = 10 * devicePixelRatio;\r\nexport const size = 1200;\r\n","import { Graphics } from \"@inlet/react-pixi\";\r\nimport { ComponentProps } from \"react\";\r\nimport { Graphics as PIXIGraphics } from \"@pixi/graphics\";\r\n\r\nexport function makeGraphic<T = any>(\r\n  draw: (g: PIXIGraphics, props: ComponentProps<typeof Graphics> & T) => void\r\n) {\r\n  return (props: ComponentProps<typeof Graphics> & T) => {\r\n    return <Graphics {...props} draw={(g) => draw(g, props)} />;\r\n  };\r\n}\r\n","import { ceil, forEach, range } from \"lodash\";\r\nimport { makeGraphic } from \"./makeGraphic\";\r\nimport { scale } from \"./config\";\r\nimport { ComponentProps } from \"react\";\r\n\r\nconst WEIGHT = 1;\r\n\r\nconst Grid = makeGraphic<{ alpha?: number; grid?: number }>(\r\n  (g, { width = 0, height = 0, alpha = 1, grid = 5 }) => {\r\n    g.clear();\r\n    g.lineStyle(WEIGHT, 0x000000, alpha);\r\n    forEach(range(scale * grid, height, scale * grid), (i) =>\r\n      g.moveTo(0, i + WEIGHT / 2).lineTo(width, i + WEIGHT / 2)\r\n    );\r\n    forEach(range(scale * grid, width, scale * grid), (i) =>\r\n      g.moveTo(i + WEIGHT / 2, 0).lineTo(i + WEIGHT / 2, height)\r\n    );\r\n  }\r\n);\r\n\r\ntype Props = ComponentProps<typeof Grid>;\r\n\r\nexport function Guides({\r\n  width = 0,\r\n  height = 0,\r\n  x = 0,\r\n  y = 0,\r\n  grid = 5,\r\n  ...params\r\n}: Props) {\r\n  return (\r\n    <Grid\r\n      width={ceil((width + 2) / grid) * grid * scale}\r\n      height={ceil((height + 2) / grid) * grid * scale}\r\n      grid={grid}\r\n      {...params}\r\n    />\r\n  );\r\n}\r\n","import { makeGraphic } from \"./makeGraphic\";\r\nimport { scale } from \"./config\";\r\nimport { Graphics } from \"@pixi/graphics\";\r\nimport { map } from \"lodash\";\r\n\r\nexport type NodeProps = {\r\n  color?: number;\r\n  left?: number;\r\n  top?: number;\r\n  radius?: number;\r\n  resolution?: number;\r\n};\r\n\r\nexport const node = (\r\n  g: Graphics,\r\n  { color, left = 0, top = 0, radius = 0.25, resolution: r = 1 }: NodeProps\r\n) =>\r\n  g\r\n    .beginFill(color ?? 0x000000)\r\n    .drawCircle(\r\n      r * (1.5 * scale + left),\r\n      r * (1.5 * scale + top),\r\n      r * radius * scale\r\n    )\r\n    .endFill();\r\n\r\nexport const square = (\r\n  g: Graphics,\r\n  { color, left = 0, top = 0, radius = 0.5, resolution: r = 1 }: NodeProps\r\n) =>\r\n  g\r\n    .beginFill(color ?? 0x000000)\r\n    .drawRect(\r\n      r * (scale + (radius * scale) / 2 + left),\r\n      r * (scale + (radius * scale) / 2 + top),\r\n      r * (radius * scale),\r\n      r * (radius * scale)\r\n    )\r\n    .endFill();\r\n\r\nexport const box = (\r\n  g: Graphics,\r\n  { color, left = 0, top = 0, resolution: r = 1 }: NodeProps\r\n) =>\r\n  g\r\n    .beginFill(color ?? 0x000000)\r\n    .drawRect(\r\n      r * (scale + left),\r\n      r * (scale + top),\r\n      r * (1 * scale),\r\n      r * (1 * scale)\r\n    )\r\n    .endFill();\r\n\r\nexport const [Node, Box, Square] = map([node, box, square], (f) =>\r\n  makeGraphic<NodeProps>((g, p) => {\r\n    g.clear();\r\n    f(g, p);\r\n  })\r\n);\r\n","import { Graphics } from \"@inlet/react-pixi\";\r\nimport { chain, constant, floor, memoize, slice } from \"lodash\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport { Trace, TraceEventType } from \"protocol/Trace\";\r\nimport { useCallback, useMemo } from \"react\";\r\nimport { scale } from \"./config\";\r\nimport { box, NodeProps } from \"./Node\";\r\n\r\ntype Props = {\r\n  nodes: Trace[\"eventList\"];\r\n  color?: (type?: TraceEventType) => number;\r\n  variant?: (g: PIXI.Graphics, options: NodeProps) => PIXI.Graphics;\r\n  resolution?: number;\r\n  condition?: (step: number) => boolean;\r\n};\r\n\r\nconst defaultCondition = constant(true);\r\n\r\nexport function NodeList({\r\n  nodes,\r\n  color,\r\n  variant = box,\r\n  resolution = 1 / scale,\r\n  condition = defaultCondition,\r\n}: Props) {\r\n  const memo = useMemo(\r\n    () =>\r\n      chain(nodes)\r\n        .filter((_, i) => condition(i))\r\n        .keyBy(({ variables: v }) => `${v?.x ?? 0}::${v?.y ?? 0}`)\r\n        .values()\r\n        .value(),\r\n    [nodes, condition]\r\n  );\r\n  const draw = useCallback(\r\n    (g: PIXI.Graphics) => {\r\n      g.clear();\r\n      for (const { variables: v, type } of memo) {\r\n        variant(g, {\r\n          color: color?.(type) ?? 0xf6f6f6,\r\n          left: (v?.x ?? 0) * scale,\r\n          top: (v?.y ?? 0) * scale,\r\n          radius: 0.25,\r\n          resolution,\r\n        });\r\n      }\r\n      return g;\r\n    },\r\n    [memo, color, resolution, variant]\r\n  );\r\n  return <Graphics draw={draw} scale={1 / resolution} />;\r\n}\r\n\r\nconst down = (n: number, a: number = 1) => floor(n / a) * a;\r\n\r\nexport function LazyNodeList({\r\n  nodes,\r\n  step = 0,\r\n  size = 2500,\r\n  condition,\r\n  ...props\r\n}: {\r\n  step?: number;\r\n  size?: number;\r\n} & Props) {\r\n  const threshold = down(step, size);\r\n\r\n  const chunk = useMemo(\r\n    () => memoize((n: number) => slice(nodes, 0, n)),\r\n    [nodes]\r\n  );\r\n\r\n  const c = useCallback(\r\n    (n: number) => condition?.(n + threshold) ?? true,\r\n    [condition, threshold]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <NodeList {...props} nodes={chunk(threshold)} condition={condition} />\r\n      <NodeList\r\n        {...props}\r\n        nodes={slice(nodes, threshold, step + 1)}\r\n        condition={c}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { Point } from \"components/specimen-renderer/Renderer\";\r\nimport { floor, map } from \"lodash\";\r\nimport { getColor } from \"../colors\";\r\nimport { scale } from \"./config\";\r\nimport { Square } from \"./Node\";\r\n\r\ntype OverlayProps = {\r\n  start?: number;\r\n  end?: number;\r\n  size?: Point;\r\n};\r\nexport function Overlay({\r\n  start = 0,\r\n  end = 0,\r\n  size = { x: 0, y: 0 },\r\n}: OverlayProps) {\r\n  return (\r\n    <>\r\n      {map(\r\n        [\r\n          { color: getColor(\"destination\"), node: end },\r\n          { color: getColor(\"source\"), node: start },\r\n        ],\r\n        ({ color, node }, i) => (\r\n          <Square\r\n            key={i}\r\n            x={scale * (node % size.x)}\r\n            y={scale * floor(node / size.x)}\r\n            color={color}\r\n          />\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { Graphics } from \"@inlet/react-pixi\";\r\nimport { Graphics as PixiGraphics } from \"@pixi/graphics\";\r\nimport { isNull, isUndefined, keyBy } from \"lodash\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\nimport { useMemo } from \"react\";\r\nimport { getColor } from \"../colors\";\r\nimport { scale } from \"./config\";\r\nimport { Square } from \"./Node\";\r\n\r\nfunction defined<T>(obj: T): obj is Exclude<T, undefined | null> {\r\n  return !isUndefined(obj) && !isNull(obj);\r\n}\r\n\r\ntype PathProps = {\r\n  nodes?: TraceEvent[];\r\n  step?: number;\r\n};\r\n\r\nexport function Path({ nodes = [], step = 0 }: PathProps) {\r\n  const path = useMemo(() => {\r\n    const memo = keyBy(nodes, \"id\");\r\n    return (s: number) => {\r\n      const out = [];\r\n      let next: TraceEvent | undefined = nodes[s];\r\n      while (next) {\r\n        out.push(next);\r\n        next = defined(next.pId) ? memo[`${next.pId}`] : undefined;\r\n      }\r\n      return out;\r\n    };\r\n  }, [nodes]);\r\n\r\n  const draw = useMemo(() => {\r\n    const p = path(step);\r\n    return (g: PixiGraphics) => {\r\n      g.clear();\r\n      for (const [i, node] of p.entries()) {\r\n        const { x = 0, y = 0 } = node?.variables ?? {};\r\n        g.lineTo((x + 1.5) * scale, (y + 1.5) * scale);\r\n        if (!i) g.lineStyle(3, getColor(\"source\"));\r\n      }\r\n    };\r\n  }, [path, step]);\r\n\r\n  return (\r\n    <>\r\n      <Graphics draw={draw} />\r\n      <Square\r\n        x={scale * (nodes?.[step]?.variables?.x ?? 0)}\r\n        y={scale * (nodes?.[step]?.variables?.y ?? 0)}\r\n        color={getColor(\"source\")}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { find } from \"lodash\";\r\nimport { Viewport as PixiViewportBase } from \"pixi-viewport\";\r\nimport * as PIXI from \"pixi.js\";\r\n\r\nexport type ViewportEvent = {\r\n  global: PIXI.Point;\r\n  world: PIXI.Point;\r\n  event: PointerEvent;\r\n};\r\n\r\nexport type ViewportEventHandler = (e: ViewportEvent) => void;\r\n\r\nexport type PointerEvent = \"onMouseOver\" | \"onClick\" | \"onMouseDown\";\r\n\r\nexport type PropEventPair = {\r\n  prop: PointerEvent;\r\n  event: string;\r\n  filter?: boolean;\r\n};\r\n\r\nexport const events = [\r\n  { prop: \"onMouseOver\", event: \"mousemove\" },\r\n  { prop: \"onClick\", event: \"click\", filter: true },\r\n  { prop: \"onClick\", event: \"tap\", filter: true },\r\n  { prop: \"onMouseDown\", event: \"pointerdown\", filter: true },\r\n] as PropEventPair[];\r\n\r\nexport class PixiViewport extends PixiViewportBase {\r\n  events: {\r\n    [K in string]?: () => void;\r\n  } = {};\r\n  register(prop: PointerEvent, handler?: ViewportEventHandler) {\r\n    const { event, filter } = find(events, (c) => c.prop === prop)!;\r\n    this.events?.[event]?.();\r\n    if (handler) {\r\n      const f = (e: PIXI.InteractionEvent) => {\r\n        const { global } = e.data;\r\n        if (!filter || this.input.clickedAvailable) {\r\n          handler?.({\r\n            global,\r\n            world: this.toWorld(global),\r\n            event: prop,\r\n          });\r\n        }\r\n      };\r\n      this.on(event, f);\r\n      this.events[event] = () => this.off(event, f);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Adapted from https://codesandbox.io/s/react-pixi-viewport-9ngfd\r\n * @author roxgarage\r\n */\r\n\r\nimport { PixiComponent, useApp } from \"@inlet/react-pixi\";\r\nimport { map } from \"lodash\";\r\nimport * as PIXI from \"pixi.js\";\r\nimport React from \"react\";\r\nimport {\r\n  PointerEvent,\r\n  PixiViewport,\r\n  events,\r\n  ViewportEventHandler,\r\n} from \"./PixiViewport\";\r\n\r\nexport type ViewportProps = {\r\n  width?: number;\r\n  height?: number;\r\n  children?: React.ReactNode;\r\n  event?: PIXI.InteractionEvent;\r\n} & { [K in PointerEvent]?: ViewportEventHandler };\r\n\r\nexport type Props = {\r\n  app: PIXI.Application;\r\n} & ViewportProps;\r\n\r\nfunction create(props: Props) {\r\n  const viewport = new PixiViewport({\r\n    interaction: props.app.renderer.plugins.interaction,\r\n    ticker: props.app.ticker,\r\n    stopPropagation: true,\r\n    passiveWheel: false,\r\n  })\r\n    .drag()\r\n    .pinch()\r\n    .wheel()\r\n    .decelerate({ friction: 0.98 })\r\n    .clampZoom({ maxScale: 10, minScale: 0.02 });\r\n  return viewport as PixiViewport;\r\n}\r\n\r\nfunction applyProps(\r\n  v: PixiViewport,\r\n  prev: Props,\r\n  { width, height, ...next }: Props\r\n) {\r\n  for (const { equal, apply } of [\r\n    ...map(events, ({ prop }) => ({\r\n      equal: prev[prop] === next[prop],\r\n      apply: () => v.register(prop, next[prop]),\r\n    })),\r\n    {\r\n      prop: prev.width === width && prev.height === height,\r\n      apply: () => v.resize(width, height, (width ?? 0) * 2, (height ?? 0) * 2),\r\n    },\r\n  ]) {\r\n    !equal && apply();\r\n  }\r\n}\r\n\r\nconst Component = PixiComponent<Props, PixiViewport>(\"Viewport\", {\r\n  create: (props) => {\r\n    const viewport = create(props);\r\n    applyProps(viewport, props, props);\r\n    return viewport;\r\n  },\r\n  applyProps,\r\n});\r\n\r\nexport const Viewport = (props: ViewportProps) => {\r\n  const app = useApp();\r\n  return <Component app={app} {...props} />;\r\n};\r\n","import { map } from \"lodash\";\r\nimport { Point } from \"components/specimen-renderer/Renderer\";\r\nimport { scale } from \"../raster-renderer/config\";\r\nimport { useTween } from \"react-use\";\r\nimport { ComponentProps as PropsOf } from \"react\";\r\nimport { Node } from \"../raster-renderer/Node\";\r\n\r\ntype SelectedProps = {\r\n  animateScale?: boolean;\r\n  animateAlpha?: boolean;\r\n} & PropsOf<typeof Node>;\r\n\r\ntype Props = {\r\n  hover?: Point;\r\n  highlight?: Point;\r\n};\r\n\r\nexport function Selected({\r\n  x = 0,\r\n  y = 0,\r\n  animateScale,\r\n  animateAlpha,\r\n  ...props\r\n}: SelectedProps) {\r\n  const t = useTween(\"outCirc\", 300);\r\n  return (\r\n    <Node\r\n      {...props}\r\n      scale={animateScale ? t : 1}\r\n      x={x + (animateScale ? 1.5 * scale - 1.5 * scale * t : 0)}\r\n      y={y + (animateScale ? 1.5 * scale - 1.5 * scale * t : 0)}\r\n      radius={1}\r\n      alpha={animateAlpha ? t : 1}\r\n    />\r\n  );\r\n}\r\n\r\nexport function Selection({ hover, highlight }: Props) {\r\n  return (\r\n    <>\r\n      {map(\r\n        [\r\n          { point: hover, color: 0xf9f9f9, animateAlpha: true },\r\n          { point: highlight, color: 0xf1f1f1, animateScale: true },\r\n        ],\r\n        ({ point, ...props }, i) =>\r\n          point && (\r\n            <Selected\r\n              key={`${i}::${point.x}::${point.y}`}\r\n              x={point.x * scale}\r\n              y={point.y * scale}\r\n              {...props}\r\n            />\r\n          )\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { Point, SelectionInfo } from \"components/specimen-renderer/Renderer\";\r\nimport { findIndex, findLastIndex, take } from \"lodash\";\r\nimport { Trace } from \"protocol/Trace\";\r\nimport { parseMap } from \"./parseMap\";\r\n\r\nfunction between(v: number, min: number, max: number) {\r\n  return v >= min && v < max;\r\n}\r\n\r\nexport function selectionInfo(map: string = \"\", specimen: Trace = {}) {\r\n  const [{ x: w, y: h }, , valid] = parseMap(map);\r\n  return ({ x, y }: Point, step: number = 0) => {\r\n    const nodes = take(specimen?.eventList, step);\r\n    const node = findLastIndex(\r\n      nodes,\r\n      ({ variables: v }) => (v?.x ?? 0) === x && (v?.y ?? 0) === y\r\n    );\r\n    const entry = findIndex(\r\n      specimen?.eventList,\r\n      ({ variables: v, type }) =>\r\n        type === \"expanding\" && (v?.x ?? 0) === x && (v?.y ?? 0) === y\r\n    );\r\n    return {\r\n      current: node !== -1 ? { index: node, event: nodes[node] } : undefined,\r\n      entry: entry !== -1 ? { index: entry, event: nodes[entry] } : undefined,\r\n      node:\r\n        between(x, 0, w) && between(y, 0, h) && valid({ x, y })\r\n          ? { key: y * w + x }\r\n          : undefined,\r\n    } as SelectionInfo;\r\n  };\r\n}\r\n","import { Stage } from \"@inlet/react-pixi\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { blueGrey } from \"@material-ui/core/colors\";\r\nimport { call } from \"components/script-editor/call\";\r\nimport { Point, RendererProps } from \"components/specimen-renderer/Renderer\";\r\nimport { constant, delay, floor, memoize, merge, once } from \"lodash\";\r\nimport { ComponentProps, useMemo, useState } from \"react\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { convert, getColor } from \"../colors\";\r\nimport { scale } from \"../raster-renderer/config\";\r\nimport { Guides } from \"../raster-renderer/Guides\";\r\nimport {\r\n  LazyNodeList as LazyNodes,\r\n  NodeList as Nodes,\r\n} from \"../raster-renderer/NodeList\";\r\nimport { Overlay } from \"../raster-renderer/Overlay\";\r\nimport { Path } from \"../raster-renderer/Path\";\r\nimport { ViewportEvent } from \"../raster-renderer/PixiViewport\";\r\nimport { Viewport } from \"../raster-renderer/Viewport\";\r\nimport { getDefaults } from \"./getDefaults\";\r\nimport { parseMap } from \"./parseMap\";\r\nimport { Selection } from \"./Selection\";\r\nimport { selectionInfo } from \"./selectionInfo\";\r\n\r\ntype GridRendererProps = RendererProps &\r\n  Omit<ComponentProps<typeof Stage>, \"onSelect\">;\r\n\r\nfunction getPoint({ x, y }: Point) {\r\n  return { x: floor(x / scale) - 1, y: floor(y / scale) - 1 };\r\n}\r\n\r\nexport function GridRenderer({\r\n  onSelect,\r\n  selection,\r\n  ...props\r\n}: GridRendererProps) {\r\n  const [ref, setRef] = useState<HTMLDivElement | null>(null);\r\n  const { width = 0, height = 0 } = props;\r\n  const [{ specimen, map: m }] = useSpecimen();\r\n  const [{ step = 0, code, ...state }] = useUIState();\r\n\r\n  const [active, setActive] = useState<Point | undefined>(undefined);\r\n  const [hover, setHover] = useState<Point | undefined>(undefined);\r\n\r\n  const [[size, bgNodes], bgNodeColor, { start, end }] = useMemo(\r\n    () =>\r\n      [\r\n        parseMap(m),\r\n        once(() => convert(blueGrey[\"500\"])),\r\n        merge(getDefaults(m), { start: state.start, end: state.end }),\r\n      ] as const,\r\n    [m, state.start, state.end]\r\n  );\r\n\r\n  const handleClick = useMemo(() => {\r\n    const info = selectionInfo(m, specimen);\r\n    return ({ global, world }: ViewportEvent, step: number = 0) => {\r\n      if (ref && specimen) {\r\n        const { top, left } = ref.getBoundingClientRect();\r\n        const point = getPoint(world);\r\n        onSelect?.({\r\n          global: { x: left + global.x, y: top + global.y },\r\n          world: point,\r\n          info: info(point),\r\n        });\r\n      }\r\n    };\r\n  }, [ref, onSelect, specimen, m]);\r\n\r\n  const handleMouseEvent = useMemo(() => {\r\n    let timeout = 0;\r\n    return ({ world, event }: ViewportEvent) => {\r\n      switch (event) {\r\n        case \"onMouseOver\":\r\n          setHover(getPoint(world));\r\n          setActive(undefined);\r\n          clearTimeout(timeout);\r\n          break;\r\n        case \"onMouseDown\":\r\n          timeout = delay(() => setActive(getPoint(world)), 100);\r\n          break;\r\n      }\r\n    };\r\n  }, [setHover]);\r\n\r\n  const condition = useMemo(() => {\r\n    if (code && specimen?.eventList) {\r\n      return memoize((n: number) =>\r\n        code && specimen?.eventList\r\n          ? call(code ?? \"\", \"shouldRender\", [\r\n              n,\r\n              specimen.eventList[n],\r\n              specimen.eventList,\r\n            ])\r\n          : true\r\n      );\r\n    } else return constant(true);\r\n  }, [code, specimen?.eventList]);\r\n\r\n  return (\r\n    <Box sx={{ cursor: \"pointer\" }} ref={setRef}>\r\n      <Stage options={{ backgroundColor: 0xffffff }} {...props}>\r\n        <Viewport\r\n          width={width}\r\n          height={height}\r\n          onClick={(e) => handleClick(e, step)}\r\n          onMouseDown={handleMouseEvent}\r\n          onMouseOver={handleMouseEvent}\r\n        >\r\n          <Selection hover={hover} highlight={selection || active} />\r\n          <Nodes nodes={specimen?.eventList} />\r\n          <Nodes nodes={bgNodes} color={bgNodeColor} />\r\n          <LazyNodes\r\n            nodes={specimen?.eventList}\r\n            step={step}\r\n            color={getColor}\r\n            condition={condition}\r\n          />\r\n          <Overlay start={start} end={end} size={size} />\r\n          <Path nodes={specimen?.eventList} step={step} />\r\n          <Guides width={size.x} height={size.y} alpha={0.24} grid={1} />\r\n        </Viewport>\r\n      </Stage>\r\n    </Box>\r\n  );\r\n}\r\n","import { get } from \"lodash\";\r\nimport { DefaultRenderer } from \"./default-renderer/DefaultRenderer\";\r\nimport { getDefaults } from \"./default-renderer/getDefaults\";\r\nimport { getDefaults as getGridDefaults } from \"./grid-renderer/getDefaults\";\r\nimport { GridRenderer } from \"./grid-renderer/GridRenderer\";\r\nimport { RendererEntry, RendererMap } from \"./Renderer\";\r\n\r\nconst renderers: RendererMap = {\r\n  grid: [GridRenderer, getGridDefaults],\r\n};\r\n\r\nexport function getRenderer(key = \"\") {\r\n  return get(renderers, key, [DefaultRenderer, getDefaults] as RendererEntry);\r\n}\r\n","import { createSlice } from \"./createSlice\";\r\n\r\ntype Loading = {\r\n  specimen?: boolean;\r\n  map?: boolean;\r\n};\r\n\r\nexport const [useLoading, LoadingProvider] = createSlice<Loading>(\r\n  {},\r\n  undefined,\r\n  (prev, next) => ({\r\n    ...prev,\r\n    ...next,\r\n  })\r\n);\r\n","import { getClient } from \"client/getClient\";\r\nimport {\r\n  SnackbarLabel as Label,\r\n  useSnackbar,\r\n} from \"components/generic/Snackbar\";\r\nimport { getRenderer } from \"components/specimen-renderer/getRenderer\";\r\nimport { memoize as memo } from \"lodash\";\r\nimport md5 from \"md5\";\r\nimport { ParamsOf } from \"protocol/Message\";\r\nimport { PathfindingTask } from \"protocol/SolveTask\";\r\nimport { useAsyncAbortable as useAsync } from \"react-async-hook\";\r\nimport { useLoading } from \"slices/loading\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\n\r\nconst hash = memo(md5);\r\n\r\nconst getMap = memo(async (map: string) => {\r\n  const client = await getClient();\r\n  return (await client.call(\"features/map\", { id: map }))?.content;\r\n});\r\n\r\nasync function solve(\r\n  map: string,\r\n  params: Omit<ParamsOf<PathfindingTask>, \"mapURI\">\r\n) {\r\n  const client = await getClient();\r\n  if (map) {\r\n    for (const mapURI of [\r\n      `hash:${hash(map)}`,\r\n      `map:${encodeURIComponent(map)}`,\r\n    ] as const) {\r\n      const p = { ...params, mapURI };\r\n      const specimen = await client.call(\"solve/pathfinding\", p);\r\n      if (specimen) return { ...p, specimen, map };\r\n    }\r\n  }\r\n}\r\n\r\nexport function SpecimenService() {\r\n  const notify = useSnackbar();\r\n  const [, setLoading] = useLoading();\r\n  const [, setSpecimen] = useSpecimen();\r\n  const [{ algorithm, map, start, end }, setUIState] = useUIState();\r\n\r\n  useAsync(\r\n    async (signal) => {\r\n      setLoading({ specimen: true });\r\n      if (algorithm && map?.id && map?.type) {\r\n        const m = map?.content ?? (await getMap(map.id));\r\n        if (m) {\r\n          const [, defaults] = getRenderer(map.type);\r\n          try {\r\n            const solution = await solve(m, {\r\n              algorithm,\r\n              end: end ?? defaults(m)?.end,\r\n              start: start ?? defaults(m)?.start,\r\n              mapType: map?.type,\r\n            });\r\n            if (solution && !signal.aborted) {\r\n              setSpecimen(solution);\r\n              setUIState({ step: 0, playback: \"paused\", breakpoints: [] });\r\n              notify(\r\n                <Label\r\n                  primary=\"Solution generated.\"\r\n                  secondary={`${solution.specimen.eventList?.length} steps`}\r\n                />\r\n              );\r\n            }\r\n          } catch (e) {\r\n            notify(`${e}`);\r\n          }\r\n        }\r\n      }\r\n      setLoading({ specimen: false });\r\n    },\r\n    [\r\n      algorithm,\r\n      start,\r\n      end,\r\n      map?.id,\r\n      map?.type,\r\n      map?.content,\r\n      getClient,\r\n      setLoading,\r\n      notify,\r\n    ]\r\n  );\r\n\r\n  return <></>;\r\n}\r\n","import { getClient } from \"client/getClient\";\r\nimport { FeatureDescriptor } from \"protocol/FeatureQuery\";\r\nimport { createSlice } from \"./createSlice\";\r\n\r\ntype Features = {\r\n  algorithms: FeatureDescriptor[];\r\n  maps: (FeatureDescriptor & { type: string })[];\r\n  mapTypes: FeatureDescriptor[];\r\n};\r\n\r\nexport const [useFeatures, FeaturesProvider] = createSlice<Features>(\r\n  { algorithms: [], maps: [], mapTypes: [] },\r\n  async () => {\r\n    const client = await getClient();\r\n    return {\r\n      algorithms: (await client.call(\"features/algorithm\")) ?? [],\r\n      maps: (await client.call(\"features/maps\")) ?? [],\r\n      mapTypes: (await client.call(\"features/mapType\")) ?? [],\r\n    };\r\n  }\r\n);\r\n","import { map, reduce } from \"lodash\";\r\nimport {\r\n  cloneElement,\r\n  createElement,\r\n  FunctionComponent,\r\n  ReactNode,\r\n} from \"react\";\r\n\r\ntype SliceProviderProps = {\r\n  slices?: FunctionComponent[];\r\n  services?: FunctionComponent[];\r\n  children?: ReactNode;\r\n};\r\n\r\nexport function SliceProvider({\r\n  slices,\r\n  children,\r\n  services,\r\n}: SliceProviderProps) {\r\n  return (\r\n    <>\r\n      {reduce(\r\n        map(slices, (s) => createElement(s)),\r\n        (prev, next) => cloneElement(next, {}, prev),\r\n        <>\r\n          {children}\r\n          {map(services, (s, i) => createElement(s, { key: i }))}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { fileDialog as file } from \"file-select-dialog\";\nimport { find, startCase } from \"lodash\";\nimport { Feature, FeatureDescriptor } from \"protocol/FeatureQuery\";\n\nfunction ext(s: string) {\n  return s.split(\".\").pop();\n}\nfunction name(s: string) {\n  return s.split(\".\").shift();\n}\n\nconst customMapId = \"internal/custom\";\n\nexport const custom = (map?: Partial<Feature>) => ({\n  name: map?.id === customMapId ? `Custom - ${map?.name}` : \"Custom\",\n  description: \"Upload Map\",\n  id: customMapId,\n});\n\nexport async function upload(accept: FeatureDescriptor[]) {\n  const f = await file({\n    accept: accept.map(({ id }) => `.${id}`),\n    strict: true,\n  });\n  if (f) {\n    if (find(accept, { id: ext(f.name) })) {\n      return {\n        ...custom(),\n        type: ext(f.name),\n        content: await f.text(),\n        name: startCase(name(f.name)),\n      } as Feature;\n    } else {\n      throw new Error(`The format (${ext(f.name)}) is unsupported.`);\n    }\n  }\n}\n","import { useMediaQuery, useTheme } from \"@material-ui/core\";\r\n\r\nexport function useSmallDisplay() {\r\n  const theme = useTheme();\r\n  return useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n}\r\n","import {\r\n  Menu,\r\n  MenuItem,\r\n  TextField,\r\n  TextFieldProps,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { useSmallDisplay } from \"hooks/useSmallDisplay\";\r\nimport { findIndex, map, max } from \"lodash\";\r\nimport State, { bindMenu, bindTrigger } from \"material-ui-popup-state\";\r\nimport { ReactElement, ReactNode } from \"react\";\r\n\r\ntype Key = string | number;\r\n\r\nexport type SelectProps<T extends Key> = {\r\n  trigger?: (props: ReturnType<typeof bindTrigger>) => ReactElement;\r\n  items?: { value: T; label?: ReactNode }[];\r\n  value?: T;\r\n  onChange?: (value: T) => void;\r\n  placeholder?: string;\r\n};\r\n\r\nconst itemHeight = (sm: boolean) => (sm ? 48 : 36);\r\nconst padding = 8;\r\n\r\nexport function Select<T extends string>({\r\n  trigger,\r\n  items,\r\n  value,\r\n  onChange,\r\n  placeholder = \"Select Option\",\r\n}: SelectProps<T>) {\r\n  const sm = useSmallDisplay();\r\n  const index = max([findIndex(items, { value: value as any }), 0]) ?? 0;\r\n  return (\r\n    <State variant=\"popover\">\r\n      {(state) => (\r\n        <>\r\n          <Tooltip title={placeholder}>\r\n            <span>{trigger?.(bindTrigger(state))}</span>\r\n          </Tooltip>\r\n          <Menu\r\n            {...bindMenu(state)}\r\n            anchorOrigin={{\r\n              horizontal: \"center\",\r\n              vertical: -itemHeight(sm) * index - padding,\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            {map(items, ({ value: v, label }) => (\r\n              <MenuItem\r\n                key={v}\r\n                value={v}\r\n                selected={v === value}\r\n                onClick={() => {\r\n                  state.close();\r\n                  onChange?.(v);\r\n                }}\r\n              >\r\n                {label}\r\n              </MenuItem>\r\n            ))}\r\n          </Menu>\r\n        </>\r\n      )}\r\n    </State>\r\n  );\r\n}\r\n\r\nexport type SelectFieldProps<T extends string> = Pick<\r\n  SelectProps<T>,\r\n  \"items\" | \"onChange\"\r\n> &\r\n  Omit<TextFieldProps, \"onChange\">;\r\n\r\nexport function SelectField<T extends string>(props: SelectFieldProps<T>) {\r\n  const { placeholder, value, items = [], onChange } = props;\r\n  return (\r\n    <TextField\r\n      sx={{ minWidth: 120 }}\r\n      select\r\n      label={placeholder}\r\n      value={value}\r\n      variant=\"filled\"\r\n      {...props}\r\n      onChange={(e) => onChange?.(e.target.value as T)}\r\n    >\r\n      {map(items, (item) => (\r\n        <MenuItem key={item.value} value={item.value}>\r\n          {item.label}\r\n        </MenuItem>\r\n      ))}\r\n    </TextField>\r\n  );\r\n}\r\n","import { Button, Typography as Type } from \"@material-ui/core\";\r\nimport { Select } from \"components/generic/Select\";\r\nimport { Space } from \"components/generic/Space\";\r\nimport { find, map, startCase } from \"lodash\";\r\nimport { FeatureDescriptor } from \"protocol/FeatureQuery\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype Props = {\r\n  label?: string;\r\n  value?: string;\r\n  onChange?: (key: string) => void;\r\n  items?: FeatureDescriptor[];\r\n  icon?: ReactNode;\r\n};\r\n\r\nexport function FeaturePicker({ label, value, onChange, items, icon }: Props) {\r\n  const selected = find(items, { id: value });\r\n  return (\r\n    <Select\r\n      placeholder={startCase(label)}\r\n      trigger={(props) => (\r\n        <Button {...props} disabled={!items?.length} startIcon={icon}>\r\n          {selected?.name ?? label}\r\n        </Button>\r\n      )}\r\n      items={map(items, ({ id, name, description }) => ({\r\n        value: id,\r\n        label: (\r\n          <>\r\n            <Type>{name}</Type>\r\n            <Space />\r\n            <Type variant=\"body2\" color=\"textSecondary\">\r\n              {description}\r\n            </Type>\r\n          </>\r\n        ),\r\n      }))}\r\n      value={selected?.id}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n}\r\n","import { useSnackbar } from \"components/generic/Snackbar\";\r\nimport { find } from \"lodash\";\r\nimport { useFeatures } from \"slices/features\";\r\nimport { useInfo } from \"slices/info\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { custom, upload } from \"./upload\";\r\nimport { FeaturePicker } from \"./FeaturePicker\";\r\nimport { Code as CodeIcon, MapTwoTone as MapIcon } from \"@material-ui/icons\";\r\nimport { Space } from \"components/generic/Space\";\r\n\r\nexport const mapDefaults = { start: undefined, end: undefined };\r\n\r\nexport function InputControls() {\r\n  const notify = useSnackbar();\r\n  const [info] = useInfo();\r\n  const [{ algorithms, maps, mapTypes: types }] = useFeatures();\r\n  const [{ algorithm, map }, setUIState] = useUIState();\r\n\r\n  return (\r\n    <>\r\n      <FeaturePicker\r\n        icon={<MapIcon />}\r\n        label=\"map\"\r\n        value={map?.id}\r\n        items={[\r\n          custom(map),\r\n          ...maps.map((c) => ({ ...c, description: info?.name })),\r\n        ]}\r\n        onChange={async (v) => {\r\n          switch (v) {\r\n            case custom().id:\r\n              try {\r\n                const f = await upload(types);\r\n                if (f) setUIState({ ...mapDefaults, map: f });\r\n              } catch (e) {\r\n                notify(`${e}`);\r\n              }\r\n              break;\r\n            default:\r\n              setUIState({ ...mapDefaults, map: find(maps, { id: v }) });\r\n              break;\r\n          }\r\n        }}\r\n      />\r\n      <Space />\r\n      <FeaturePicker\r\n        icon={<CodeIcon />}\r\n        label=\"algorithm\"\r\n        value={algorithm}\r\n        items={algorithms}\r\n        onChange={(v) => setUIState({ algorithm: v })}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { IconButton, IconButtonProps, Tooltip } from \"@material-ui/core\";\r\nimport { startCase } from \"lodash\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype IconButtonWithTooltipProps = {\r\n  label: string;\r\n  icon: ReactNode;\r\n} & IconButtonProps;\r\n\r\nexport function IconButtonWithTooltip({\r\n  label,\r\n  icon,\r\n  ...rest\r\n}: IconButtonWithTooltipProps) {\r\n  return (\r\n    <Tooltip title={startCase(label)} key={label}>\r\n      <span>\r\n        <IconButton {...rest}>{icon}</IconButton>\r\n      </span>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import {\r\n  PauseOutlined as PauseIcon,\r\n  PlayArrowOutlined as PlayIcon,\r\n  SkipNextOutlined as ForwardIcon,\r\n  SkipPreviousOutlined as PreviousIcon,\r\n  StopOutlined as StopIcon,\r\n} from \"@material-ui/icons\";\r\nimport { IconButtonWithTooltip as Button } from \"components/generic/IconButtonWithTooltip\";\r\nimport { usePlaybackState } from \"hooks/usePlaybackState\";\r\n\r\nexport function PlaybackControls() {\r\n  const {\r\n    playing,\r\n    canPause,\r\n    canPlay,\r\n    canStepBackward,\r\n    canStepForward,\r\n    canStop,\r\n    pause,\r\n    play,\r\n    stepBackward,\r\n    stepForward,\r\n    stop,\r\n  } = usePlaybackState();\r\n  return (\r\n    <>\r\n      <Button\r\n        label=\"step-backward\"\r\n        icon={<PreviousIcon />}\r\n        onClick={stepBackward}\r\n        disabled={!canStepBackward}\r\n      />\r\n      <Button\r\n        {...(playing\r\n          ? {\r\n              label: \"pause\",\r\n              icon: <PauseIcon />,\r\n              onClick: () => pause(),\r\n              disabled: !canPause,\r\n            }\r\n          : {\r\n              label: \"play\",\r\n              icon: <PlayIcon />,\r\n              onClick: () => play(),\r\n              disabled: !canPlay,\r\n              color: \"primary\",\r\n            })}\r\n      />\r\n      <Button\r\n        label=\"step-forward\"\r\n        icon={<ForwardIcon />}\r\n        onClick={stepForward}\r\n        disabled={!canStepForward}\r\n      />\r\n      <Button\r\n        label=\"stop\"\r\n        icon={<StopIcon />}\r\n        onClick={stop}\r\n        disabled={!canStop}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  FormControlLabel,\r\n  Switch as MuiSwitch,\r\n  SwitchProps as MuiSwitchProps,\r\n} from \"@material-ui/core\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype SwitchProps = { label?: ReactNode } & MuiSwitchProps;\r\n\r\nexport function Switch({ label = <></>, ...props }: SwitchProps) {\r\n  return (\r\n    <FormControlLabel\r\n      control={<MuiSwitch defaultChecked {...props} />}\r\n      {...{ label }}\r\n    />\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Collapse,\r\n  IconButton,\r\n  InputBase,\r\n  List,\r\n  ListSubheader,\r\n  Switch,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Add,\r\n  DeleteOutlined as DeleteIcon,\r\n  EditOutlined as EditIcon,\r\n  LabelOutlined as LabelIcon,\r\n} from \"@material-ui/icons\";\r\nimport { filter, map, sortBy, uniqBy } from \"lodash\";\r\nimport { nanoid as id } from \"nanoid\";\r\nimport {\r\n  cloneElement,\r\n  ComponentProps,\r\n  CSSProperties,\r\n  forwardRef,\r\n  ReactElement,\r\n  ReactNode,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\nexport const DefaultListEditorInput = forwardRef(function StyledInputBase(\r\n  props: ComponentProps<typeof InputBase>,\r\n  ref\r\n) {\r\n  return (\r\n    <InputBase\r\n      fullWidth\r\n      {...props}\r\n      placeholder=\"Untitled item\"\r\n      inputRef={ref}\r\n    />\r\n  );\r\n});\r\n\r\ntype Key = string | number;\r\n\r\ntype Item<T = any> = {\r\n  element?: ReactElement;\r\n  enabled?: boolean;\r\n  value?: T;\r\n  id: Key;\r\n};\r\n\r\ntype Props<T = any> = {\r\n  addItemLabel?: ReactNode;\r\n  label?: ReactNode;\r\n  text?: ReactNode;\r\n  items?: Item<T>[];\r\n  useSwitch?: boolean;\r\n  useDelete?: boolean;\r\n  onChangeItem?: (key: Key, value: T, enabled: boolean) => void;\r\n  onAddItem?: () => void;\r\n  onDeleteItem?: (key: Key) => void;\r\n  icon?: ReactElement | null;\r\n  useEdit?: boolean;\r\n  variant?: \"outlined\" | \"default\";\r\n  extrasPlacement?: \"flex-start\" | \"center\" | \"flex-end\";\r\n  placeholderText?: ReactNode;\r\n  cardStyle?: CSSProperties;\r\n  autoFocus?: boolean;\r\n  getCategory?: (value?: T) => string;\r\n  getOrder?: (value?: T) => string | number;\r\n};\r\n\r\ntype ListEditorFieldProps = {\r\n  isPlaceholder?: boolean;\r\n  i?: number;\r\n};\r\n\r\nfunction useInitialRender() {\r\n  const ref = useRef(false);\r\n  const current = ref.current;\r\n  ref.current = true;\r\n  return !current;\r\n}\r\n\r\nexport function ListEditorField({\r\n  icon = <LabelIcon />,\r\n  useSwitch,\r\n  useDelete,\r\n  useEdit: useEditButton = true,\r\n  onChangeItem = () => {},\r\n  onDeleteItem = () => {},\r\n  enabled = false,\r\n  element = <DefaultListEditorInput />,\r\n  value,\r\n  id,\r\n  i = 0,\r\n  variant = \"default\",\r\n  extrasPlacement = \"center\",\r\n  autoFocus,\r\n  cardStyle: style,\r\n}: Props & ListEditorFieldProps & Item) {\r\n  const [field, setField] = useState<HTMLElement | null>(null);\r\n  const theme = useTheme();\r\n  const content = (\r\n    <Box display=\"flex\" alignItems={extrasPlacement}>\r\n      {icon !== null &&\r\n        cloneElement(icon, {\r\n          style: {\r\n            marginRight: theme.spacing(1),\r\n            marginTop: theme.spacing(0.5),\r\n            marginBottom: theme.spacing(0.5),\r\n          },\r\n          color: \"action\",\r\n        })}\r\n      <Box\r\n        flexGrow={1}\r\n        style={{\r\n          marginLeft: -theme.spacing(icon === null ? 2 : 0),\r\n        }}\r\n      >\r\n        {cloneElement(element, {\r\n          onDelete: () => onDeleteItem(id ?? i),\r\n          autoFocus,\r\n          value,\r\n          key: id ?? i,\r\n          onValueChange: (e: any) => onChangeItem(id ?? i, e, enabled),\r\n          onChange: (e: any) => onChangeItem(id ?? i, e.target.value, enabled),\r\n          ref: (e: HTMLElement | null) => setField(e),\r\n        })}\r\n      </Box>\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        {useSwitch && (\r\n          <Switch\r\n            color=\"primary\"\r\n            edge=\"end\"\r\n            onChange={(_, v) => onChangeItem(id ?? i, value, v)}\r\n            checked={enabled}\r\n          />\r\n        )}\r\n        {useEditButton && (\r\n          <IconButton\r\n            edge=\"end\"\r\n            onClick={() => {\r\n              if (field?.focus) {\r\n                field.focus();\r\n              }\r\n            }}\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n        )}\r\n        {useDelete && (\r\n          <IconButton onClick={() => onDeleteItem(id ?? i)}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n  return (\r\n    <Box\r\n      style={{\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n      }}\r\n    >\r\n      {variant === \"outlined\" ? (\r\n        <Card\r\n          variant=\"outlined\"\r\n          style={{\r\n            borderColor: \"transparent\",\r\n            paddingRight: theme.spacing(2),\r\n            transition: theme.transitions.create([\r\n              \"box-shadow\",\r\n              \"border-color\",\r\n            ]),\r\n            ...style,\r\n          }}\r\n        >\r\n          {content}\r\n        </Card>\r\n      ) : (\r\n        content\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function Editor<T>(props: Props<T>) {\r\n  const {\r\n    addItemLabel = \"Add Item\",\r\n    label,\r\n    text,\r\n    onAddItem = () => {},\r\n    onDeleteItem = () => {},\r\n    items = [],\r\n    placeholderText,\r\n    autoFocus,\r\n    getCategory,\r\n    getOrder,\r\n  } = props;\r\n  const isInitialRender = useInitialRender();\r\n  const theme = useTheme();\r\n  const [intermediateItems, setIntermediateItems] = useState(items);\r\n  const [newIndex, setNewIndex] = useState(-1);\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setIntermediateItems(items);\r\n    }, theme.transitions.duration.standard);\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [items, setIntermediateItems, theme.transitions.duration.standard]);\r\n  const children = uniqBy([...intermediateItems, ...items], (c) => c.id)\r\n    .map((c) => items.find((c2) => c.id === c2.id) ?? c)\r\n    .map((x, i) => {\r\n      const { enabled, element, value, id } = x ?? {};\r\n      return {\r\n        value,\r\n        render: (p?: ComponentProps<typeof ListEditorField>) => (\r\n          <Collapse\r\n            in={!!items.find((p) => p.id === x.id)}\r\n            unmountOnExit\r\n            appear={!isInitialRender}\r\n            mountOnEnter\r\n          >\r\n            <ListEditorField\r\n              {...props}\r\n              onDeleteItem={(e) => {\r\n                onDeleteItem(e);\r\n                setNewIndex(-1);\r\n              }}\r\n              enabled={enabled}\r\n              element={element}\r\n              value={value}\r\n              id={id}\r\n              i={i}\r\n              autoFocus={autoFocus || i === newIndex}\r\n              {...p}\r\n            />\r\n          </Collapse>\r\n        ),\r\n        key: id,\r\n        in: !!items.find((p) => p.id === x.id),\r\n      };\r\n    });\r\n  const sorted = sortBy(\r\n    children,\r\n    (c) => getCategory?.(c.value),\r\n    (c) => getOrder?.(c.value)\r\n  ).map((c) => ({\r\n    ...c,\r\n    render: (p?: ComponentProps<typeof ListEditorField>) => (\r\n      <Box key={c.key}>{c.render(p)}</Box>\r\n    ),\r\n  }));\r\n  return (\r\n    <List\r\n      subheader={\r\n        label || text ? (\r\n          <>\r\n            <ListSubheader disableSticky>\r\n              {label && (\r\n                <Typography variant=\"body1\" gutterBottom color=\"textPrimary\">\r\n                  {label}\r\n                </Typography>\r\n              )}\r\n              {text && (\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                  style={{ marginBottom: theme.spacing(3) }}\r\n                >\r\n                  {text}\r\n                </Typography>\r\n              )}\r\n            </ListSubheader>\r\n          </>\r\n        ) : undefined\r\n      }\r\n    >\r\n      <Box mt={getCategory ? -1 : 0}>\r\n        {(() => {\r\n          const out: ReactNode[] = [];\r\n          sorted.forEach((c, i) => {\r\n            if (getCategory && isNewCategory(sorted, i, c)) {\r\n              out.push(\r\n                <Collapse\r\n                  in={items.some(\r\n                    (c2) => getCategory(c2.value) === getCategory(c.value)\r\n                  )}\r\n                  appear\r\n                  key={getCategory(c.value)}\r\n                >\r\n                  <Box pl={2} pb={2} pt={1}>\r\n                    <Typography variant=\"overline\" color=\"textSecondary\">\r\n                      {getCategory(c.value)}\r\n                    </Typography>\r\n                  </Box>\r\n                </Collapse>\r\n              );\r\n            }\r\n            out.push(c.render());\r\n          });\r\n          return out;\r\n        })()}\r\n      </Box>\r\n      <Collapse in={!items?.length}>\r\n        <Box ml={2} mb={1} pt={getCategory ? 1 : 0}>\r\n          <Typography color=\"textSecondary\">\r\n            {placeholderText ?? \"No items\"}\r\n          </Typography>\r\n        </Box>\r\n      </Collapse>\r\n      <Box p={2} mb={-3}>\r\n        <Button\r\n          disableElevation\r\n          variant=\"contained\"\r\n          startIcon={<Add />}\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            onAddItem();\r\n            setNewIndex(items.length);\r\n          }}\r\n        >\r\n          {addItemLabel}\r\n        </Button>\r\n      </Box>\r\n    </List>\r\n  );\r\n\r\n  function isNewCategory(\r\n    arr: {\r\n      value: T | undefined;\r\n      render: (\r\n        p?: (Props<any> & ListEditorFieldProps & Item<any>) | undefined\r\n      ) => JSX.Element;\r\n      key: Key;\r\n    }[],\r\n    i: number,\r\n    c: {\r\n      value: T | undefined;\r\n      render: (\r\n        p?: (Props<any> & ListEditorFieldProps & Item<any>) | undefined\r\n      ) => JSX.Element;\r\n      key: Key;\r\n    }\r\n  ) {\r\n    return !!(\r\n      getCategory &&\r\n      (arr[i - 1] === undefined ||\r\n        getCategory(arr[i - 1].value) !== getCategory(c.value))\r\n    );\r\n  }\r\n}\r\n\r\nexport function ListEditor<T extends { key: string }>({\r\n  onChange,\r\n  value,\r\n  editor,\r\n  create,\r\n  ...props\r\n}: Omit<Props<T>, \"items\"> & {\r\n  items?: T[];\r\n  onChange?: (value: T[]) => void;\r\n  value?: T[];\r\n  editor?: (item: T) => ReactElement;\r\n  create?: () => Omit<T, \"key\">;\r\n}) {\r\n  const [state, setState] = useState(value ?? []);\r\n  function handleChange(next: T[]) {\r\n    setState(next);\r\n    onChange?.(next);\r\n  }\r\n  return (\r\n    <Box sx={{ ml: -2 }}>\r\n      <Editor\r\n        {...props}\r\n        items={state.map((c) => ({\r\n          id: c.key,\r\n          value: c,\r\n          element: editor?.(c),\r\n        }))}\r\n        useDelete\r\n        useEdit={false}\r\n        onAddItem={() =>\r\n          handleChange([...state, { key: id(), ...create?.() } as T])\r\n        }\r\n        onDeleteItem={(k) => {\r\n          return handleChange(filter(state, (b) => b.key !== k));\r\n        }}\r\n        onChangeItem={(k, v) =>\r\n          handleChange(map(state, (b) => (b.key === k ? v : b)))\r\n        }\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { Comparator } from \"slices/UIState\";\r\n\r\nexport const comparators: Comparator[] = [\r\n  {\r\n    key: \"equal\",\r\n    apply: (a, b) => a === b,\r\n  },\r\n  {\r\n    key: \"less-than\",\r\n    apply: (a, b) => a < b,\r\n  },\r\n  {\r\n    key: \"greater-than\",\r\n    apply: (a, b) => a > b,\r\n  },\r\n];\r\n","export const intrinsicProperties = [\"f\", \"g\"];\r\n","import { TraceEventType } from \"protocol/Trace\";\r\n\r\nexport const eventTypes: (TraceEventType | \"any\")[] = [\r\n  \"any\",\r\n  \"source\",\r\n  \"destination\",\r\n  \"expanding\",\r\n  \"generating\",\r\n  \"closing\",\r\n];\r\n","import { Divider, TextField, Typography as Type } from \"@material-ui/core\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { SelectField as Select } from \"components/generic/Select\";\r\nimport { Space } from \"components/generic/Space\";\r\nimport { Switch } from \"components/generic/Switch\";\r\nimport { find, last, map, startCase } from \"lodash\";\r\nimport { Breakpoint } from \"slices/UIState\";\r\nimport { comparators } from \"./comparators\";\r\nimport { eventTypes } from \"./eventTypes\";\r\n\r\ntype BreakpointEditorProps = {\r\n  value: Breakpoint;\r\n  onValueChange?: (v: Breakpoint) => void;\r\n  properties?: string[];\r\n};\r\n\r\nexport function BreakpointEditor({\r\n  value,\r\n  onValueChange: onChange,\r\n  properties,\r\n}: BreakpointEditorProps) {\r\n  function handleChange(next: Partial<Breakpoint>) {\r\n    onChange?.({ ...value, ...next });\r\n  }\r\n  return (\r\n    <Flex>\r\n      <Select\r\n        placeholder=\"Event\"\r\n        sx={{ minWidth: 160 }}\r\n        items={map(eventTypes, (c) => ({ value: c, label: startCase(c) }))}\r\n        onChange={(v) => handleChange({ type: v === \"any\" ? undefined : v })}\r\n        value={value.type ?? \"any\"}\r\n      />\r\n      <Divider flexItem orientation=\"vertical\" sx={{ mx: 2 }} />\r\n      <Select\r\n        placeholder=\"Property\"\r\n        sx={{\r\n          minWidth: 140,\r\n          textOverflow: \"ellipsis\",\r\n          whiteSpace: \"nowrap\",\r\n        }}\r\n        items={map(properties, (c) => ({\r\n          value: c,\r\n          label: (\r\n            <>\r\n              {last(c.split(\".\"))}\r\n              <Space />\r\n              <Type\r\n                color=\"textSecondary\"\r\n                variant=\"body2\"\r\n                component=\"span\"\r\n              >{`event.${c}`}</Type>\r\n            </>\r\n          ),\r\n        }))}\r\n        onChange={(v) => handleChange({ property: v })}\r\n        value={value.property}\r\n      />\r\n      <Space />\r\n      <Select\r\n        placeholder=\"Condition\"\r\n        items={comparators.map((c) => ({\r\n          value: c.key,\r\n          label: startCase(c.key),\r\n        }))}\r\n        value={value?.condition?.key ?? comparators?.[0]?.key}\r\n        onChange={(v) =>\r\n          handleChange({ condition: find(comparators, { key: v }) })\r\n        }\r\n      />\r\n      <Space />\r\n      <TextField\r\n        label=\"Reference\"\r\n        fullWidth\r\n        value={`${value.reference ?? 0}`}\r\n        variant=\"filled\"\r\n        inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\r\n        onChange={(v) => handleChange({ reference: +v.target.value })}\r\n        type=\"number\"\r\n      />\r\n      <Space sx={{ px: 2 }} />\r\n      <Switch\r\n        checked={!!value.active}\r\n        onChange={(_, v) => handleChange({ active: v })}\r\n      />\r\n    </Flex>\r\n  );\r\n}\r\n","export const propertyPaths = [\"variables\"];\r\n","import { ListEditor } from \"components/generic/ListEditor\";\r\nimport { debounce, flatMap as flat, get, keys, map, uniq } from \"lodash\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { Breakpoint, useUIState } from \"slices/UIState\";\r\nimport { comparators } from \"./comparators\";\r\nimport { intrinsicProperties } from \"./intrinsicProperties\";\r\nimport { BreakpointEditor } from \"./BreakpointEditor\";\r\nimport { Box } from \"@material-ui/system\";\r\nimport { propertyPaths as paths } from \"./propertyPaths\";\r\n\r\nexport function BreakpointListEditor() {\r\n  const [{ breakpoints = [] }, setUIState] = useUIState();\r\n  const [{ specimen }] = useSpecimen();\r\n\r\n  const properties = uniq([\r\n    ...intrinsicProperties,\r\n    ...flat(paths, (p) =>\r\n      flat(specimen?.nodeStructure, (v) =>\r\n        map(keys(get(v, p)), (k) => `${p}.${k}`)\r\n      )\r\n    ),\r\n  ]);\r\n\r\n  return (\r\n    <Box sx={{ overflow: \"auto hidden\", width: \"100%\" }}>\r\n      <Box sx={{ minWidth: 720, mb: 2 }}>\r\n        <ListEditor<Breakpoint>\r\n          icon={null}\r\n          value={breakpoints}\r\n          useDelete\r\n          useEdit={false}\r\n          editor={(v) => <BreakpointEditor value={v} properties={properties} />}\r\n          create={() => ({\r\n            active: true,\r\n            property: properties?.[0],\r\n            condition: comparators?.[0],\r\n            type: undefined,\r\n            reference: 0,\r\n          })}\r\n          onChange={debounce((v) => setUIState({ breakpoints: v }), 1000)}\r\n          addItemLabel=\"Breakpoint\"\r\n          placeholderText=\"Click the button below to add a breakpoint.\"\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { debounce } from \"lodash\";\r\nimport AutoSize from \"react-virtualized-auto-sizer\";\r\nimport { useUIState } from \"slices/UIState\";\r\n\r\nconst DELAY = 2500;\r\n\r\nexport function ScriptEditor() {\r\n  const [{ code }, setUIState] = useUIState();\r\n  return (\r\n    <Flex height=\"70vh\" overflow=\"hidden\">\r\n      <AutoSize>\r\n        {({ width, height }) => (\r\n          <Editor\r\n            width={width}\r\n            loading={<CircularProgress variant=\"indeterminate\" />}\r\n            height={height}\r\n            language=\"javascript\"\r\n            defaultValue={code}\r\n            onChange={debounce((v) => setUIState({ code: v }), DELAY)}\r\n            options={{\r\n              minimap: {\r\n                enabled: false,\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n      </AutoSize>\r\n    </Flex>\r\n  );\r\n}\r\n","import { Box, Divider, Tab, Typography as Type } from \"@material-ui/core\";\r\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { Space } from \"components/generic/Space\";\r\nimport { Switch } from \"components/generic/Switch\";\r\nimport { ReactNode, useState } from \"react\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { BreakpointListEditor } from \"./breakpoint-editor/BreakpointListEditor\";\r\nimport { ScriptEditor } from \"./script-editor/ScriptEditor\";\r\n\r\nexport function DebugOptionsEditor() {\r\n  const [{ monotonicF, monotonicG }, setUIState] = useUIState();\r\n  const [tab, setTab] = useState(\"standard\");\r\n  function renderHeading(label: ReactNode) {\r\n    return (\r\n      <Type variant=\"overline\" color=\"textSecondary\">\r\n        {label}\r\n      </Type>\r\n    );\r\n  }\r\n  return (\r\n    <TabContext value={tab}>\r\n      <TabList onChange={(_, v) => setTab(v)}>\r\n        <Tab label=\"Standard\" value=\"standard\" />\r\n        <Tab label=\"Advanced\" value=\"advanced\" />\r\n      </TabList>\r\n      <Divider />\r\n      <TabPanel value=\"standard\">\r\n        <Box>\r\n          {renderHeading(\"General\")}\r\n          <Flex>\r\n            <Switch\r\n              label=\"Monotonic f value\"\r\n              checked={!!monotonicF}\r\n              onChange={(_, v) => setUIState({ monotonicF: v })}\r\n            />\r\n            <Space />\r\n            <Switch\r\n              label=\"Monotonic g value\"\r\n              checked={!!monotonicG}\r\n              onChange={(_, v) => setUIState({ monotonicG: v })}\r\n            />\r\n          </Flex>\r\n        </Box>\r\n        <Space />\r\n        <Box>\r\n          {renderHeading(\"Breakpoints\")}\r\n          <BreakpointListEditor />\r\n        </Box>\r\n      </TabPanel>\r\n      <TabPanel value=\"advanced\" sx={{ p: 0 }}>\r\n        <ScriptEditor />\r\n      </TabPanel>\r\n    </TabContext>\r\n  );\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport function useScrollState(threshold: number = 128) {\r\n  const [showControls, setShowControls] = useState(true);\r\n  const [isAbsoluteTop, setIsAbsoluteTop] = useState(true);\r\n  const [isTop, setIsTop] = useState(true);\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n  const lastTop = useRef(0);\r\n  useEffect(() => {\r\n    if (target) {\r\n      const listener = () => {\r\n        {\r\n          const newIsTop = target.scrollTop <= threshold;\r\n          if (newIsTop !== isTop) {\r\n            setIsTop(newIsTop);\r\n          }\r\n        }\r\n        {\r\n          const newIsTop = target.scrollTop <= 1;\r\n          if (newIsTop !== isAbsoluteTop) {\r\n            setIsAbsoluteTop(newIsTop);\r\n          }\r\n        }\r\n        if (lastTop.current - target.scrollTop) {\r\n          if (\r\n            Math.abs(lastTop.current - target.scrollTop) > 2 &&\r\n            lastTop.current >= 0\r\n          ) {\r\n            setShowControls(lastTop.current > target.scrollTop);\r\n          }\r\n          lastTop.current = target.scrollTop;\r\n        }\r\n      };\r\n      target.addEventListener(\"scroll\", listener, { passive: true });\r\n      return () => {\r\n        target.removeEventListener(\"scroll\", listener);\r\n      };\r\n    }\r\n  }, [target, isTop, isAbsoluteTop, lastTop, threshold]);\r\n  return [\r\n    showControls || isTop,\r\n    isTop,\r\n    isAbsoluteTop,\r\n    target,\r\n    setTarget,\r\n  ] as const;\r\n}\r\n","import {\r\n  ComponentProps,\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\n\r\ntype ScrollPanelProps = {\r\n  onTarget?: (e: HTMLDivElement | null) => void;\r\n} & ComponentProps<\"div\">;\r\n\r\nexport function ScrollPanel({\r\n  onTarget,\r\n  onScroll,\r\n  ...props\r\n}: ScrollPanelProps) {\r\n  const [target, setTarget] = useState<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (target && onScroll) {\r\n      target.addEventListener(\"scroll\", onScroll as any, { passive: true });\r\n      return () => target.removeEventListener(\"scroll\", onScroll as any);\r\n    }\r\n  }, [target, onScroll]);\r\n\r\n  return (\r\n    <div\r\n      {...props}\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        overflow: \"hidden scroll\",\r\n        ...props.style,\r\n      }}\r\n      ref={(e) => {\r\n        setTarget(e);\r\n        onTarget?.(e);\r\n      }}\r\n    >\r\n      <PanelContext.Provider value={target}>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          {props.children}\r\n        </div>\r\n      </PanelContext.Provider>\r\n    </div>\r\n  );\r\n}\r\nconst PanelContext = createContext<HTMLDivElement | null>(null);\r\n\r\nexport function usePanel() {\r\n  return useContext(PanelContext);\r\n}\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Dialog,\r\n  Fade,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { ArrowBack } from \"@material-ui/icons\";\r\nimport { ResizeSensor } from \"css-element-queries\";\r\nimport PopupState from \"material-ui-popup-state\";\r\nimport {\r\n  cloneElement,\r\n  ComponentProps,\r\n  CSSProperties,\r\n  ReactElement,\r\n  ReactNode,\r\n  SyntheticEvent,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { useScrollState } from \"hooks/useScrollState\";\r\nimport { useSmallDisplay } from \"hooks/useSmallDisplay\";\r\nimport { ScrollPanel, usePanel } from \"./ScrollPanel\";\r\n\r\nexport function AppBarTitle({ children }: { children?: ReactNode }) {\r\n  return <Typography variant=\"h6\">{children}</Typography>;\r\n}\r\n\r\nexport type Props = {\r\n  children?: ReactNode;\r\n  actions?: ReactNode;\r\n  width?: number;\r\n  height?: string | number;\r\n  onTarget?: (target: HTMLDivElement | null) => void;\r\n  variant?: \"default\" | \"submodal\";\r\n  scrollable?: boolean;\r\n};\r\n\r\ntype ModalAppBarProps = {\r\n  onClose?: () => void;\r\n  style?: CSSProperties;\r\n  elevatedStyle?: CSSProperties;\r\n  transitionProperties?: string[];\r\n  children?: ReactNode;\r\n  elevatedChildren?: ReactNode;\r\n  simple?: boolean;\r\n  position?: \"fixed\" | \"absolute\" | \"sticky\" | \"static\";\r\n};\r\n\r\nexport function ModalAppBar({\r\n  onClose = () => {},\r\n  style,\r\n  elevatedStyle,\r\n  children,\r\n  transitionProperties = [\"box-shadow\", \"background\", \"border-bottom\"],\r\n  elevatedChildren,\r\n  simple,\r\n  position = \"sticky\",\r\n}: ModalAppBarProps) {\r\n  const panel = usePanel();\r\n  const theme = useTheme();\r\n  const [, , isAbsoluteTop, , setTarget] = useScrollState();\r\n  useEffect(() => {\r\n    setTarget(panel);\r\n  }, [panel, setTarget]);\r\n\r\n  const styles = isAbsoluteTop\r\n    ? {\r\n        background: theme.palette.background.paper,\r\n        ...(!simple && {\r\n          boxShadow: theme.shadows[0],\r\n        }),\r\n        ...style,\r\n      }\r\n    : {\r\n        background: theme.palette.background.paper,\r\n        ...(!simple && {\r\n          boxShadow: theme.shadows[4],\r\n        }),\r\n        ...elevatedStyle,\r\n      };\r\n\r\n  return (\r\n    <AppBar\r\n      elevation={0}\r\n      position={position}\r\n      style={{\r\n        color: theme.palette.text.primary,\r\n        transition: theme.transitions.create(transitionProperties),\r\n        ...styles,\r\n      }}\r\n    >\r\n      <Toolbar>\r\n        <IconButton\r\n          style={{\r\n            marginRight: theme.spacing(1),\r\n          }}\r\n          aria-label=\"open drawer\"\r\n          edge=\"start\"\r\n          onClick={() => onClose()}\r\n        >\r\n          <ArrowBack />\r\n        </IconButton>\r\n\r\n        {children && (\r\n          <div\r\n            style={{\r\n              gridColumn: 1,\r\n              gridRow: 1,\r\n              flex: 1,\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <Fade\r\n              in={!!(!elevatedChildren || isAbsoluteTop)}\r\n              mountOnEnter\r\n              unmountOnExit\r\n            >\r\n              <Box style={{ width: \"100%\" }}>{children}</Box>\r\n            </Fade>\r\n          </div>\r\n        )}\r\n        {elevatedChildren && (\r\n          <div\r\n            style={{\r\n              gridColumn: 1,\r\n              gridRow: 1,\r\n              flex: 1,\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            <Fade\r\n              in={!!(elevatedChildren && !isAbsoluteTop)}\r\n              mountOnEnter\r\n              unmountOnExit\r\n            >\r\n              <Box style={{ width: \"100%\" }}>{elevatedChildren}</Box>\r\n            </Fade>\r\n          </div>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default function Modal({\r\n  children,\r\n  actions,\r\n  width = 480,\r\n  height,\r\n  onTarget,\r\n  variant = \"default\",\r\n  scrollable = true,\r\n  ...props\r\n}: Props & ComponentProps<typeof Dialog>) {\r\n  const [content, setContent] = useState<ReactNode | undefined>(undefined);\r\n  useEffect(() => {\r\n    if (children) setContent(children);\r\n  }, [children]);\r\n  const theme = useTheme();\r\n  const sm = useSmallDisplay();\r\n\r\n  const [target, setTarget] = useState<HTMLElement | null>(null);\r\n  const [contentRef, setContentRef] = useState<HTMLElement | null>(null);\r\n  const [hasOverflowingChildren, setHasOverflowingChildren] = useState(false);\r\n  const [childHeight, setChildHeight] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (target && contentRef && !sm && !height) {\r\n      const callback = () => {\r\n        const doesOverflow = window.innerHeight - 64 < contentRef.offsetHeight;\r\n        setHasOverflowingChildren(doesOverflow);\r\n        setChildHeight(\r\n          contentRef.offsetHeight <= 1 ? 0 : Math.ceil(contentRef.offsetHeight)\r\n        );\r\n      };\r\n      window.addEventListener(\"resize\", callback);\r\n      const ob = new ResizeSensor(contentRef, callback);\r\n      callback();\r\n      return () => {\r\n        window.removeEventListener(\"resize\", callback);\r\n        ob.detach();\r\n      };\r\n    }\r\n  }, [target, contentRef, sm, height]);\r\n\r\n  const useVariant = variant === \"submodal\" && sm;\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen={sm}\r\n      {...props}\r\n      style={{\r\n        ...(useVariant && {\r\n          paddingTop: theme.spacing(8),\r\n        }),\r\n        ...props.style,\r\n      }}\r\n      PaperProps={{\r\n        ref: (e: HTMLElement | null) => setTarget(e),\r\n        style: {\r\n          ...(useVariant && {\r\n            borderRadius: `${theme.shape.borderRadius}px ${theme.shape.borderRadius}px 0 0`,\r\n          }),\r\n          background: theme.palette.background.default,\r\n          overflow: \"hidden\",\r\n          height:\r\n            height && !sm\r\n              ? height\r\n              : hasOverflowingChildren || sm\r\n              ? \"100%\"\r\n              : childHeight || \"fit-content\",\r\n          position: \"relative\",\r\n          maxWidth: \"none\",\r\n          ...props.PaperProps?.style,\r\n        },\r\n        ...props.PaperProps,\r\n      }}\r\n    >\r\n      <ScrollPanel\r\n        style={{\r\n          height: \"100%\",\r\n          width: sm ? undefined : width,\r\n          maxWidth: \"100%\",\r\n          overflow: scrollable ? undefined : \"hidden\",\r\n        }}\r\n        onTarget={onTarget}\r\n      >\r\n        <div\r\n          ref={(e) => setContentRef(e)}\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n        >\r\n          {content}\r\n        </div>\r\n      </ScrollPanel>\r\n      {actions}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport function ManagedModal({\r\n  options: ModalProps,\r\n  appBar: ModalAppBarProps,\r\n  trigger = () => <></>,\r\n  children,\r\n}: {\r\n  options?: Props;\r\n  trigger?: (onClick: (e: SyntheticEvent<any, Event>) => void) => ReactElement;\r\n  appBar?: ModalAppBarProps;\r\n  children?: ReactNode;\r\n}) {\r\n  return (\r\n    <PopupState variant=\"popover\">\r\n      {({ open, close, isOpen }) => {\r\n        return (\r\n          <>\r\n            {cloneElement(trigger(open))}\r\n            <Modal open={isOpen} onClose={close} {...ModalProps}>\r\n              <ModalAppBar onClose={close} {...ModalAppBarProps} />\r\n              {children ?? ModalProps?.children}\r\n            </Modal>\r\n          </>\r\n        );\r\n      }}\r\n    </PopupState>\r\n  );\r\n}\r\n","import { Button } from \"@material-ui/core\";\r\nimport { BugReportTwoTone as BugIcon } from \"@material-ui/icons\";\r\nimport { DebugOptionsEditor } from \"components/DebugOptionsEditor\";\r\nimport {\r\n  AppBarTitle as Title,\r\n  ManagedModal as Dialog,\r\n} from \"components/generic/Modal\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\n\r\nexport function UtilityControls() {\r\n  const [{ specimen }] = useSpecimen();\r\n  return (\r\n    <>\r\n      <Dialog\r\n        trigger={(onClick) => (\r\n          <Button {...{ onClick }} disabled={!specimen} startIcon={<BugIcon />}>\r\n            Debug\r\n          </Button>\r\n        )}\r\n        options={{ width: 960, scrollable: false }}\r\n        appBar={{ children: <Title>Debug Options</Title> }}\r\n      >\r\n        <DebugOptionsEditor />\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import { AppBar, Box, Divider, Toolbar } from \"@material-ui/core\";\r\nimport { InputControls } from \"./InputControls\";\r\nimport { PlaybackControls } from \"./PlaybackControls\";\r\nimport { UtilityControls } from \"./UtilityControls\";\r\n\r\nconst divider = <Divider orientation=\"vertical\" flexItem sx={{ m: 1 }} />;\r\n\r\nexport function Controls() {\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" elevation={0}>\r\n      <Toolbar>\r\n        <Box m={-1} display=\"flex\" alignItems=\"center\">\r\n          <InputControls />\r\n          {divider}\r\n          <PlaybackControls />\r\n          {divider}\r\n          <UtilityControls />\r\n        </Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import { Box, BoxProps } from \"@material-ui/core\";\r\nimport { ReactElement } from \"react\";\r\nimport {\r\n  Virtuoso as List,\r\n  VirtuosoHandle as Handle,\r\n  VirtuosoProps as ListProps,\r\n} from \"react-virtuoso\";\r\n\r\nexport type LazyListHandle = Handle;\r\n\r\nexport type LazyListProps<T> = {\r\n  items?: T[];\r\n  renderItem?: (item: T, index: number) => ReactElement;\r\n  listOptions?: Partial<ListProps<T>>;\r\n} & BoxProps;\r\n\r\nexport function LazyList<T>({\r\n  items = [],\r\n  renderItem,\r\n  listOptions: options,\r\n  ...props\r\n}: LazyListProps<T>) {\r\n  return (\r\n    <Box {...props}>\r\n      <List\r\n        totalCount={items.length}\r\n        itemContent={(i) => renderItem?.(items[i], i)}\r\n        {...options}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { Typography as Type } from \"@material-ui/core\";\r\nimport { FiberManualRecord as Dot } from \"@material-ui/icons\";\r\nimport { ComponentProps, ReactNode } from \"react\";\r\n\r\nexport function OverlineDot(props: ComponentProps<typeof Dot>) {\r\n  return (\r\n    <Dot\r\n      {...props}\r\n      sx={{\r\n        fontSize: 12,\r\n        transform: \"translateY(1.75px) translateX(-2px)\",\r\n        ...props.sx,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\ntype Props = {\r\n  children?: ReactNode;\r\n};\r\n\r\nexport function Overline({ children }: Props) {\r\n  return (\r\n    <Type variant=\"overline\" sx={{ my: -0.75, display: \"block\" }}>\r\n      {children}\r\n    </Type>\r\n  );\r\n}\r\n","import { Flex } from \"./Flex\";\r\nimport {\r\n  Typography as Type,\r\n  TypographyProps as TypeProps,\r\n} from \"@material-ui/core\";\r\nimport { Space } from \"./Space\";\r\nimport { ReactNode } from \"react\";\r\n\r\ntype Props = {\r\n  label?: ReactNode;\r\n  value?: ReactNode;\r\n  type?: TypeProps;\r\n};\r\n\r\nexport function Property({ label, value, type }: Props) {\r\n  return (\r\n    <Flex width=\"auto\" mr={3} mt={0.5} key={`${label}::${value}`}>\r\n      <Type sx={{ opacity: 0.54 }} {...type}>\r\n        {label}\r\n      </Type>\r\n      <Space />\r\n      <Type {...type}>{value}</Type>\r\n    </Flex>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Card,\r\n  CardActionArea,\r\n  CardProps,\r\n  Divider,\r\n  Typography as Type,\r\n} from \"@material-ui/core\";\r\nimport { HideSourceOutlined as HiddenIcon } from \"@material-ui/icons\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { Overline, OverlineDot as Dot } from \"components/generic/Overline\";\r\nimport { Property } from \"components/generic/Property\";\r\nimport { call } from \"components/script-editor/call\";\r\nimport { getColorHex } from \"components/specimen-renderer/colors\";\r\nimport { entries, filter, map } from \"lodash\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\n\r\ntype EventInspectorProps = {\r\n  event?: TraceEvent;\r\n  index?: number;\r\n  selected?: boolean;\r\n} & CardProps;\r\n\r\nexport function EventInspector({\r\n  event,\r\n  index,\r\n  selected,\r\n  ...props\r\n}: EventInspectorProps) {\r\n  const [{ specimen }] = useSpecimen();\r\n  const [{ code }, setUIState] = useUIState();\r\n\r\n  const cardStyles = selected\r\n    ? {\r\n        color: \"primary.contrastText\",\r\n        bgcolor: \"primary.main\",\r\n      }\r\n    : {};\r\n\r\n  const hidden = event\r\n    ? !call(code ?? \"\", \"shouldRender\", [\r\n        index ?? 0,\r\n        event,\r\n        specimen?.eventList ?? [],\r\n      ])\r\n    : false;\r\n\r\n  return (\r\n    <Card\r\n      {...props}\r\n      sx={{\r\n        ...cardStyles,\r\n        ...props.sx,\r\n      }}\r\n    >\r\n      <CardActionArea\r\n        sx={{ p: 2, height: \"100%\" }}\r\n        onClick={() => setUIState({ step: index })}\r\n      >\r\n        <Flex alignItems=\"center\">\r\n          <Type>{index}</Type>\r\n          <Divider sx={{ mx: 2 }} flexItem orientation=\"vertical\" />\r\n          <Box>\r\n            <Overline>\r\n              <Dot\r\n                sx={{\r\n                  color: getColorHex(event?.type),\r\n                  mr: 1,\r\n                }}\r\n              />\r\n              {`${event?.type ?? \"unsupported\"} #${event?.id ?? \"-\"}`}{\" \"}\r\n              {hidden && (\r\n                <HiddenIcon\r\n                  sx={{\r\n                    opacity: 0.56,\r\n                    fontSize: 12,\r\n                    ml: 1,\r\n                    transform: \"translateY(1.75px)\",\r\n                  }}\r\n                />\r\n              )}\r\n            </Overline>\r\n            <Flex flexWrap=\"wrap\">\r\n              {map(\r\n                filter(\r\n                  [\r\n                    [\"f\", event?.f],\r\n                    [\"g\", event?.g],\r\n                    ...entries(event?.variables),\r\n                  ],\r\n                  ([, v]) => v !== undefined\r\n                ),\r\n                ([k, v]) => (\r\n                  <Property label={k} value={v} type={{ variant: \"body2\" }} />\r\n                )\r\n              )}\r\n            </Flex>\r\n          </Box>\r\n        </Flex>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n","import { Fade } from \"@material-ui/core\";\r\nimport { Box } from \"@material-ui/system\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport {\r\n  LazyList as List,\r\n  LazyListHandle as ListHandle,\r\n  LazyListProps as ListProps,\r\n} from \"components/generic/LazyList\";\r\nimport { delay } from \"lodash\";\r\nimport { TraceEvent } from \"protocol/Trace\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { EventInspector } from \"./EventInspector\";\r\n\r\nexport function EventListInspector(props: ListProps<TraceEvent>) {\r\n  const [{ step = 0, playback }] = useUIState();\r\n  const [{ specimen }] = useSpecimen();\r\n  const ref = useRef<ListHandle | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (playback === \"paused\") {\r\n      delay(\r\n        () =>\r\n          ref?.current?.scrollToIndex?.({\r\n            index: step,\r\n            align: \"start\",\r\n            behavior: \"smooth\",\r\n            offset: -16,\r\n          }),\r\n        150\r\n      );\r\n    }\r\n  }, [step, playback]);\r\n\r\n  return (\r\n    <Fade unmountOnExit mountOnEnter in={playback === \"paused\"}>\r\n      <Box>\r\n        <List\r\n          {...props}\r\n          items={specimen?.eventList}\r\n          listOptions={{ ref }}\r\n          renderItem={(item, i) => (\r\n            <Flex p={2} pt={i ? 0 : 2}>\r\n              <EventInspector\r\n                sx={{ flex: 1 }}\r\n                event={item}\r\n                index={i}\r\n                selected={i === step}\r\n              />\r\n            </Flex>\r\n          )}\r\n        />\r\n      </Box>\r\n    </Fade>\r\n  );\r\n}\r\n","import {\r\n  Divider,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  PlaceOutlined as DestinationIcon,\r\n  TripOriginOutlined as StartIcon,\r\n} from \"@material-ui/icons\";\r\nimport { Overline } from \"components/generic/Overline\";\r\nimport { Property } from \"components/generic/Property\";\r\nimport { map } from \"lodash\";\r\nimport { useUIState } from \"slices/UIState\";\r\nimport { SelectEvent as RendererSelectEvent } from \"components/specimen-renderer/Renderer\";\r\nimport { useSnackbar } from \"components/generic/Snackbar\";\r\n\r\ntype Props = {\r\n  selection?: RendererSelectEvent;\r\n  onClose?: () => void;\r\n};\r\n\r\nexport function SelectionMenu({ selection, onClose }: Props) {\r\n  const notify = useSnackbar();\r\n  const [, setUIState] = useUIState();\r\n  const { global, world, info } = selection ?? {};\r\n  const { current, entry, node } = info ?? {};\r\n\r\n  return (\r\n    <Menu\r\n      open={!!selection}\r\n      anchorReference=\"anchorPosition\"\r\n      anchorPosition={{\r\n        top: global?.y ?? 0,\r\n        left: global?.x ?? 0,\r\n      }}\r\n      onClose={onClose}\r\n    >\r\n      <ListItem>\r\n        <ListItemText>\r\n          <Overline>Point</Overline>\r\n          <Property label=\"x\" value={world?.x ?? \"-\"} />\r\n          <Property label=\"y\" value={world?.y ?? \"-\"} />\r\n        </ListItemText>\r\n      </ListItem>\r\n      <Divider sx={{ my: 1 }} />\r\n      {map(\r\n        [\r\n          {\r\n            label: \"Set Origin\",\r\n            icon: <StartIcon sx={{ transform: \"scale(0.5)\" }} />,\r\n            action: () => {\r\n              notify(\"Origin set.\");\r\n              setUIState({ start: node?.key });\r\n            },\r\n            disabled: !node,\r\n          },\r\n          {\r\n            label: \"Set Destination\",\r\n            icon: <DestinationIcon />,\r\n            action: () => {\r\n              notify(\"Destination set.\");\r\n              setUIState({ end: node?.key });\r\n            },\r\n            disabled: !node,\r\n          },\r\n          {\r\n            label: \"Go to Expansion Step\",\r\n            action: () =>\r\n              setUIState({ step: entry?.index ?? 0, playback: \"paused\" }),\r\n            disabled: !entry,\r\n          },\r\n          {\r\n            label: \"Rewind to This Step\",\r\n            action: () =>\r\n              setUIState({ step: current?.index ?? 0, playback: \"paused\" }),\r\n            disabled: !current,\r\n          },\r\n        ],\r\n        ({ label, icon, action, disabled }) => (\r\n          <MenuItem\r\n            disabled={disabled}\r\n            onClick={() => {\r\n              action();\r\n              onClose?.();\r\n            }}\r\n          >\r\n            <ListItemIcon>{icon}</ListItemIcon>\r\n            <ListItemText>{label}</ListItemText>\r\n          </MenuItem>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n}\r\n","import { Fade, LinearProgress } from \"@material-ui/core\";\r\nimport { Flex, FlexProps } from \"components/generic/Flex\";\r\nimport { getRenderer } from \"components/specimen-renderer/getRenderer\";\r\nimport { SelectEvent as RendererSelectEvent } from \"components/specimen-renderer/Renderer\";\r\nimport { some, values } from \"lodash\";\r\nimport { createElement, useState } from \"react\";\r\nimport AutoSize from \"react-virtualized-auto-sizer\";\r\nimport { useLoading } from \"slices/loading\";\r\nimport { useSpecimen } from \"slices/specimen\";\r\nimport { EventListInspector } from \"./EventListInspector\";\r\nimport { SelectionMenu } from \"./SelectionMenu\";\r\n\r\ntype SpecimenInspectorProps = {} & FlexProps;\r\n\r\nexport function SpecimenInspector(props: SpecimenInspectorProps) {\r\n  const [loading] = useLoading();\r\n  const [{ specimen, mapType, map }] = useSpecimen();\r\n  const [renderer] = getRenderer(mapType);\r\n  const [selection, setSelection] = useState<RendererSelectEvent | undefined>(\r\n    undefined\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Fade in={some(values(loading))}>\r\n        <LinearProgress variant=\"indeterminate\" sx={{ mb: -0.5, zIndex: 1 }} />\r\n      </Fade>\r\n      <Flex {...props}>\r\n        {specimen ? (\r\n          <Flex>\r\n            <AutoSize>\r\n              {(size) =>\r\n                createElement(renderer, {\r\n                  ...size,\r\n                  key: map,\r\n                  onSelect: setSelection,\r\n                  selection: selection?.world,\r\n                })\r\n              }\r\n            </AutoSize>\r\n            <EventListInspector\r\n              position=\"absolute\"\r\n              right={0}\r\n              height=\"100%\"\r\n              maxWidth={480}\r\n              minWidth=\"30vw\"\r\n            />\r\n          </Flex>\r\n        ) : (\r\n          <Flex\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            color=\"text.secondary\"\r\n          >\r\n            Select a map and an algorithm to get started.\r\n          </Flex>\r\n        )}\r\n      </Flex>\r\n      <SelectionMenu\r\n        selection={selection}\r\n        onClose={() => setSelection(undefined)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { AppBar, Divider, Toolbar, Typography } from \"@material-ui/core\";\r\n\r\nexport function Title() {\r\n  return (\r\n    <AppBar\r\n      position=\"static\"\r\n      elevation={0}\r\n      sx={{ background: \"white\", color: \"black\" }}\r\n    >\r\n      <Toolbar>\r\n        <Typography variant=\"h6\">Path Search Visualiser</Typography>\r\n      </Toolbar>\r\n      <Divider />\r\n    </AppBar>\r\n  );\r\n}\r\n","import { Controls } from \"components/control-bar/Controls\";\r\nimport { Flex } from \"components/generic/Flex\";\r\nimport { SpecimenInspector } from \"components/specimen-inspector/SpecimenInspector\";\r\nimport { Title } from \"components/Title\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Flex vertical>\r\n      <Flex vertical boxShadow={4} height=\"auto\" zIndex={1}>\r\n        <Title />\r\n        <Controls />\r\n      </Flex>\r\n      <SpecimenInspector flex={1} />\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { CssBaseline, ThemeProvider } from \"@material-ui/core\";\r\nimport { theme } from \"client/theme\";\r\nimport { SnackbarProvider } from \"components/generic/Snackbar\";\r\nimport { StrictMode } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { ConnectionStateService } from \"services/ConnectionStateService\";\r\nimport { PlaybackService } from \"services/PlaybackService\";\r\nimport { SpecimenService } from \"services/SpecimenService\";\r\nimport { FeaturesProvider } from \"slices/features\";\r\nimport { InfoProvider } from \"slices/info\";\r\nimport { LoadingProvider } from \"slices/loading\";\r\nimport { SliceProvider as AppStateProvider } from \"slices/SliceProvider\";\r\nimport { SpecimenProvider } from \"slices/specimen\";\r\nimport { UIStateProvider } from \"slices/UIState\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst slices = [\r\n  InfoProvider,\r\n  FeaturesProvider,\r\n  UIStateProvider,\r\n  SpecimenProvider,\r\n  LoadingProvider,\r\n];\r\n\r\nconst services = [ConnectionStateService, PlaybackService, SpecimenService];\r\n\r\nrender(\r\n  <StrictMode>\r\n    <CssBaseline>\r\n      <ThemeProvider theme={theme}>\r\n        <SnackbarProvider>\r\n          <AppStateProvider slices={slices} services={services}>\r\n            <App />\r\n          </AppStateProvider>\r\n        </SnackbarProvider>\r\n      </ThemeProvider>\r\n    </CssBaseline>\r\n  </StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
Current Work Todo

DONE

[x] Hover over

[x] Line back to source from current


OPEN

[ ] More work on the map

[ ] Connect the warthog, update the search trace protocol

[ ] Create merger of eventList information so that delta eventLists will work

[ ] Settings for line back to source, whether it generates path/node or both

[ ] only shows path back to source when right click

[ ] show the continuations of the node when click

[ ] Window system for multiple views - side by side
- [x] As a parent component relative to xxxStage
- [x] Manage the window system
- [ ] Choose which Stage to use in each of the view and toggle tree view when user doesn't define one

[ ] Convert more Search Traces into current format
 - [*] Grid Trace
 - [*] Road Network Trace
 - [*] Mesh Trace
 - [*] Tree Trace
 - [*] 9 Tile Puzzle Trace
 - [ ] Multi Agent Path Finder
 - [ ] Bidirectional (Grid/Road versions) Trace

[ ] Documentation

[ ] Create the functions which generate x and y coordinates for the tree view.

[ ] Trace zoom 




QUESTION

[x] Current playback system
- Currently it works by adding x steps every tick (where x is determined by playbackRate) (this way allows for faster drawing)
- Should we change it so its reversed, 1 step every x ticks (x is playbackRate) (this way allows for slower drawing)
+ combine both

FINISHED

[x] A function that create Renderer component according to views definiation
- pass down the view definition to the canvas

[x] Create a stage for the PIXI renderer - renderer
- takes in the intermediate language
- provide add/delete function for each child nodelist

[x] Nodelist and LazyNodelist
- generic for stages/renderers
- caching the nodes
- use the add/delete function to 

[x] Draw the map

[x] Add eventlist.context to converter, computed props

[x] Nodelist config the cacheSize & type to setting slice

[x] Current playback system won't support unpersisted component.

[x] Playback component for animation support - render/renderer/generic/Playback.tsx
- layered system for tiles




[x] Dark mode

[x] Refactor render data strucure to node based instead of event based

[x] An Context system for intermediate language - parser
- something like a speciman context
- takes in the search trace
- provide intermediate language for the renderer

[x] Fix issue where if the parent undefined (starting event or something) the application wont error (if they used something like parent.x) (this is techincally fixed but probs a better way todo it)

[x] Maybe make the text property in the search traces an Object with properties like displayText, Colour, position (relative to parent Object) etc. Also maybe add some more properties to existing primitives like a lineWidth to the path primitive. 

[*] Provide a set of pre-defined components/views for user to choose from
- user could display the search trace without defining views and components

[*] Allow for the two different view types to be drawn (search and state views)